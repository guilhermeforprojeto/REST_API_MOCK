{
  "openapi": "3.0.1",
  "info": {
    "title": "Radar.API",
    "description": "API de integração com o WK Radar.\r\n\r\n# Introdução\r\n\r\nAs APIs do WK Radar oferecem aos desenvolvedores e parceiros a capacidade de acessar e utilizar os recursos de nosso sistema de forma padronizada e simplificada, ampliando assim as possibilidades de personalização, automação e expansão de suas aplicações, contribuindo para a agilidade, escalabilidade e inovação em nossos produtos e serviços, proporcionando uma experiência mais completa e integrada para nossos usuários finais. Elas contemplam diversas soluções que estão disponíveis no ERP, integrando diversos processos de diferentes módulos da linha WK Radar.\r\n\r\n# Throttling\r\n\r\nO throttling em uma API ASP.NET Core refere-se a controlar a taxa de requisições que um cliente pode fazer em um determinado período, protegendo o servidor contra sobrecargas e assegurando uma distribuição justa de recursos.\r\n\r\n## Como Funciona?\r\n\r\nTodas as requisições à Radar.API são limitadas a 4 por segundo. Quando esse limite é atingido, a requisição é barrada, retornando \"Too Many Requests\" (429). Aguarde o tempo necessário para realizar uma nova requisição.\r\n\r\n# Data Shaping\r\n\r\nData shaping permite moldar a estrutura e conteúdo dos dados retornados por uma API, permitindo que os clientes solicitem apenas as informações necessárias. Geralmente, é implementado com parâmetros de consulta para melhorar a eficiência da transmissão de dados, reduzindo a quantidade de informações enviadas pela rede.\r\n\r\n## Como Funciona?\r\n\r\nO filtro de todas as buscas na Radar.API inclui o campo Fields, onde você pode especificar os campos desejados na resposta da requisição.\r\n\r\nO campo Fields é uma string que contém os nomes dos campos separados por vírgula. Exemplo: Fields=Id,Nome,Email. Personalize suas consultas para obter apenas as informações relevantes para suas necessidades.\r\n\r\n# Id de integrador\r\n\r\nCaso o token do integrador seja informado no login (através do campo IdIntegrador), é possível vincular um código personalizado do integrador ao registro.\r\n\r\n## Como Funciona?\r\n\r\nCaso tenha sido vinculado um código de integrador a um registro (utilizando o campo CodigoIntegrador), é possível buscar o registro através desse código, através do campo CodigosIntegrador.\r\n\r\n# Retornos HTTP\r\n\r\n### <span style=\"color:green\">Sucesso</span>\r\n\r\n- [200] Execução realizada com sucesso.\r\n- [201] Registro criado, com retorno dos respectivos Ids.\r\n- [204] Atualização ou exclusão bem sucedida.\r\n\r\n### <span style=\"color:#fcba03\">Erros de Requisição</span>\r\n\r\n- [400] O servidor não conseguiu processar os dados da requisição (URI, headers, body...).\r\n- [401] Usuário não autorizado. Bearer Token inválido.\r\n- [403] Usuário não tem permissão para usar a rota. Verifique no cadastro de usuários.\r\n- [404] URL válida, porém conteúdo não encontrado. Verifique os atributos da requisição.\r\n- [405] Método HTTP não permitido para essa rota.\r\n- [429] Aguarde o tempo necessário para realizar uma nova requisição.\r\n\r\n### Erro 403\r\n\r\nCaso o usuário não possua permissão para utilizar a rota, é necessário adicioná-la nas permissões de Usuário de Sistema e gerar um novo token de autorização na rota **Token** ou aguardar **10 minutos** até atualização geral no sistema.\r\n\r\n### <span style=\"color:#a30202\">Erros de Servidor</span>\r\n\r\n- [500] Erro interno do servidor.\r\n",
    "version": "main",
    "x-logo": {
      "url": "https://wk.com.br/wp-content/uploads/2021/11/nova-logo-wk.png",
      "altText": "WK"
    }
  },
  "paths": {
    "/api/comercial/v1/acompanhamento-pedido-fluxo/{id}": {
      "get": {
        "tags": [
          "AcompanhamentoPedidoFluxo"
        ],
        "summary": "Leitura do Acompanhamento de Pedidos - Fluxos pelo ID",
        "description": "Lê um Fluxo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Fluxo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoFluxo.Read.ReadAcompanhamentoPedidoFluxoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/acompanhamento-pedido-fluxo": {
      "get": {
        "tags": [
          "AcompanhamentoPedidoFluxo"
        ],
        "summary": "Busca de Acompanhamento de Pedidos - Fluxos",
        "description": "Lê uma lista de Fluxos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoFluxo.Read.ReadAcompanhamentoPedidoFluxoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/acompanhamento-pedido-processo/{id}": {
      "get": {
        "tags": [
          "AcompanhamentoPedidoProcesso"
        ],
        "summary": "Leitura do Acompanhamento de Pedidos - Processos pelo ID",
        "description": "Lê um processo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do processo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoProcesso.Read.ReadAcompanhamentoPedidoProcessoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/acompanhamento-pedido-processo": {
      "get": {
        "tags": [
          "AcompanhamentoPedidoProcesso"
        ],
        "summary": "Busca de Acompanhamento de Pedidos - Processos",
        "description": "Lê uma lista de processos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoProcesso.Read.ReadAcompanhamentoPedidoProcessoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/acompanhamento-pedido-situacao/{id}": {
      "get": {
        "tags": [
          "AcompanhamentoPedidoSituacao"
        ],
        "summary": "Leitura do Acompanhamento de Pedidos - Situações pelo ID",
        "description": "Lê uma Situação com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Situação a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoSituacao.Read.ReadAcompanhamentoPedidoSituacaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/acompanhamento-pedido-situacao": {
      "get": {
        "tags": [
          "AcompanhamentoPedidoSituacao"
        ],
        "summary": "Busca de Acompanhamento de Pedidos - Situações",
        "description": "Lê uma lista de Situações com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoSituacao.Read.ReadAcompanhamentoPedidoSituacaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/adiantamento/{id}": {
      "get": {
        "tags": [
          "Adiantamento"
        ],
        "summary": "Leitura de Adiantamento pelo ID",
        "description": "Lê um Adiantamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Adiantamento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/adiantamento": {
      "get": {
        "tags": [
          "Adiantamento"
        ],
        "summary": "Busca de Adiantamentos",
        "description": "Lê uma lista de adiantamentos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdTesouraria",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdEstornoVinculado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdTituloVinculado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdBaixaVinculada",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdCFRT",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ValorAberto",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "MesAnoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "01/2024"
            }
          },
          {
            "name": "MesAnoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "01/2024"
            }
          },
          {
            "name": "SomenteEmAberto",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PossuiVinculoEstorno",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "PossuiVinculoBaixa",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/admissao-preliminar": {
      "post": {
        "tags": [
          "AdmissaoPreliminar"
        ],
        "summary": "Gravação de Admissões Preliminares",
        "description": "Grava uma lista de admissões preliminares com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de admissões preliminares a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.CreateAdmissaoPreliminarDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.CreateAdmissaoPreliminarDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "AdmissaoPreliminar"
        ],
        "summary": "Busca de Admissões Preliminares",
        "description": "Lê uma lista de Admissões Preliminares com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint64"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataAdmissaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataAdmissaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "CategoriaEsocial",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.FiltroTipoCategoriaeSocialDto"
            }
          },
          {
            "name": "TipoContrato",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.FiltroTipoContratoDto"
            }
          },
          {
            "name": "TipoExcluido",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoExcluidoDto"
            }
          },
          {
            "name": "CPF",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.ReadAdmissaoPreliminarDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/admissao-preliminar/{id}": {
      "get": {
        "tags": [
          "AdmissaoPreliminar"
        ],
        "summary": "Leitura de Admissão Preliminar pelo ID",
        "description": "Lê uma admissão preliminar com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da admissão preliminar a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.ReadAdmissaoPreliminarDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "AdmissaoPreliminar"
        ],
        "summary": "Atualização de Admissão Preliminar",
        "description": "Atualiza a admissão preliminar com o ID igual ao informado na URL da requisição com base nos dados do body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da admissão preliminar a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Novos dados da admissão preliminar.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.UpdateAdmissaoPreliminarDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.UpdateAdmissaoPreliminarDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "delete": {
        "tags": [
          "AdmissaoPreliminar"
        ],
        "summary": "Exclusão da Admissão Preliminar pelo ID",
        "description": "Exclui uma Admissão Preliminar com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Admissão Preliminar a ser excluída.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/folha/v1/afastamento": {
      "post": {
        "tags": [
          "Afastamento"
        ],
        "summary": "Gravação de Afastamentos",
        "description": "Grava uma lista de Afastamentos com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Afastamentos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Afastamento.CreateAfastamentoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Afastamento.CreateAfastamentoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Afastamento"
        ],
        "summary": "Busca de Afastamentos",
        "description": "Lê uma lista de Afastamentos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdEmpregado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "VigenciaInicio",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "VigenciaTermino",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Situacoes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Afastamento.ReadAfastamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/afastamento/{id}": {
      "get": {
        "tags": [
          "Afastamento"
        ],
        "summary": "Leitura de Afastamentos pelo ID",
        "description": "Lê um Afastamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Afastamento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Afastamento.ReadAfastamentoDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Afastamento"
        ],
        "summary": "Exclusão do Afastamento pelo ID",
        "description": "Exclui um Afastamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Afastamento a ser excluído.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/folha/v2/afastamento": {
      "get": {
        "tags": [
          "Afastamento"
        ],
        "summary": "Busca de Afastamentos",
        "description": "Lê uma lista de Afastamentos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdEmpregado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "TipoPeriodo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Afastamento.Enums.FiltroTipoPeriodoDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.FiltroSituacaoDto"
            }
          },
          {
            "name": "Situacoes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Afastamento.ReadAfastamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/apontamento/produto/processo-final": {
      "post": {
        "tags": [
          "Apontamento"
        ],
        "summary": "Gravação de Apontamento de Processo Final",
        "description": "Grava um Apontamento de Processo Final com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Apontamento de Processo Final a ser gravado. Aviso: No momento não estará disponível a gravação de mais de um apontamento por JSON.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreateApontamentoProcessoFinalDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreateApontamentoProcessoFinalDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/apontamento/produto/processo-intermediario": {
      "post": {
        "tags": [
          "Apontamento"
        ],
        "summary": "Gravação de Apontamento de Processo Intermediário",
        "description": "Grava um Apontamento de Processo Intermediário com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Apontamento de Processo Intermediário a ser gravado. Aviso: No momento não estará disponível a gravação de mais de um apontamento por JSON.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoIntermediario.Create.CreateApontamentoProcessoIntermediarioDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoIntermediario.Create.CreateApontamentoProcessoIntermediarioDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/apontamento-efetuado/produto/{id}": {
      "get": {
        "tags": [
          "ApontamentoEfetuado"
        ],
        "summary": "Leitura de Apontamento Efetuado pelo ID",
        "description": "Lê um Apontamento Efetuado com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Apontamento Efetuado a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadApontamentoEfetuadoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/apontamento-efetuado/produto": {
      "get": {
        "tags": [
          "ApontamentoEfetuado"
        ],
        "summary": "Busca de Apontamentos Efetuados",
        "description": "Lê uma lista de Apontamentos Efetuados com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "InicioPeriodo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "FinalPeriodo",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Produtos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "IdsFilial",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsHorario",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsTipoOP",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsFluxo",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsProcesso",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsOperacao",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdInfoSuplementar1",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdInfoSuplementar2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdInfoSuplementar3",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IntegracaoPendente",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ReadApontamentoEfetuadoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/baixa-contas-pagar": {
      "post": {
        "tags": [
          "BaixaContasPagar"
        ],
        "summary": "Gravação de Baixas de Contas a Pagar",
        "description": "Grava uma lista de Baixas de Contas a Pagar com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Baixas de Contas a Pagar a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasPagar.CreateBaixaContasPagarDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasPagar.CreateBaixaContasPagarDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retornar a lista de Baixas de Contas a Pagar gravadas.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasPagar.CreateBaixaContasPagarDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BaixaContasPagar"
        ],
        "summary": "Busca de Baixas de Contas a Pagar",
        "description": "Lê uma lista de baixas de contas a pagar com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdCedente",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdTitulo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "TipoData",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Baixa.TipoDataDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasPagar.ReadBaixaContasPagarDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/baixa-contas-pagar/{id}": {
      "get": {
        "tags": [
          "BaixaContasPagar"
        ],
        "summary": "Leitura de Baixa de Contas a Pagar pelo ID",
        "description": "Lê uma baixa de contas a pagar com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da baixa de contas a pagar a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasPagar.ReadBaixaContasPagarDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BaixaContasPagar"
        ],
        "summary": "Exclusão de Baixa de Contas a Pagar pelo ID",
        "description": "Exclui uma Baixa de Contas a Pagar com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Baixa de Contas a Pagar a ser excluída.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/financeiro/v1/baixa-contas-pagar/substituicao": {
      "post": {
        "tags": [
          "BaixaContasPagar"
        ],
        "summary": "Gravação de Baixas de Substituição de títulos de Contas a Pagar",
        "description": "Grava uma lista de Baixas de Substituição de títulos de Contas a Pagar com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Baixas de Contas a Pagar com a lista de Títulos a Substituir e a lista de Títulos Substitutos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateSubstituicaoContasPagarDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateSubstituicaoContasPagarDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retornar a lista de IDs dos Títulos de Contas a Pagar Substitutos gravados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/baixa-contas-receber": {
      "post": {
        "tags": [
          "BaixaContasReceber"
        ],
        "summary": "Gravação de Baixas de Contas a Receber",
        "description": "Grava uma lista de Baixas de Contas a Receber com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Baixas de Contas a Receber a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasReceber.CreateBaixaContasReceberDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasReceber.CreateBaixaContasReceberDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retornar a lista de Baixas de Contas a Receber gravadas.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasReceber.CreateBaixaContasReceberDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "BaixaContasReceber"
        ],
        "summary": "Busca de Baixas de Contas a Receber",
        "description": "Lê uma lista de baixas de contas a receber com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdSacado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdTitulo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "TipoData",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Baixa.TipoDataDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasReceber.ReadBaixaContasReceberDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/baixa-contas-receber/{id}": {
      "get": {
        "tags": [
          "BaixaContasReceber"
        ],
        "summary": "Leitura de Baixa de Contas a Receber pelo ID",
        "description": "Lê uma baixa de contas a receber com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da baixa de contas a receber a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.BaixaContasReceber.ReadBaixaContasReceberDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BaixaContasReceber"
        ],
        "summary": "Exclusão de Baixa de Contas a Receber pelo ID",
        "description": "Exclui uma Baixa de Contas a Receber com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Baixa de Contas a Receber a ser excluída.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/financeiro/v1/baixa-contas-receber/substituicao": {
      "post": {
        "tags": [
          "BaixaContasReceber"
        ],
        "summary": "Gravação de Baixas de Substituição de títulos de Contas a Receber",
        "description": "Grava uma lista de Baixas de Substituição de títulos de Contas a Receber com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Baixas de Contas a Receber com a lista de Títulos a Substituir e a lista de Títulos Substitutos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateSubstituicaoContasReceberDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateSubstituicaoContasReceberDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retornar a lista de IDs dos Títulos de Contas a Receber Substitutos gravados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/cadastro-info-plus/{id}": {
      "get": {
        "tags": [
          "CadastroInfoPlus"
        ],
        "summary": "Leitura do cadastro de Info Plus pelo ID",
        "description": "Lê um cadastro de Info Plus com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cadastro de Info Plus a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CadastroInfoPlus.ReadCadastroInfoPlusDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/cadastro-info-plus": {
      "get": {
        "tags": [
          "CadastroInfoPlus"
        ],
        "summary": "Busca do cadastro de Info Plus",
        "description": "Lê uma lista de cadastros do Info Plus com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Processo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.TipoProcessoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CadastroInfoPlus.ReadCadastroInfoPlusDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/cargo/{id}": {
      "get": {
        "tags": [
          "Cargo"
        ],
        "summary": "Leitura de Cargos do tipo cargo pelo ID",
        "description": "Lê um cargo do tipo cargo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cargo do tipo cargo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Cargo.ReadCargoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/cargo": {
      "get": {
        "tags": [
          "Cargo"
        ],
        "summary": "Busca de Cargos do tipo cargo",
        "description": "Lê uma lista de Cargos do tipo cargo com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdCbo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Cargo.ReadCargoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/carteira-cobranca/{id}": {
      "get": {
        "tags": [
          "CarteiraCobranca"
        ],
        "summary": "Leitura de Carteira de Cobrança pelo ID",
        "description": "Lê uma Carteira de Cobrança com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Carteira de Cobrança a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.CarteiraCobranca.ReadCarteiraCobrancaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/carteira-cobranca": {
      "get": {
        "tags": [
          "CarteiraCobranca"
        ],
        "summary": "Busca de Carteiras de Cobrança",
        "description": "Lê uma lista de Carteiras de Cobrança com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.CarteiraCobranca.ReadCarteiraCobrancaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/categoria-adiantamento/{id}": {
      "get": {
        "tags": [
          "CategoriaAdiantamento"
        ],
        "summary": "Leitura de Categoria de Adiantamento pelo ID",
        "description": "Lê uma Categoria de Adiantamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Categoria de Adiantamento a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.CategoriaAdiantamento.ReadCategoriaAdiantamentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/categoria-adiantamento": {
      "get": {
        "tags": [
          "CategoriaAdiantamento"
        ],
        "summary": "Busca de Categorias de Adiantamento",
        "description": "Lê uma lista de Categorias de Adiantamento com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 11,
              "type": "string"
            }
          },
          {
            "name": "IdConta",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.CategoriaAdiantamento.ReadCategoriaAdiantamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/categoria-cfrt/{id}": {
      "get": {
        "tags": [
          "CategoriaCFRT"
        ],
        "summary": "Leitura do cadastro de Categorias de CFRT pelo ID",
        "description": "Lê uma Categoria de CFRT com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cadastro de Categoria de CFRT a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CategoriaCFRT.ReadCategoriaCFRTDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/categoria-cfrt": {
      "get": {
        "tags": [
          "CategoriaCFRT"
        ],
        "summary": "Busca do cadastro de Categorias de CFRT",
        "description": "Lê uma lista de Categorias de CFRT com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Grupo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CategoriaCFRT.GrupoCategoriaCFRTFiltroDto"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*1), depois (1\\*), ou antes e depois do código (\\*1\\*). Ao usar o caractere coringa, será retornado todas as Categorias de Produto que começarem e/ou terminarem com o código informado.",
            "schema": {
              "maxLength": 9,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*Teste), depois (Teste\\*), ou antes e depois do texto (\\*Teste\\*). Ao usar o caractere coringa, será retornado todas as Categorias de Produto que começarem e/ou terminarem com o texto informado.",
            "schema": {
              "maxLength": 64,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CategoriaCFRT.ReadCategoriaCFRTDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/categoria-produto/{id}": {
      "get": {
        "tags": [
          "CategoriaProduto"
        ],
        "summary": "Leitura do cadastro de Categorias de Produto pelo ID",
        "description": "Lê uma Categoria de Produto com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cadastro de Categoria de Produto a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CategoriaProduto.ReadCategoriaProdutoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/categoria-produto": {
      "get": {
        "tags": [
          "CategoriaProduto"
        ],
        "summary": "Busca do cadastro de Categorias de Produto",
        "description": "Lê uma lista de Categorias de Produto com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Grupo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CategoriaProduto.GrupoCategoriaProdutoFiltroDto"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*1), depois (1\\*), ou antes e depois do código (\\*1\\*). Ao usar o caractere coringa, será retornado todas as Categorias de Produto que começarem e/ou terminarem com o código informado.",
            "schema": {
              "maxLength": 9,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*Teste), depois (Teste\\*), ou antes e depois do texto (\\*Teste\\*). Ao usar o caractere coringa, será retornado todas as Categorias de Produto que começarem e/ou terminarem com o texto informado.",
            "schema": {
              "maxLength": 64,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CategoriaProduto.ReadCategoriaProdutoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/cbo/{id}": {
      "get": {
        "tags": [
          "Cbo"
        ],
        "summary": "Leitura de CBO pelo ID",
        "description": "Lê um CBO com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do CBO a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Cbo.ReadCboDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/cbo": {
      "get": {
        "tags": [
          "Cbo"
        ],
        "summary": "Busca de CBOs",
        "description": "Lê uma lista de CBOs com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tipo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Cbo.Enums.TipoCboDto"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Cbo.ReadCboDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/centro-custo/{id}": {
      "get": {
        "tags": [
          "CentroCusto"
        ],
        "summary": "Leitura de Centro de Custo Analítico pelo ID",
        "description": "Lê um centro de custo analítico com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do centro de custo analítico a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.CentroCusto.ReadCentroCustoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/centro-custo": {
      "get": {
        "tags": [
          "CentroCusto"
        ],
        "summary": "Busca de Centros de Custos Analíticos",
        "description": "Lê uma lista de Centros de Custos Analíticos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Caracteristica",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.CentroCusto.Enums.TipoCaracteristicaDto"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.CentroCusto.ReadCentroCustoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/cliente/{id}": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Leitura de Cliente pelo ID",
        "description": "Lê um Cliente com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Cliente a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Cliente.ReadClienteDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/cliente": {
      "get": {
        "tags": [
          "Cliente"
        ],
        "summary": "Busca de Clientes",
        "description": "Lê uma lista de Clientes com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "TipoPessoa",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaFiltroDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "RazaoSocial",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "NomeFantasia",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "IdVendedor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdRepresentante",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdMunicipio",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "schema": {
              "maxLength": 2,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra1",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra2",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra3",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra4",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "DataHoraGravacaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DataHoraGravacaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CpfCnpj",
            "in": "query",
            "schema": {
              "maxLength": 18,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Cliente.ReadClienteDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/cobranca": {
      "post": {
        "tags": [
          "Cobranca"
        ],
        "summary": "Gravação de Cobrança",
        "description": "Grava uma lista de cobranças com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Cobranças a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Cobranca.CreateCobrancaDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Cobranca.CreateCobrancaDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retornar a lista de cobranças gravadas.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Cobranca.CreateCobrancaDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cobranca"
        ],
        "summary": "Consulta boleto de Cobrança pelo ID do Título.",
        "description": "Download de um boleto de Cobrança com base no ID do Título informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdTitulo",
            "in": "query",
            "description": "ID do Título do boleto de Cobrança a ser feito o Download.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "FormatoNomePdf",
            "in": "query",
            "description": "Formato desejado para o nome do arquivo do boleto.\r\n\r\nMemórias disponíveis:\r\n- [CLASSIFICACAO]\r\n- [CLIENTE]\r\n- [CNPJ CLIENTE]\r\n- [COD CLIENTE]\r\n- [NR. DOCUMENTO]\r\n- [VENCIMENTO]",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/cobranca/{id}": {
      "delete": {
        "tags": [
          "Cobranca"
        ],
        "summary": "Cancelamento de boleto de Cobrança Online pelo ID do Título",
        "description": "Cancela um boleto de Cobrança Online com base no ID do Título informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Título do boleto de Cobrança Online a ser cancelado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/empresarial/v1/comprador/{id}": {
      "get": {
        "tags": [
          "Comprador"
        ],
        "summary": "Leitura de Comprador pelo ID",
        "description": "Lê um Comprador com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Comprador a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Comprador.ReadCompradorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/comprador": {
      "get": {
        "tags": [
          "Comprador"
        ],
        "summary": "Busca de Compradores",
        "description": "Lê uma lista de Compradores com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 5,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dados.Filtro.FiltroAtivoInativo"
            }
          },
          {
            "name": "IdUsuario",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Comprador.ReadCompradorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/condicao-pagamento/{id}": {
      "get": {
        "tags": [
          "CondicaoPagamento"
        ],
        "summary": "Leitura de Condição de Pagamento pelo ID",
        "description": "Lê uma Condição de Pagamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Condição de Pagamento a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CondicaoPagamento.ReadCondicaoPagamentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/condicao-pagamento": {
      "get": {
        "tags": [
          "CondicaoPagamento"
        ],
        "summary": "Busca de Condições de Pagamento",
        "description": "Lê uma lista de Condições de Pagamento com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Modulos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CondicaoPagamento.ModuloCondicaoPagamentoDto"
              }
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "ValidadeInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ValidadeFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IdTipoPeriodo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CondicaoPagamento.ReadCondicaoPagamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/conselho": {
      "post": {
        "tags": [
          "Conselho"
        ],
        "summary": "Gravação de Conselhos",
        "description": "Grava uma lista de conselhos com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de conselhos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Conselho.CreateConselhoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Conselho.CreateConselhoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Conselho"
        ],
        "summary": "Busca de Conselhos",
        "description": "Lê uma lista de conselhos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Sigla",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Conselho.ReadConselhoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/conselho/{id}": {
      "get": {
        "tags": [
          "Conselho"
        ],
        "summary": "Leitura de Conselho pelo ID",
        "description": "Lê um conselho com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do conselho a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Conselho.ReadConselhoDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Conselho"
        ],
        "summary": "Atualização de Conselho",
        "description": "Atualiza o conselho com o ID igual ao informado na URL da requisição com base nos dados do body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do conselho a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Novos dados do conselho.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Conselho.UpdateConselhoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Conselho.UpdateConselhoDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/empresarial/v1/contato/{id}": {
      "get": {
        "tags": [
          "Contato"
        ],
        "summary": "Leitura de Contato pelo ID",
        "description": "Lê um Contato com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Contato a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Contato.ReadContatoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/contrato": {
      "post": {
        "tags": [
          "Contrato"
        ],
        "summary": "Gravação de Contratos",
        "description": "Grava uma lista de contratos com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de contratos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateContratoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateContratoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadContratoDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Contrato"
        ],
        "summary": "Busca de Contratos",
        "description": "Lê uma lista de Contratos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Numero",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoContrato",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoContratoDto"
            }
          },
          {
            "name": "SituacaoContrato",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoSituacaoDto"
            }
          },
          {
            "name": "TipoRenovacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoFiltroRenovacaoDto"
            }
          },
          {
            "name": "DataContratoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataContratoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataAssinaturaInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataAssinaturaFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataSituacaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataSituacaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFaturamentoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFaturamentoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ContratoOriginal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdIndice",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdCliente",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdCliente2",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdClassificacao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdGerencial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdServico",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadContratoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/contrato/{id}": {
      "get": {
        "tags": [
          "Contrato"
        ],
        "summary": "Leitura de Contrato pelo ID",
        "description": "Lê um Contrato com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Contrato a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadContratoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/compras/v1/cotacao": {
      "post": {
        "tags": [
          "Cotacao"
        ],
        "summary": "Gravação de Cotações",
        "description": "Grava uma lista de Cotações com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Cotações a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateCotacaoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateCotacaoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateCotacaoDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Cotacao"
        ],
        "summary": "Busca de Cotações",
        "description": "Lê uma lista de Cotações com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "ChaveSolicitacao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "IdFornecedor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataCotacaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataCotacaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataHoraBaseAlteracao",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "ProdutosServicos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "IdClassificacao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdGerencial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdRequisitante",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdDepartamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdComprador",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoSituacaoCotacaoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadCotacaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compras/v1/cotacao/{id}": {
      "get": {
        "tags": [
          "Cotacao"
        ],
        "summary": "Leitura de Cotações pelo ID",
        "description": "Lê uma Cotação com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Cotação a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadCotacaoDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cotacao"
        ],
        "summary": "Exclusão de Cotação pelo ID",
        "description": "Exclui uma Cotação com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Cotação a ser excluída.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/gerenciador/v1/defeito": {
      "post": {
        "tags": [
          "Defeito"
        ],
        "summary": "Gravação de Defeitos",
        "description": "Grava uma lista de Defeitos com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Defeitos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Defeito.CreateDefeitoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Defeito.CreateDefeitoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Defeito"
        ],
        "summary": "Busca de Defeitos",
        "description": "Lê uma lista de Defeitos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Defeito",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Defeito.ReadDefeitoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/defeito/{id}": {
      "get": {
        "tags": [
          "Defeito"
        ],
        "summary": "Leitura de Defeito pelo ID",
        "description": "Lê um Defeito com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de Defeito a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Defeito.ReadDefeitoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/departamento/{id}": {
      "get": {
        "tags": [
          "Departamento"
        ],
        "summary": "Leitura de Departamento pelo ID",
        "description": "Lê um Departamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Departamento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Departamento.ReadDepartamentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/departamento": {
      "get": {
        "tags": [
          "Departamento"
        ],
        "summary": "Busca de Departamentos",
        "description": "Lê uma lista de Departamentos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdUsuario",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ativo",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "ApenasFilialZero",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Departamento.ReadDepartamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/departamento-folha/{id}": {
      "get": {
        "tags": [
          "DepartamentoFolha"
        ],
        "summary": "Leitura de Departamentos pelo ID",
        "description": "Lê um departamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do departamento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Departamento.ReadDepartamentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/departamento-folha": {
      "get": {
        "tags": [
          "DepartamentoFolha"
        ],
        "summary": "Busca de Departamento",
        "description": "Lê uma lista de Departamento com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Departamento.ReadDepartamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/documento/{id}": {
      "get": {
        "tags": [
          "Documento"
        ],
        "summary": "Leitura de Documento pelo ID",
        "description": "Lê um Documento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Documento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Documento.ReadDocumentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/documento": {
      "get": {
        "tags": [
          "Documento"
        ],
        "summary": "Busca de Documentos",
        "description": "Lê uma lista de Documentos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Modulos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Documento.ModuloDocumentoDto"
              }
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "description": "Id da filial do documento. Informe o valor vazio (null) para não serem filtrados, 0 para trazer os válidos em todas as filiais ou um Id para o filtro.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Especie",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "Serie",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Documento.TipoSituacaoDocumentoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Documento.ReadDocumentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/empregado/{id}": {
      "get": {
        "tags": [
          "Empregado"
        ],
        "summary": "Leitura de Empregado pelo ID",
        "description": "Lê um Empregado com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Empregado a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.ReadEmpregadoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/empregado": {
      "get": {
        "tags": [
          "Empregado"
        ],
        "summary": "Busca de Empregados",
        "description": "Lê uma lista de Empregados com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint64"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Cpf",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataAdmissaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataAdmissaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataDemissaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataDemissaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IdCargo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdDepartamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdCentroCusto",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdEscala",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdSindicato",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoContrato",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.FiltroTipoContratoDto"
            }
          },
          {
            "name": "TipoExcluido",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoExcluidoDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.FiltroSituacaoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.ReadEmpregadoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/equipamento": {
      "post": {
        "tags": [
          "Equipamento"
        ],
        "summary": "Gravação de Equipamentos",
        "description": "Grava uma lista de equipamentos com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de equipamentos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Equipamento.CreateEquipamentoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Equipamento.CreateEquipamentoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Equipamento.ReadEquipamentoDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Equipamento"
        ],
        "summary": "Busca de Equipamentos",
        "description": "Lê uma lista de Equipamentos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "IdMarca",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdModelo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Equipamento.ReadEquipamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/equipamento/{id}": {
      "get": {
        "tags": [
          "Equipamento"
        ],
        "summary": "Leitura de Equipamento pelo ID",
        "description": "Lê um Equipamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de Equipamento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Equipamento.ReadEquipamentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/escala/{id}": {
      "get": {
        "tags": [
          "Escala"
        ],
        "summary": "Leitura de Escala pelo ID",
        "description": "Lê uma Escala com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Escala a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Escala.ReadEscalaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/escala": {
      "get": {
        "tags": [
          "Escala"
        ],
        "summary": "Busca de Escalas",
        "description": "Lê uma lista de Escalas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdHorario",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Escala.TipoSituacaoEscalaDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Escala.ReadEscalaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/escala-trabalho/{id}": {
      "get": {
        "tags": [
          "EscalaTrabalho"
        ],
        "summary": "Leitura de Escala pelo ID",
        "description": "Lê uma escala com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da escala a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Escala.ReadEscalaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/escala-trabalho": {
      "get": {
        "tags": [
          "EscalaTrabalho"
        ],
        "summary": "Busca de Escalas",
        "description": "Lê uma lista de Escalas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Turno",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Escala.Enums.TipoTurnoDto"
            }
          },
          {
            "name": "HorasMes",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Escala.ReadEscalaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/estado": {
      "post": {
        "tags": [
          "Estado"
        ],
        "summary": "Gravação de Estados",
        "description": "Grava uma lista de estados com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de estados a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.CreateEstadoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.CreateEstadoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retornar a lista de estados gravados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Usuário não tem permissão para usar essa rota."
          }
        }
      },
      "get": {
        "tags": [
          "Estado"
        ],
        "summary": "Busca de Estados",
        "description": "Lê uma lista de estados com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 40,
              "type": "string"
            }
          },
          {
            "name": "SiglaUF",
            "in": "query",
            "schema": {
              "maxLength": 2,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.ReadEstadoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/estado/{id}": {
      "get": {
        "tags": [
          "Estado"
        ],
        "summary": "Leitura de Estado pelo ID",
        "description": "Lê um estado com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do estado a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.ReadEstadoDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Estado"
        ],
        "summary": "Atualização de Estado",
        "description": "Atualiza o estado com o ID igual ao informado na URL da requisição com base nos dados do body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do estado a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Novos dados do estado.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.UpdateEstadoDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.UpdateEstadoDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/gerenciador/v1/faixa": {
      "post": {
        "tags": [
          "Faixa"
        ],
        "summary": "Gravação de Faixas",
        "description": "Grava uma lista de faixas com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de faixas a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Faixa.CreateFaixaDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Faixa.CreateFaixaDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Faixa"
        ],
        "summary": "Busca de Faixas",
        "description": "Lê uma lista de Faixas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Faixa.ReadFaixaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/faixa/{id}": {
      "get": {
        "tags": [
          "Faixa"
        ],
        "summary": "Leitura de Faixa pelo ID",
        "description": "Lê uma Faixa com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Faixa a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Faixa.ReadFaixaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/filial/{id}": {
      "get": {
        "tags": [
          "Filial"
        ],
        "summary": "Leitura de Empresa/Filial pelo ID",
        "description": "Lê uma Empresa/Filial com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Empresa/Filial a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Filial.ReadFilialDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/filial": {
      "get": {
        "tags": [
          "Filial"
        ],
        "summary": "Busca de Empresas/Filiais",
        "description": "Lê uma lista de Empresas/Filiais com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "CodigoInicial",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "CodigoFinal",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Identificacao",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "RazaoSocial",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "CpfCnpj",
            "in": "query",
            "schema": {
              "maxLength": 18,
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Filial.ReadFilialDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/fluxo-processo/{id}": {
      "get": {
        "tags": [
          "FluxoProcesso"
        ],
        "summary": "Leitura de Fluxo de Processo pelo ID",
        "description": "Lê um Fluxo de Processo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Fluxo de Processo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.FluxoProcesso.ReadFluxoProcessoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/fluxo-processo": {
      "get": {
        "tags": [
          "FluxoProcesso"
        ],
        "summary": "Busca de Fluxos de Processo",
        "description": "Lê uma lista de Fluxos de Processo com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "IdTipoOrdemProducao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.FluxoProcesso.ReadFluxoProcessoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/forma-pagamento/{id}": {
      "get": {
        "tags": [
          "FormaPagamento"
        ],
        "summary": "Leitura de Forma de Pagamento pelo ID",
        "description": "Lê uma Forma de Pagamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Forma de Pagamento a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.FormaPagamento.ReadFormaPagamentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/forma-pagamento": {
      "get": {
        "tags": [
          "FormaPagamento"
        ],
        "summary": "Busca de Formas de Pagamento",
        "description": "Lê uma lista de Formas de Pagamento com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "BuscarApenasNFCe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.FormaPagamento.TipoSituacaoFormaPagamentoFiltroDto"
            }
          },
          {
            "name": "MeioPagamento",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.FormaPagamento.MeioPagamentoFormaPagamentoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.FormaPagamento.ReadFormaPagamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/fornecedor/{id}": {
      "get": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Leitura de Fornecedor pelo ID",
        "description": "Lê um Fornecedor com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Fornecedor a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Fornecedor.ReadFornecedorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/fornecedor": {
      "get": {
        "tags": [
          "Fornecedor"
        ],
        "summary": "Busca de Fornecedores",
        "description": "Lê uma lista de Fornecedores com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "TipoPessoa",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaFiltroDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "RazaoSocial",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "NomeFantasia",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "IdMunicipio",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "schema": {
              "maxLength": 2,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra1",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra2",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra3",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra4",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "DataHoraGravacaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DataHoraGravacaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CpfCnpj",
            "in": "query",
            "schema": {
              "maxLength": 18,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Fornecedor.ReadFornecedorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/grade/{id}": {
      "get": {
        "tags": [
          "Grade"
        ],
        "summary": "Leitura de Grade pelo ID",
        "description": "Lê uma Grade com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Grade a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Grade.ReadGradeDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/grade": {
      "get": {
        "tags": [
          "Grade"
        ],
        "summary": "Busca de Grades",
        "description": "Lê uma lista de Grades com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Grade.ReadGradeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/grade-contabil/{id}": {
      "get": {
        "tags": [
          "GradeContabil"
        ],
        "summary": "Leitura de grade contábil pelo ID",
        "description": "Lê uma grade contábil com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Id da grade contábil a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.GradeContabil.ReadGradeContabilDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/grade-contabil": {
      "get": {
        "tags": [
          "GradeContabil"
        ],
        "summary": "Busca de grades contábeis",
        "description": "Lê uma lista de grades contábeis com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Processo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.GradeContabil.ProcessoGradeContabilDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.GradeContabil.ReadGradeContabilDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/grupo-cargo/{id}": {
      "get": {
        "tags": [
          "GrupoCargo"
        ],
        "summary": "Leitura de cargos do tipo grupo pelo ID",
        "description": "Lê um cargo do tipo grupo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cargo do tipo Grupo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.GrupoCargo.ReadGrupoCargoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/grupo-cargo": {
      "get": {
        "tags": [
          "GrupoCargo"
        ],
        "summary": "Busca de Cargos do tipo Grupo",
        "description": "Lê uma lista de Cargos Grupo com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.GrupoCargo.ReadGrupoCargoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/grupo-escala/{id}": {
      "get": {
        "tags": [
          "GrupoEscala"
        ],
        "summary": "Leitura de Grupo de Escala pelo ID",
        "description": "Lê um Grupo de Escala com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Grupo de Escala a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.GrupoEscala.ReadGrupoEscalaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/grupo-escala": {
      "get": {
        "tags": [
          "GrupoEscala"
        ],
        "summary": "Busca de Grupos de Escala",
        "description": "Lê uma lista de Grupos de Escala com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.GrupoEscala.ReadGrupoEscalaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/grupo-horario/{id}": {
      "get": {
        "tags": [
          "GrupoHorario"
        ],
        "summary": "Leitura de Grupo de Horário pelo ID",
        "description": "Lê um grupo de horário com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do grupo de horário a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.GrupoHorario.ReadGrupoHorarioDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/grupo-horario": {
      "get": {
        "tags": [
          "GrupoHorario"
        ],
        "summary": "Busca de Grupos de Horário",
        "description": "Lê uma lista de grupos de horários com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.GrupoHorario.ReadGrupoHorarioDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/grupo-motivo-perda-defeito/{id}": {
      "get": {
        "tags": [
          "GrupoMotivoPerdaDefeito"
        ],
        "summary": "Leitura do Grupo de Motivos de Perdas ou Defeitos pelo ID.",
        "description": "Lê um Grupo de Motivos de Perdas ou Defeitos com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Grupo de Motivos de Perdas ou Defeitos a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.GrupoMotivoPerdaDefeito.ReadGrupoMotivoPerdaDefeitoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/grupo-motivo-perda-defeito": {
      "get": {
        "tags": [
          "GrupoMotivoPerdaDefeito"
        ],
        "summary": "Busca de Grupo de Motivos de Perdas ou Defeitos.",
        "description": "Lê uma lista de Grupos de Motivos de Perdas ou Defeitos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.GrupoMotivoPerdaDefeito.ReadGrupoMotivoPerdaDefeitoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/grupo-natureza-efd-reinf/{id}": {
      "get": {
        "tags": [
          "GrupoNaturezaEFDReinf"
        ],
        "summary": "Leitura de Grupo de Natureza EFD Reinf pelo ID",
        "description": "Lê um Grupo de Natureza EFD Reinf com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Grupo Natureza EFD Reinf a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.GrupoNaturezaEFDReinf.ReadGrupoNaturezaEFDReinfDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/grupo-natureza-efd-reinf": {
      "get": {
        "tags": [
          "GrupoNaturezaEFDReinf"
        ],
        "summary": "Busca de Grupos de Naturezas EFD Reinf",
        "description": "Lê uma lista de Grupos de Naturezas EFD Reinf com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 5,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.GrupoNaturezaEFDReinf.ReadGrupoNaturezaEFDReinfDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/grupo-projeto/{id}": {
      "get": {
        "tags": [
          "GrupoProjeto"
        ],
        "summary": "Leitura de Grupo de Projeto pelo ID",
        "description": "Lê um grupo de Projeto com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do grupo de Projeto a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.GrupoProjeto.ReadGrupoProjetoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/grupo-projeto": {
      "get": {
        "tags": [
          "GrupoProjeto"
        ],
        "summary": "Busca de Grupos de Projeto",
        "description": "Lê uma lista de grupos de Projetos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.GrupoProjeto.ReadGrupoProjetoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/grupo-recurso/{id}": {
      "get": {
        "tags": [
          "GrupoRecurso"
        ],
        "summary": "Leitura de Grupo de Recurso pelo ID",
        "description": "Lê um Grupo de Recurso com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Grupo de Recurso a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.GrupoRecurso.ReadGrupoRecursoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/grupo-recurso": {
      "get": {
        "tags": [
          "GrupoRecurso"
        ],
        "summary": "Busca de Grupos de Recursos",
        "description": "Lê uma lista de Grupos de Recurso com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.GrupoRecurso.ReadGrupoRecursoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/grupo-terceiro/{id}": {
      "get": {
        "tags": [
          "GrupoTerceiro"
        ],
        "summary": "Leitura de Grupo de Terceiro pelo ID",
        "description": "Lê um grupo de terceiro com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do grupo de terceiro a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.GrupoTerceiro.ReadGrupoTerceiroDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/grupo-terceiro": {
      "get": {
        "tags": [
          "GrupoTerceiro"
        ],
        "summary": "Busca de Grupo de Terceiros",
        "description": "Lê uma lista de Grupo de Terceiros com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint64"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.GrupoTerceiro.ReadGrupoTerceiroDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/historico": {
      "post": {
        "tags": [
          "Historico"
        ],
        "summary": "Gravação de históricos",
        "description": "Grava uma lista de históricos com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de históricos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Historico.CreateHistoricoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Historico.CreateHistoricoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Historico"
        ],
        "summary": "Busca de Históricos",
        "description": "Lê uma lista de Históricos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Historico.ReadHistoricoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/historico/{id}": {
      "get": {
        "tags": [
          "Historico"
        ],
        "summary": "Leitura de Histórico pelo ID",
        "description": "Lê um Histórico com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Histórico a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Historico.ReadHistoricoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/horario/{id}": {
      "get": {
        "tags": [
          "Horario"
        ],
        "summary": "Leitura de Horário pelo ID",
        "description": "Lê um horário com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do horário a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Horario.ReadHorarioDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/horario": {
      "get": {
        "tags": [
          "Horario"
        ],
        "summary": "Busca de Horários",
        "description": "Lê uma lista de horários com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Horario.TipoSituacaoHorarioFiltroDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Horario.ReadHorarioDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/horario-trabalho/{id}": {
      "get": {
        "tags": [
          "HorarioTrabalho"
        ],
        "summary": "Leitura de Horário pelo ID",
        "description": "Lê um horário com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do horário a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Horario.ReadHorarioDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/horario-trabalho": {
      "get": {
        "tags": [
          "HorarioTrabalho"
        ],
        "summary": "Busca de Horários",
        "description": "Lê uma lista de horários com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Horario.ReadHorarioDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/importacao": {
      "post": {
        "tags": [
          "Importacao"
        ],
        "summary": "Importação de cadastros por API",
        "description": "Endpoint referente a realização de importação de dados do WK Radar.\r\n\r\nAo ser utilizado este endpoint, o WK Radar fará a importação dos arquivos através dos layouts configurados pelo usuário dentro do ERP, de acordo com o respectivo tipo de importação utilizado neste endpoint.\r\n\r\nO retorno do resultado da importação não será devolvido de forma imediata, por uma questão de performance e possíveis timeouts. A busca desse retorno da respectiva importação é feita através dos endpoints \"Busca de Importações API\" e/ou \"Leitura de Importação API pelo ID\".",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "TipoImportacao"
                ],
                "type": "object",
                "properties": {
                  "File": {
                    "type": "string",
                    "format": "binary"
                  },
                  "TipoImportacao": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Importacao.TipoImportacaoDto"
                  },
                  "LeiauteImportacao": {
                    "maxLength": 100,
                    "type": "string"
                  },
                  "CFRT.ClassificacaoInicial": {
                    "maxLength": 32,
                    "type": "string"
                  },
                  "CFRT.AutoIncrementarClassificacao": {
                    "type": "boolean"
                  },
                  "CFRT.NaoPermitirCNPJInvalido": {
                    "type": "boolean"
                  },
                  "CFRT.AtribuirNovasCaracteristicasParaCFRTJaCadastrado": {
                    "type": "boolean"
                  },
                  "ProdutoServico.ClassificacaoInicial": {
                    "maxLength": 32,
                    "type": "string"
                  },
                  "ProdutoServico.AutoIncrementarClassificacao": {
                    "type": "boolean"
                  },
                  "Financeiro.IdGradeContabil": {
                    "type": "string"
                  },
                  "Financeiro.IdGradeContabilBaixa": {
                    "type": "string"
                  },
                  "Financeiro.ImportarLancamentosCorretosDeArquivosComErros": {
                    "type": "boolean"
                  },
                  "Financeiro.LancarRetencoesAutomaticamente": {
                    "type": "boolean"
                  },
                  "Financeiro.ImportarTitulosComMesmoNumeroClienteFornecedor": {
                    "type": "boolean"
                  },
                  "Estoque.DataMovimento": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "Estoque.IdFilial": {
                    "type": "string"
                  },
                  "Estoque.IdLocal": {
                    "type": "string"
                  },
                  "ComprasRE.ImpedirAlteracaoNFIncluidaParaMesmoFornecedorCliente": {
                    "type": "boolean"
                  },
                  "Gerenciador.ClassificacaoInicial": {
                    "maxLength": 32,
                    "type": "string"
                  },
                  "Gerenciador.AutoIncrementarClassificacao": {
                    "type": "boolean"
                  },
                  "Gerenciador.ImportarRegistrosCorretosArquivosComErros": {
                    "type": "boolean"
                  },
                  "CodigoIntegrador": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "File": {
                  "style": "form"
                },
                "TipoImportacao": {
                  "style": "form"
                },
                "LeiauteImportacao": {
                  "style": "form"
                },
                "CFRT.ClassificacaoInicial": {
                  "style": "form"
                },
                "CFRT.AutoIncrementarClassificacao": {
                  "style": "form"
                },
                "CFRT.NaoPermitirCNPJInvalido": {
                  "style": "form"
                },
                "CFRT.AtribuirNovasCaracteristicasParaCFRTJaCadastrado": {
                  "style": "form"
                },
                "ProdutoServico.ClassificacaoInicial": {
                  "style": "form"
                },
                "ProdutoServico.AutoIncrementarClassificacao": {
                  "style": "form"
                },
                "Financeiro.IdGradeContabil": {
                  "style": "form"
                },
                "Financeiro.IdGradeContabilBaixa": {
                  "style": "form"
                },
                "Financeiro.ImportarLancamentosCorretosDeArquivosComErros": {
                  "style": "form"
                },
                "Financeiro.LancarRetencoesAutomaticamente": {
                  "style": "form"
                },
                "Financeiro.ImportarTitulosComMesmoNumeroClienteFornecedor": {
                  "style": "form"
                },
                "Estoque.DataMovimento": {
                  "style": "form"
                },
                "Estoque.IdFilial": {
                  "style": "form"
                },
                "Estoque.IdLocal": {
                  "style": "form"
                },
                "ComprasRE.ImpedirAlteracaoNFIncluidaParaMesmoFornecedorCliente": {
                  "style": "form"
                },
                "Gerenciador.ClassificacaoInicial": {
                  "style": "form"
                },
                "Gerenciador.AutoIncrementarClassificacao": {
                  "style": "form"
                },
                "Gerenciador.ImportarRegistrosCorretosArquivosComErros": {
                  "style": "form"
                },
                "CodigoIntegrador": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Importacao.ReadImportacaoDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Importacao"
        ],
        "summary": "Busca de Importações API",
        "description": "Lê uma lista das Importações API com base no filtro informado na URL da requisição.\r\n\r\nOs arquivos contendo os resultados de importação são mantido por 7 dias. Após esse período os arquivos de retorno são excluídos imediatamente após a leitura do respectivo resultado a importação de origem.",
        "parameters": [
          {
            "name": "IdImportacao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NomeArquivo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoImportacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dados.Importacao.TipoImportacao"
            }
          },
          {
            "name": "StatusImportacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dados.Importacao.StatusImportacao"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Importacao.ReadImportacaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/importacao/{id}": {
      "get": {
        "tags": [
          "Importacao"
        ],
        "summary": "Leitura de Importação API pelo ID",
        "description": "Lê uma importação API com base no ID informado na URL da requisição.\r\n\r\nOs arquivos contendo os resultados de importação são mantido por 7 dias. Após esse período os arquivos de retorno são excluídos imediatamente após a leitura do respectivo resultado a importação de origem.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da importação a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Importacao.ReadImportacaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/indice": {
      "post": {
        "tags": [
          "Indice"
        ],
        "summary": "Gravação de índices",
        "description": "Grava uma lista de índices com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de índices a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.CreateIndiceDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.CreateIndiceDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Indice"
        ],
        "summary": "Busca de Índices",
        "description": "Lê uma lista de índices com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "DataValor",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Formato",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceFormatoFiltroDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.ReadIndiceDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/indice/{id}": {
      "get": {
        "tags": [
          "Indice"
        ],
        "summary": "Leitura de Índice pelo ID",
        "description": "Lê um índice com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do índice a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.ReadIndiceDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Indice"
        ],
        "summary": "Atualização de índice",
        "description": "Atualiza o índice com o ID igual ao informado na URL da requisição com base nos dados do body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do índice a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Novos dados do índice.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.UpdateIndiceDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.UpdateIndiceDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/folha/v1/indice-fgts/{id}": {
      "get": {
        "tags": [
          "IndiceFgts"
        ],
        "summary": "Leitura de Índice FGTS pelo ID",
        "description": "Le um índice FGTS com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do índice FGTS a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.IndiceFgts.ReadIndiceFgtsDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/indice-fgts": {
      "get": {
        "tags": [
          "IndiceFgts"
        ],
        "summary": "Busca de Índices FGTS",
        "description": "Le uma lista de índices FGTS com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "CompetenciaInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "01/2024"
            }
          },
          {
            "name": "CompetenciaFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "01/2024"
            }
          },
          {
            "name": "Valor",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.IndiceFgts.ReadIndiceFgtsDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/informacao-bancaria/{id}": {
      "get": {
        "tags": [
          "InformacaoBancaria"
        ],
        "summary": "Leitura do cadastro de Informações Bancárias do tipo Conta Bancária pelo ID",
        "description": "Lê um cadastro de Informação Bancária do tipo Conta Bancária com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cadastro de Informação Bancária do tipo Conta Bancária a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancaria.ReadInformacaoBancariaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/informacao-bancaria": {
      "get": {
        "tags": [
          "InformacaoBancaria"
        ],
        "summary": "Busca do cadastro de Informações Bancárias do tipo Conta Bancária",
        "description": "Lê uma lista de cadastros de Informações Bancárias do tipo Conta Bancária com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 11,
              "type": "string"
            }
          },
          {
            "name": "IdCFRT",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdPortador",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoConta",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancaria.TipoContaBancariaDto"
            }
          },
          {
            "name": "ApenasContaPadrao",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancaria.ReadInformacaoBancariaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/informacao-bancaria-pix/{id}": {
      "get": {
        "tags": [
          "InformacaoBancariaPix"
        ],
        "summary": "Leitura do cadastro de Informações Bancárias do tipo Pix pelo ID",
        "description": "Lê um cadastro de Informação Bancária do tipo Pix com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cadastro de Informação Bancária do tipo Pix a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancariaPix.ReadInformacaoBancariaPixDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/informacao-bancaria-pix": {
      "get": {
        "tags": [
          "InformacaoBancariaPix"
        ],
        "summary": "Busca do cadastro de Informações Bancárias do tipo Pix",
        "description": "Lê uma lista de cadastros de Informações Bancárias do tipo Pix com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 11,
              "type": "string"
            }
          },
          {
            "name": "IdCFRT",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoChaveEnderecamento",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancariaPix.TipoChaveEnderecamentoDto"
            }
          },
          {
            "name": "ApenasContaPadrao",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancariaPix.ReadInformacaoBancariaPixDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/informacao-complementar/{id}": {
      "get": {
        "tags": [
          "InformacaoComplementar"
        ],
        "summary": "Leitura do cadastro de Informações Complementares pelo ID",
        "description": "Lê um cadastro de Informação Complementar com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cadastro de Informação Complementar a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoComplementar.ReadInformacaoComplementarDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/informacao-complementar": {
      "get": {
        "tags": [
          "InformacaoComplementar"
        ],
        "summary": "Busca do cadastro de Informações Complementares",
        "description": "Lê uma lista de cadastros de Informações Complementares com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Grupo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoComplementar.GrupoInformacaoComplementarFiltroDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*Teste), depois (Teste\\*), ou antes e depois do texto (\\*Teste\\*). Ao usar o caractere coringa, será retornado todas as Informações Complementares que começarem e/ou terminarem com o texto informado.",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*1), depois (1\\*), ou antes e depois do código (\\*1\\*). Ao usar o caractere coringa, será retornado todas as Informações Complementares que começarem e/ou terminarem com o código informado.",
            "schema": {
              "maxLength": 11,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoComplementar.ReadInformacaoComplementarDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/informacao-suplementar/{id}": {
      "get": {
        "tags": [
          "InformacaoSuplementar"
        ],
        "summary": "Leitura de Informação Suplementar pelo ID.",
        "description": "Lê uma Informação Suplementar com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Informação Suplementar a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.InformacaoSuplementar.ReadInformacaoSuplementarDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/informacao-suplementar": {
      "get": {
        "tags": [
          "InformacaoSuplementar"
        ],
        "summary": "Busca de Informação Suplementar.",
        "description": "Lê uma lista de Informações Suplementares com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*1), depois (1\\*), ou antes e depois do código (\\*1\\*). Ao usar o caractere coringa, será retornado todas as Informações Suplementares que começarem e/ou terminarem com o código informado.",
            "schema": {
              "maxLength": 9,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*Teste), depois (Teste\\*), ou antes e depois do texto (\\*Teste\\*). Ao usar o caractere coringa, será retornado todas as Informações Suplementares que começarem e/ou terminarem com o texto informado",
            "schema": {
              "maxLength": 64,
              "type": "string"
            }
          },
          {
            "name": "Grupo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.InformacaoSuplementar.TipoGrupoInformacaoSuplementarDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.InformacaoSuplementar.ReadInformacaoSuplementarDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/instrucao-bancaria/{id}": {
      "get": {
        "tags": [
          "InstrucaoBancaria"
        ],
        "summary": "Leitura de Instrução Bancária pelo ID",
        "description": "Lê uma Instrução Bancária com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Instrução Bancária a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.InstrucaoBancaria.ReadInstrucaoBancariaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/instrucao-bancaria": {
      "get": {
        "tags": [
          "InstrucaoBancaria"
        ],
        "summary": "Busca de Instruções Bancárias",
        "description": "Lê uma lista de Instruções Bancárias com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.InstrucaoBancaria.ReadInstrucaoBancariaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/item-grade/grade": {
      "get": {
        "tags": [
          "ItemGrade"
        ],
        "summary": "Leitura de Itens de uma Grade",
        "description": "Lê os Itens de uma Grade com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdGrade",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SomenteInativos",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.ItemGrade.ReadItemGradeDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/item-grade/produto": {
      "get": {
        "tags": [
          "ItemGrade"
        ],
        "summary": "Leitura de Itens de Grade relacionados a um Produto",
        "description": "Lê uma lista de Itens de Grade com base no filtro informado na URL da requisição, que deverá conter o ID do Produto e pelo menos um ID de Item de Grade.\r\nApós a chamada de outra rota que retorne o ID do Produto e os IDs dos Itens de Grade, estes IDs podem ser passados no filtro desta rota para obter as informações dos Itens de Grade.",
        "parameters": [
          {
            "name": "ProdutosItensGrade",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.ItemGrade.ReadItemGradeProdutoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/contabil/v1/lancamento-contabil/{id}": {
      "get": {
        "tags": [
          "LancamentoContabil"
        ],
        "summary": "Leitura de Lançamentos Contábeis pelo ID",
        "description": "Lê um Lançamento Contábil com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Lançamento Contábil a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.ReadLancamentoContabilDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/contabil/v1/lancamento-contabil": {
      "get": {
        "tags": [
          "LancamentoContabil"
        ],
        "summary": "Busca dos Lançamentos Contábeis",
        "description": "Lê uma lista de lançamento contábeis com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdInicial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdFinal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdContaContabil",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdHistorico",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Complemento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DocumentoInicial",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "DocumentoFinal",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "GrupoHistorico",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TipoConferido",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.TipoConferidoDto"
            }
          },
          {
            "name": "OrigemLancamento",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.OrigemLancamentoDto"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.ReadLancamentoContabilDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LancamentoContabil"
        ],
        "summary": "Gravação de Lançamentos Contábeis",
        "description": "Grava uma lista de lançamentos contábeis com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de lançamentos contábeis a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.CreateLancamentoContabilDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.CreateLancamentoContabilDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/estoque/v1/local-armazenagem/{id}": {
      "get": {
        "tags": [
          "LocalArmazenagem"
        ],
        "summary": "Leitura de Local de Armazenagem pelo ID",
        "description": "Lê um Local de Armazenagem com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Local de Armazenagem a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.ReadLocalArmazenagemDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/estoque/v1/local-armazenagem": {
      "get": {
        "tags": [
          "LocalArmazenagem"
        ],
        "summary": "Busca de Locais de Armazenagem",
        "description": "Lê uma lista de Locais de Armazenagem com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tipo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.TipoLocalArmazenagemDto"
            }
          },
          {
            "name": "TipoEstocagem",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.TipoEstocagemDto"
              }
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.ReadLocalArmazenagemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/marca": {
      "post": {
        "tags": [
          "Marca"
        ],
        "summary": "Gravação de Marcas",
        "description": "Grava uma lista de marcas com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de marcas a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Marca.CreateMarcaDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Marca.CreateMarcaDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Marca"
        ],
        "summary": "Busca de Marcas",
        "description": "Lê uma lista de Marcas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Marca.ReadMarcaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/marca/{id}": {
      "get": {
        "tags": [
          "Marca"
        ],
        "summary": "Leitura de Marca pelo ID",
        "description": "Lê uma Marca com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Marca a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Marca.ReadMarcaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/medicao": {
      "post": {
        "tags": [
          "Medicao"
        ],
        "summary": "Gravação de Medições",
        "description": "Grava uma lista de Medições com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Medições a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Medicao.CreateMedicaoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Medicao.CreateMedicaoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Medicao"
        ],
        "summary": "Busca de Medições",
        "description": "Lê uma lista de Medições com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "MesAnoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "01/2024"
            }
          },
          {
            "name": "MesAnoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "01/2024"
            }
          },
          {
            "name": "DataMedicaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataMedicaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdCliente",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdContrato",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Numero",
            "in": "query",
            "schema": {
              "maxLength": 55,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Medicao.ReadMedicaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/medicao/{id}": {
      "get": {
        "tags": [
          "Medicao"
        ],
        "summary": "Leitura de Medição pelo ID",
        "description": "Lê uma Medição com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Medição a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Medicao.ReadMedicaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/mensagem": {
      "post": {
        "tags": [
          "Mensagem"
        ],
        "summary": "Gravação de Mensagens",
        "description": "Grava uma lista de mensagens com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de mensagens a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.CreateMensagemDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.CreateMensagemDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Mensagem"
        ],
        "summary": "Busca de Mensagens",
        "description": "Lê uma lista de mensagens com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Modulo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.ModuloMensagemDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dados.Filtro.FiltroAtivoInativo"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.ReadMensagemDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/mensagem/{id}": {
      "get": {
        "tags": [
          "Mensagem"
        ],
        "summary": "Leitura de Mensagem pelo ID",
        "description": "Lê uma mensagem com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da mensagem a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.ReadMensagemDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Mensagem"
        ],
        "summary": "Atualização de Mensagem",
        "description": "Atualiza a mensagem com o ID igual ao informado na URL da requisição com base nos dados do body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da mensagem a ser atualizada.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Novos dados da mensagem.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.UpdateMensagemDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.UpdateMensagemDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/gerenciador/v1/modelo": {
      "post": {
        "tags": [
          "Modelo"
        ],
        "summary": "Gravação de Modelos",
        "description": "Grava uma lista de modelos com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de modelos a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Modelo.CreateModeloDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Modelo.CreateModeloDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Modelo.ReadModeloDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Modelo"
        ],
        "summary": "Busca de Modelos",
        "description": "Lê uma lista de Modelos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Modelo.ReadModeloDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/modelo/{id}": {
      "get": {
        "tags": [
          "Modelo"
        ],
        "summary": "Leitura de Modelo pelo ID",
        "description": "Lê um Modelo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Modelo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Modelo.ReadModeloDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/motivo-perda-defeito/{id}": {
      "get": {
        "tags": [
          "MotivoPerdaDefeito"
        ],
        "summary": "Leitura de Motivos de Perdas ou Defeitos pelo ID.",
        "description": "Lê um Motivo de Perdas ou Defeitos com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Motivo de Perdas ou Defeitos a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.MotivoPerdaDefeito.ReadMotivoPerdaDefeitoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/motivo-perda-defeito": {
      "get": {
        "tags": [
          "MotivoPerdaDefeito"
        ],
        "summary": "Busca do Motivo de Perdas ou Defeitos.",
        "description": "Lê uma lista de Motivos de Perdas ou Defeitos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "IdsProcesso",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Especie",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.MotivoPerdaDefeito.TipoEspeciePerdaDefeitoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.MotivoPerdaDefeito.ReadMotivoPerdaDefeitoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/motorista/{id}": {
      "get": {
        "tags": [
          "Motorista"
        ],
        "summary": "Leitura de Motorista pelo ID",
        "description": "Lê um motorista com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Motorista a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Motorista.ReadMotoristaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/motorista": {
      "get": {
        "tags": [
          "Motorista"
        ],
        "summary": "Busca de Motoristas",
        "description": "Lê uma lista de motoristas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "description": "'?' substitui um caractere. '*' substitui qualquer sequência de caracteres.\r\n",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Cpf",
            "in": "query",
            "description": "'?' substitui um caractere. '*' substitui qualquer sequência de caracteres.\r\n",
            "schema": {
              "maxLength": 14,
              "type": "string"
            }
          },
          {
            "name": "Rg",
            "in": "query",
            "description": "'?' substitui um caractere. '*' substitui qualquer sequência de caracteres.\r\n",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "Habilitacao",
            "in": "query",
            "description": "'?' substitui um caractere. '*' substitui qualquer sequência de caracteres.\r\n",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "Cnh",
            "in": "query",
            "description": "'?' substitui um caractere. '*' substitui qualquer sequência de caracteres.\r\n",
            "schema": {
              "maxLength": 16,
              "type": "string"
            }
          },
          {
            "name": "IdVeiculo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Motorista.ReadMotoristaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/estoque/v1/movimento-estoque/transferencia-locais": {
      "post": {
        "tags": [
          "MovimentoEstoque"
        ],
        "summary": "Gravação de Movimentos de Estoque - Transferência entre Locais",
        "description": "Grava uma lista de Movimentos de Estoque com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Movimentos de Estoque a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueTransferenciaLocaisDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueTransferenciaLocaisDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/estoque/v1/movimento-estoque/saida": {
      "post": {
        "tags": [
          "MovimentoEstoque"
        ],
        "summary": "Gravação de Movimentos de Estoque - Saída",
        "description": "Grava uma lista de Movimentos de Estoque com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Movimentos de Estoque a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueSaidaDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueSaidaDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/estoque/v1/movimento-estoque/entrada": {
      "post": {
        "tags": [
          "MovimentoEstoque"
        ],
        "summary": "Gravação de Movimentos de Estoque - Entrada",
        "description": "Grava uma lista de Movimentos de Estoque com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Movimentos de Estoque a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueEntradaDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueEntradaDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/estoque/v1/movimento-estoque/ajuste-inventario": {
      "post": {
        "tags": [
          "MovimentoEstoque"
        ],
        "summary": "Gravação de Movimentos de Estoque - Ajuste Automático de Inventário",
        "description": "Grava uma lista de Movimentos de Estoque com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Movimentos de Estoque a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueAjusteAutomaticoInventarioDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueAjusteAutomaticoInventarioDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/estoque/v1/movimento-estoque/{id}": {
      "get": {
        "tags": [
          "MovimentoEstoque"
        ],
        "summary": "Leitura de Movimento de Estoque pelo ID",
        "description": "Lê um Movimento de Estoque com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Movimento de Estoque a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadMovimentoEstoqueDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/estoque/v1/movimento-estoque": {
      "get": {
        "tags": [
          "MovimentoEstoque"
        ],
        "summary": "Busca de Movimentos de Estoque",
        "description": "Lê uma lista de Movimentos de Estoque com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "DataInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataHoraBaseAlteracao",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TipoEstoque",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoEstoqueMovimentoEstoqueDto"
              }
            }
          },
          {
            "name": "Origem",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoOrigemMovimentoEstoqueDto"
              }
            }
          },
          {
            "name": "Operacao",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoOperacaoMovimentoEstoqueDto"
              }
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdLocal",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdLocalDestino",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NumeroDocumento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Produtos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "NumeroLote",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Volume",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadMovimentoEstoqueDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/municipio": {
      "post": {
        "tags": [
          "Municipio"
        ],
        "summary": "Gravação de Municípios",
        "description": "Grava uma lista de municípios com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de municípios a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Municipio.CreateMunicipioDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Municipio.CreateMunicipioDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Municipio"
        ],
        "summary": "Busca de Municípios",
        "description": "Lê uma lista de municípios com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "CodigoIBGE",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "CodigoMunicipio",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Municipio.ReadMunicipioDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/municipio/{id}": {
      "get": {
        "tags": [
          "Municipio"
        ],
        "summary": "Leitura de Município pelo ID",
        "description": "Lê um município com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do município a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Municipio.ReadMunicipioDto"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Municipio"
        ],
        "summary": "Atualização de Município",
        "description": "Atualiza o município com o ID igual ao informado na URL da requisição com base nos dados do body.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do município a ser atualizado.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Novos dados do município.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Municipio.UpdateMunicipioDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Municipio.UpdateMunicipioDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/empresarial/v1/natureza-efd-reinf/{id}": {
      "get": {
        "tags": [
          "NaturezaEFDReinf"
        ],
        "summary": "Leitura de Natureza EFD Reinf pelo ID",
        "description": "Lê uma Natureza EFD Reinf com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Natureza EFD Reinf a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.NaturezaEFDReinf.ReadNaturezaEFDReinfDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/natureza-efd-reinf": {
      "get": {
        "tags": [
          "NaturezaEFDReinf"
        ],
        "summary": "Busca de Naturezas EFD Reinf",
        "description": "Lê uma lista de Naturezas EFD Reinf com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 5,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.NaturezaEFDReinf.ReadNaturezaEFDReinfDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/natureza-operacao/{id}": {
      "get": {
        "tags": [
          "NaturezaOperacao"
        ],
        "summary": "Leitura de Natureza De Operação pelo ID",
        "description": "Lê uma Natureza De Operação com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Natureza De Operação a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.NaturezaOperacao.ReadNaturezaOperacaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/natureza-operacao": {
      "get": {
        "tags": [
          "NaturezaOperacao"
        ],
        "summary": "Busca de Naturezas De Operação",
        "description": "Lê uma lista de Naturezas De Operação com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Modulos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.NaturezaOperacao.ModuloNaturezaOperacaoDto"
              }
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Classificacao",
            "in": "query",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 80,
              "type": "string"
            }
          },
          {
            "name": "DescricaoLegal",
            "in": "query",
            "schema": {
              "maxLength": 310,
              "type": "string"
            }
          },
          {
            "name": "CFOP",
            "in": "query",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.NaturezaOperacao.ReadNaturezaOperacaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/necessidade-producao/{id}": {
      "get": {
        "tags": [
          "NecessidadeProducao"
        ],
        "summary": "Leitura de Necessidade de Produção pelo ID.",
        "description": "Lê uma Necessidade de Produção com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Necessidade de Produção a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.ReadNecessidadeProducaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/necessidade-producao": {
      "get": {
        "tags": [
          "NecessidadeProducao"
        ],
        "summary": "Busca de Necessidades de Produção.",
        "description": "Lê uma lista de Necessidades de Produção com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "DataEmissaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataEmissaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "PrevisaoNecessidadeInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "PrevisaoNecessidadeFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Origem",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.TipoOrigemNecessidadeProducaoDto"
              }
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.TipoSituacaoNecessidadeProducaoDto"
              }
            }
          },
          {
            "name": "Produtos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "DesconsiderarSubordinados",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IdsEmpresaFilial",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsProjeto",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsCliente",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.ReadNecessidadeProducaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/nota-fiscal": {
      "post": {
        "tags": [
          "NotaFiscal"
        ],
        "summary": "Gravação de Notas Fiscais",
        "description": "Grava uma lista de Notas Fiscais com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Notas Fiscais a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "NotaFiscal"
        ],
        "summary": "Busca de Notas Fiscais",
        "description": "Lê uma lista de Notas Fiscais com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "DataEmissaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataEmissaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "NumeroInicial",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "NumeroFinal",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "ValorTotalInicial",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "ValorTotalFinal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "NumeroNfseInicial",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint64"
            }
          },
          {
            "name": "NumeroNfseFinal",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint64"
            }
          },
          {
            "name": "ChaveAcessoNfse",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "ChaveAcessoNfe",
            "in": "query",
            "schema": {
              "maxLength": 44,
              "type": "string"
            }
          },
          {
            "name": "CodigoPedido",
            "in": "query",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "CodigoRastreio",
            "in": "query",
            "schema": {
              "maxLength": 24,
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdClientesFornecedores",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdVendedores",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdRepresentantes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdTransportadoras",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Produtos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
              }
            }
          },
          {
            "name": "IdServico",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdNaturezaOperacaoProdutos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdNaturezaOperacaoServicos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Tipos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoNfDto"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/nota-fiscal/{id}": {
      "get": {
        "tags": [
          "NotaFiscal"
        ],
        "summary": "Leitura de Notas Fiscais pelo ID",
        "description": "Lê uma Nota Fiscal com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Nota Fiscal a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/operacao-comercial/{id}": {
      "get": {
        "tags": [
          "OperacaoComercial"
        ],
        "summary": "Leitura de Operação Comercial pelo ID",
        "description": "Lê uma Operação Comercial com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Operação Comercial a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/operacao-comercial": {
      "get": {
        "tags": [
          "OperacaoComercial"
        ],
        "summary": "Busca de Operações Comerciais",
        "description": "Lê uma lista de Operações Comerciais com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoNf",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoNfFiltroDto"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "ClasseProduto",
            "in": "query",
            "description": "Este campo funciona em conjunto com o campo Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.OperacaoComercialFiltroTipoOperacaoProdutoDto.Classe.",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoClasseProdutoFiltroDto"
            }
          },
          {
            "name": "TipoOperacao.Descricao",
            "in": "query",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Cliente.IdCliente",
            "in": "query",
            "description": "Se informado, as características desse cliente irão sobreescrever os demais campos desse grupo.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Cliente.Pessoa",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoPessoaFiltroDto"
            }
          },
          {
            "name": "TipoOperacao.Cliente.AlcanceOperacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoAlcanceOperacaoFiltroDto"
            }
          },
          {
            "name": "TipoOperacao.Cliente.DestinoOperacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoDestinoOperacaoDto"
            }
          },
          {
            "name": "TipoOperacao.Cliente.ContribuinteIcms",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoContribuinteIcmsDto"
            }
          },
          {
            "name": "TipoOperacao.Cliente.OptanteSimplesNacional",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoOptanteSimplesNacionalDto"
            }
          },
          {
            "name": "TipoOperacao.Cliente.BeneficioSuframa",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoBeneficioSuframaDto"
            }
          },
          {
            "name": "TipoOperacao.Produto.Tipo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoProdutoDto"
            }
          },
          {
            "name": "TipoOperacao.Produto.SubstituicaoTributaria",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoSubstituicaoTributariaDto"
            }
          },
          {
            "name": "TipoOperacao.Produto.OrigemFiscal",
            "in": "query",
            "description": "Tabela \"A\" – Origem da Mercadoria ou Servico (Nesse caso apenas mercadorias).",
            "schema": {
              "maxLength": 1,
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Produto.Classe",
            "in": "query",
            "description": "Este campo funciona em conjunto com o campo Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.OperacaoComercialFiltroDto.ClasseProduto.",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Resultado.IdNaturezaOperacao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Resultado.IdMensagem",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Resultado.CstIcms",
            "in": "query",
            "schema": {
              "maxLength": 4,
              "minLength": 3,
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Resultado.CstIpi",
            "in": "query",
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Resultado.AliquotaIcms",
            "in": "query",
            "description": "Até duas casas decimais.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "TipoOperacao.Resultado.ReducaoBaseCalculoIcms",
            "in": "query",
            "description": "Até quatro casas decimais.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "TipoOperacao.Resultado.AliquotaIcmsSt",
            "in": "query",
            "description": "Até duas casas decimais.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "TipoOperacao.Resultado.AcrescimoIcmsSt",
            "in": "query",
            "description": "Até duas casas decimais.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "TipoOperacao.Resultado.CstPis",
            "in": "query",
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Resultado.FatorIncidenciaPisEmPercentual",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TipoOperacao.Resultado.FatorIncidenciaPis",
            "in": "query",
            "description": "Até quatro casas decimais.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "TipoOperacao.Resultado.CstCofins",
            "in": "query",
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          },
          {
            "name": "TipoOperacao.Resultado.FatorIncidenciaCofinsEmPercentual",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "TipoOperacao.Resultado.FatorIncidenciaCofins",
            "in": "query",
            "description": "Até quatro casas decimais.",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/operacao-producao/{id}": {
      "get": {
        "tags": [
          "OperacaoProducao"
        ],
        "summary": "Leitura de Operação da Produção pelo ID.",
        "description": "Lê uma Operação da Produção com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Operação da Produção a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OperacaoProducao.ReadOperacaoProducaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/operacao-producao": {
      "get": {
        "tags": [
          "OperacaoProducao"
        ],
        "summary": "Busca de Operação da Produção.",
        "description": "Lê uma lista de Operações da Produção com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OperacaoProducao.ReadOperacaoProducaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compras/v1/ordem-compra": {
      "post": {
        "tags": [
          "OrdemCompra"
        ],
        "summary": "Gravação de Ordens de Compra",
        "description": "Grava uma lista de Ordens de Compra com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Ordens de Compra a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateOrdemCompraDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateOrdemCompraDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateOrdemCompraDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "OrdemCompra"
        ],
        "summary": "Busca de Ordens de Compra",
        "description": "Lê uma lista de Ordens de Compra com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdFornecedorTransportador",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdEmpresaFilialFaturamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataEmissaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataEmissaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataHoraBaseAlteracao",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Produtos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "Servicos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "IdClassificacao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdGerencial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdRequisitante",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdDepartamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdComprador",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SituacaoAutorizacao",
            "in": "query",
            "description": "Caso for Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAutorizacaoOrdemCompraDto.AutorizadaNaDataInformada, depende do valor de Radar.API.Model.Compras.Dtos.V1.OrdemCompra.OrdemCompraFiltroDto.NaDataInformada.",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAutorizacaoOrdemCompraDto"
            }
          },
          {
            "name": "NaDataInformada",
            "in": "query",
            "description": "Caso Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAutorizacaoOrdemCompraDto seja informada como  Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAutorizacaoOrdemCompraDto.AutorizadaNaDataInformada, busca exclusivamente por Ordens de Compra autorizadas na data informada.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "SituacaoAtendimento",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAtendimentoOrdemCompraDto"
            }
          },
          {
            "name": "SituacaoIntegracao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoIntegracaoOrdemCompraDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadOrdemCompraDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compras/v1/ordem-compra/{id}": {
      "get": {
        "tags": [
          "OrdemCompra"
        ],
        "summary": "Leitura de Ordens de Compra pelo ID",
        "description": "Lê uma Ordem de Compra com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Ordem de Compra a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadOrdemCompraDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "OrdemCompra"
        ],
        "summary": "Exclusão de Ordem de Compra pelo ID",
        "description": "Exclui uma Ordem de Compra com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Ordem de Compra a ser excluída.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/compras/v1/ordem-compra/{id}/cancelar": {
      "post": {
        "tags": [
          "OrdemCompra"
        ],
        "summary": "Cancela a Ordem de Compra pelo ID",
        "description": "Cancela uma Ordem de Compra com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Ordem de Compra a ser cancelada.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.Create.CreateJustificativaCancelamentoOrdemCompraDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.Create.CreateJustificativaCancelamentoOrdemCompraDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/compras/v1/ordem-compra/{id}/desfazer-cancelamento": {
      "post": {
        "tags": [
          "OrdemCompra"
        ],
        "summary": "Desfaz o cancelamento da Ordem de Compra pelo ID",
        "description": "Desfaz o cancelamento de uma Ordem de Compra com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Ordem de Compra cancelada.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/producao/v1/ordem-producao/produto": {
      "post": {
        "tags": [
          "OrdemProducao"
        ],
        "summary": "Gravação de Ordens de Produção",
        "description": "Grava uma lista de Ordens de Produção com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Ordens de Produção a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateOrdemProducaoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateOrdemProducaoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "OrdemProducao"
        ],
        "summary": "Busca de Ordens de Produção",
        "description": "Lê uma lista de Ordens de Produção com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "TipoPeriodo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoPeriodoFiltroOrdemProducaoDto"
            }
          },
          {
            "name": "PeriodoDataInicial",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "PeriodoDataFinal",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "NumeroInicial",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "NumeroFinal",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "Produtos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "DesconsiderarProdutosSubordinados",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Insumos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "DesconsiderarInsumosSubordinados",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "IdsFilial",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsProjeto",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsTipoOrdemProducao",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsFluxo",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsIndustrializador",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsPedido",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdsCliente",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Situacoes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoSituacaoOrdemProducaoDto"
              }
            }
          },
          {
            "name": "SituacoesImpressao",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoSituacaoImpressaoOrdemProducaoDto"
              }
            }
          },
          {
            "name": "TiposItemAtendimento",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoAtendimentoOrdemProducaoDto"
              }
            }
          },
          {
            "name": "IndustrializacaoParaTerceiro",
            "in": "query",
            "description": "Caso não informado, retornar todos.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "InformacoesExtras.InformacaoExtra1",
            "in": "query",
            "schema": {
              "maxLength": 80,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InformacaoExtra2",
            "in": "query",
            "schema": {
              "maxLength": 80,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InformacaoExtra3",
            "in": "query",
            "schema": {
              "maxLength": 80,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InformacaoExtra4",
            "in": "query",
            "schema": {
              "maxLength": 80,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InformacaoExtra5",
            "in": "query",
            "schema": {
              "maxLength": 80,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadOrdemProducaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/ordem-producao/produto/{id}": {
      "get": {
        "tags": [
          "OrdemProducao"
        ],
        "summary": "Leitura de Ordem de Produção pelo ID",
        "description": "Lê uma Ordem de Produção com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Ordem de Produção a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadOrdemProducaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/pedido/{id}": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Leitura de Pedidos pelo ID",
        "description": "Lê um Pedido com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Pedido a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/comercial/v1/pedido": {
      "get": {
        "tags": [
          "Pedido"
        ],
        "summary": "Busca de Pedidos",
        "description": "Lê uma lista de Pedidos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Numero",
            "in": "query",
            "schema": {
              "maxLength": 11,
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "Situacoes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoSituacaoPedidoDto"
              }
            }
          },
          {
            "name": "SituacoesProducao",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoSituacaoProducaoPedidoDto"
              }
            }
          },
          {
            "name": "Origem",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.OrigemPedidoDto"
              }
            }
          },
          {
            "name": "DataPedidoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataPedidoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataPedidoEntregaInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataPedidoEntregaFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataHoraBaseAlteracao",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "IdCliente",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdClientes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdRepresentantes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdVendedores",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdTransportadoras",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Produtos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
              }
            }
          },
          {
            "name": "IdServicos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdNaturezaOperacaoProdutos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "IdNaturezaOperacaoServicos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/pessoa": {
      "post": {
        "tags": [
          "Pessoa"
        ],
        "summary": "Gravação de Pessoas",
        "description": "Grava uma lista de pessoas com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de pessoas a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Pessoa.CreatePessoaDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Pessoa.CreatePessoaDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Pessoa.ReadPessoaDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Pessoa"
        ],
        "summary": "Busca de Pessoas",
        "description": "Lê uma lista de Pessoas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 42,
              "type": "string"
            }
          },
          {
            "name": "Apelido",
            "in": "query",
            "schema": {
              "maxLength": 64,
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "maxLength": 64,
              "type": "string"
            }
          },
          {
            "name": "IdUsuario",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Pessoa.ReadPessoaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/pessoa/{id}": {
      "get": {
        "tags": [
          "Pessoa"
        ],
        "summary": "Leitura de Pessoa pelo ID",
        "description": "Lê uma Pessoa com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Pessoa a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Pessoa.ReadPessoaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/plano-contabil/{id}": {
      "get": {
        "tags": [
          "PlanoContabil"
        ],
        "summary": "Leitura de Plano de Conta Contábil pelo ID",
        "description": "Lê um Plano de Conta Contábil com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Plano de Conta Contábil a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.ReadPlanoContabilDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/plano-contabil": {
      "get": {
        "tags": [
          "PlanoContabil"
        ],
        "summary": "Busca de Planos de Conta Contábil",
        "description": "Lê uma lista de Planos de Conta Contábil com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Tipo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.TipoPlanoContabilFiltroDto"
            }
          },
          {
            "name": "Classificacao",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*1.01), depois (1.01\\*), ou antes e depois do código (\\*.01\\*). Ao usar o caractere coringa, será retornado todas os planos que começarem e/ou terminarem com o restante do código.",
            "schema": {
              "maxLength": 28,
              "type": "string"
            }
          },
          {
            "name": "Caracteristicas",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.CaracteristicasPlanoContabilFiltroDto"
              }
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.ReadPlanoContabilDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/plano-gerencial/{id}": {
      "get": {
        "tags": [
          "PlanoGerencial"
        ],
        "summary": "Leitura de Plano de Conta Gerencial pelo ID",
        "description": "Lê um Plano de Conta Gerencial com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Plano de Conta Gerencial a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoGerencial.ReadPlanoGerencialDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/plano-gerencial": {
      "get": {
        "tags": [
          "PlanoGerencial"
        ],
        "summary": "Busca de Planos de Conta Gerencial",
        "description": "Lê uma lista de Planos de Conta Gerencial com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Tipo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoGerencial.TipoPlanoGerencialFiltroDto"
            }
          },
          {
            "name": "Classificacao",
            "in": "query",
            "description": "Esse campo aceita o caractere coringa (\\*) podendo ser usado antes (\\*1.01), depois (1.01\\*), ou antes e depois do código (\\*.01\\*). Ao usar o caractere coringa, será retornado todas os planos que começarem e/ou terminarem com o restante do código.",
            "schema": {
              "maxLength": 28,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoGerencial.ReadPlanoGerencialDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/portador/{id}": {
      "get": {
        "tags": [
          "Portador"
        ],
        "summary": "Leitura de Portador pelo ID",
        "description": "Lê um Portador com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Portador a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Portador.ReadPortadorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/portador": {
      "get": {
        "tags": [
          "Portador"
        ],
        "summary": "Busca de Portadores",
        "description": "Lê uma lista de Portadores com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Numero",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "NomeFantasia",
            "in": "query",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "CodigoISPB",
            "in": "query",
            "schema": {
              "maxLength": 8,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Portador.ReadPortadorDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compras/v1/pre-registro-notas/{id}": {
      "get": {
        "tags": [
          "PreRegistroNotas"
        ],
        "summary": "Leitura de Pré-registro de Notas pelo ID",
        "description": "Lê um Pré-registro de Notas com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Pré-registro de Notas a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.PreRegistroNotas.ReadPreRegistroNotasDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/compras/v1/pre-registro-notas": {
      "get": {
        "tags": [
          "PreRegistroNotas"
        ],
        "summary": "Busca de Pré-registros de Notas",
        "description": "Lê uma lista de Pré-registros de Notas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.PreRegistroNotas.TipoSituacaoPreRegistroNotasDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.PreRegistroNotas.ReadPreRegistroNotasDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/processo/{id}": {
      "get": {
        "tags": [
          "Processo"
        ],
        "summary": "Leitura de Processo pelo ID",
        "description": "Lê um Processo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Processo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna o Processo lido.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Processo.ReadProcessoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/processo": {
      "get": {
        "tags": [
          "Processo"
        ],
        "summary": "Busca de Processos",
        "description": "Lê uma lista de Processos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retorna uma lista de Processos lidos.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Processo.ReadProcessoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/produto/{id}": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Leitura de Produto pelo ID",
        "description": "Lê um Produto com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Produto a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/produto": {
      "get": {
        "tags": [
          "Produto"
        ],
        "summary": "Busca de Produtos",
        "description": "Lê uma lista de Produtos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Tipo",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoProdutoFiltroDto"
              }
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "maxLength": 1500,
              "type": "string"
            }
          },
          {
            "name": "GTIN",
            "in": "query",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "Referencia",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "ReferenciaGrade",
            "in": "query",
            "schema": {
              "maxLength": 100,
              "type": "string"
            }
          },
          {
            "name": "DataHoraAlteracao",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/projeto/{id}": {
      "get": {
        "tags": [
          "Projeto"
        ],
        "summary": "Leitura de Projeto pelo ID",
        "description": "Lê um Projeto com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Projeto a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Projeto.ReadProjetoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/projeto": {
      "get": {
        "tags": [
          "Projeto"
        ],
        "summary": "Busca de Projetos",
        "description": "Lê uma lista de Projetos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "RemoverInativos",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdCliente",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Projeto.ReadProjetoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/projeto-producao/{id}": {
      "get": {
        "tags": [
          "ProjetoProducao"
        ],
        "summary": "Leitura de Projeto pelo ID",
        "description": "Lê um Projeto com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Projeto a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ProjetoProducao.ReadProjetoProducaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/projeto-producao": {
      "get": {
        "tags": [
          "ProjetoProducao"
        ],
        "summary": "Busca de Projetos",
        "description": "Lê uma lista de Projetos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ProjetoProducao.TipoSituacaoProjetoProducaoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ProjetoProducao.ReadProjetoProducaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/recurso/{id}": {
      "get": {
        "tags": [
          "Recurso"
        ],
        "summary": "Leitura de Recurso pelo ID",
        "description": "Lê um Recurso com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Recurso a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Recurso.ReadRecursoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/recurso": {
      "get": {
        "tags": [
          "Recurso"
        ],
        "summary": "Busca de Recursos",
        "description": "Lê uma lista de Recursos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Recurso.ReadRecursoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compras/v1/registro-entrada": {
      "post": {
        "tags": [
          "RegistroEntrada"
        ],
        "summary": "Gravação de registros de entrada",
        "description": "Grava uma lista de registros de entrada com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de registros de entrada a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "RegistroEntrada"
        ],
        "summary": "Busca de Registros de Entrada",
        "description": "Lê uma lista de Registros de Entrada com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdFornecedor",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdOrdemCompra",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataEmissaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataEmissaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataEntradaInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataEntradaFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataHoraBaseAlteracao",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "NumeroDocumento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Itens",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
              }
            }
          },
          {
            "name": "IdClassificacao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdGerencial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdRequisitante",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdDepartamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdComprador",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/compras/v1/registro-entrada/{id}": {
      "get": {
        "tags": [
          "RegistroEntrada"
        ],
        "summary": "Leitura de Registros de Entrada pelo ID",
        "description": "Lê uma Registro de Entrada com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Registro de Entrada a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/representante/{id}": {
      "get": {
        "tags": [
          "Representante"
        ],
        "summary": "Leitura de Representante pelo ID",
        "description": "Lê um Representante com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Representante a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/representante": {
      "get": {
        "tags": [
          "Representante"
        ],
        "summary": "Busca de Representantes",
        "description": "Lê uma lista de Representantes com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "TipoPessoa",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaFiltroDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "RazaoSocial",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "NomeFantasia",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "IdMunicipio",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "schema": {
              "maxLength": 2,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra1",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra2",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra3",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra4",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "DataHoraGravacaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DataHoraGravacaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CpfCnpj",
            "in": "query",
            "schema": {
              "maxLength": 18,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/requisitante/{id}": {
      "get": {
        "tags": [
          "Requisitante"
        ],
        "summary": "Leitura do cadastro de Requisitantes pelo ID",
        "description": "Lê um Requisitante com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do cadastro de Requisitantes a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Requisitante.ReadRequisitanteDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/requisitante": {
      "get": {
        "tags": [
          "Requisitante"
        ],
        "summary": "Busca do cadastro de Requisitantes",
        "description": "Lê uma lista de Requisitantes com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 5,
              "type": "string"
            }
          },
          {
            "name": "IdFilial",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdDepartamento",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Requisitante.ReadRequisitanteDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/rubrica/{id}": {
      "get": {
        "tags": [
          "Rubrica"
        ],
        "summary": "Leitura de Rubrica pelo ID",
        "description": "Lê uma rubrica com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da rubrica a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Rubrica.ReadRubricaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/rubrica": {
      "get": {
        "tags": [
          "Rubrica"
        ],
        "summary": "Busca de Rubricas",
        "description": "Lê uma lista de rubricas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Rubrica.ReadRubricaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/rubrica-programada": {
      "post": {
        "tags": [
          "RubricaProgramada"
        ],
        "summary": "Gravação de Rubricas Programadas",
        "description": "Grava uma lista de Rubricas Programadas com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Rubricas Programadas a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.CreateRubricaProgramadaDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.CreateRubricaProgramadaDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "RubricaProgramada"
        ],
        "summary": "Busca de Rubricas Programadas",
        "description": "Lê uma lista de Rubricas Programadas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "VigenciaInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "01/2024"
            }
          },
          {
            "name": "VigenciaFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "example": "01/2024"
            }
          },
          {
            "name": "IdEmpregado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IdRubrica",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TipoFolha",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.Enums.TipoFolhaDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.ReadRubricaProgramadaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/rubrica-programada/{id}": {
      "get": {
        "tags": [
          "RubricaProgramada"
        ],
        "summary": "Leitura de Rubrica Programada pelo ID",
        "description": "Lê uma Rubrica Programada com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Rubrica Programada a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.ReadRubricaProgramadaDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "RubricaProgramada"
        ],
        "summary": "Exclusão da Rubrica Programada pelo ID",
        "description": "Exclui uma Rubrica Programada com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Rubrica Programada a ser excluída.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/folha/v1/salario-atual/{id}": {
      "get": {
        "tags": [
          "SalarioAtual"
        ],
        "summary": "Leitura do Salário Atual pelo ID",
        "description": "Lê um Salário Atual com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Salário Atual a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SalarioAtual.ReadSalarioAtualDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/salario-atual": {
      "get": {
        "tags": [
          "SalarioAtual"
        ],
        "summary": "Busca de Salários Atuais",
        "description": "Lê uma lista de Salários Atuais com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "MotivoReajuste",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SalarioAtual.Enums.MotivoReajusteDto"
            }
          },
          {
            "name": "TipoSalario",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SalarioAtual.Enums.TipoSalarioDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SalarioAtual.ReadSalarioAtualDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/servico/{id}": {
      "get": {
        "tags": [
          "Servico"
        ],
        "summary": "Leitura de Serviço pelo ID",
        "description": "Lê um Serviço com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Serviço a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Servico.ReadServicoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/servico": {
      "get": {
        "tags": [
          "Servico"
        ],
        "summary": "Busca de Serviços",
        "description": "Lê uma lista de Serviços com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 20,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "maxLength": 250,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Servico.ReadServicoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/sindicato-empregado/{id}": {
      "get": {
        "tags": [
          "SindicatoEmpregado"
        ],
        "summary": "Leitura de Sindicato de Empregado pelo ID",
        "description": "Lê um Sindicato de Empregado com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Sindicato de Empregado a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SindicatoEmpregado.ReadSindicatoEmpregadoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/sindicato-empregado": {
      "get": {
        "tags": [
          "SindicatoEmpregado"
        ],
        "summary": "Busca de Sindicatos de Empregados",
        "description": "Lê uma lista de Sindicatos de Empregados com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint64"
            }
          },
          {
            "name": "EntidadeSindical",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SindicatoEmpregado.Enums.FiltroTipoEntidadeSindicalDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SindicatoEmpregado.ReadSindicatoEmpregadoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/situacao/{id}": {
      "get": {
        "tags": [
          "Situacao"
        ],
        "summary": "Leitura de Situações pelo ID",
        "description": "Lê uma Situação com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Situação a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Situacao.ReadSituacaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/situacao": {
      "get": {
        "tags": [
          "Situacao"
        ],
        "summary": "Busca de Situações",
        "description": "Lê uma lista de Situações com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Tipos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Situacao.Enums.TipoSituacaoDto"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Situacao.ReadSituacaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/situacao-equipamento": {
      "post": {
        "tags": [
          "SituacaoEquipamento"
        ],
        "summary": "Gravação de Situação do Equipamento",
        "description": "Grava uma lista de Situação do Equipamento com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Situação do Equipamento a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.SituacaoEquipamento.CreateSituacaoEquipamentoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.SituacaoEquipamento.CreateSituacaoEquipamentoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "SituacaoEquipamento"
        ],
        "summary": "Busca de Situações do Equipamento",
        "description": "Lê uma lista de Situações do Equipamento com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 25,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.SituacaoEquipamento.ReadSituacaoEquipamentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/situacao-equipamento/{id}": {
      "get": {
        "tags": [
          "SituacaoEquipamento"
        ],
        "summary": "Leitura de Situação do Equipamento pelo ID",
        "description": "Lê uma Situação do Equipamento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Situação do Equipamento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.SituacaoEquipamento.ReadSituacaoEquipamentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tabela-preco-venda-produto/{id}": {
      "get": {
        "tags": [
          "TabelaPrecoVendaProduto"
        ],
        "summary": "Leitura de Tabela de Preço de Venda de Produto pelo ID",
        "description": "Lê uma Tabela de Preço de Venda de Produto com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Tabela de Preço de Venda de Produto a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TabelaPrecoVendaProduto.ReadTabelaPrecoVendaProdutoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tabela-preco-venda-produto": {
      "get": {
        "tags": [
          "TabelaPrecoVendaProduto"
        ],
        "summary": "Busca de Tabelas de Preço de Venda de Produto",
        "description": "Lê uma lista de Tabelas de Preço de Venda de Produto com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TabelaPrecoVendaProduto.ReadTabelaPrecoVendaProdutoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tabela-preco-venda-servico/{id}": {
      "get": {
        "tags": [
          "TabelaPrecoVendaServico"
        ],
        "summary": "Leitura de Tabela de Preço de Venda de Serviço pelo ID",
        "description": "Lê uma Tabela de Preço de Venda de Serviço com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Tabela de Preço de Venda de Serviço a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TabelaPrecoVendaServico.ReadTabelaPrecoVendaServicoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tabela-preco-venda-servico": {
      "get": {
        "tags": [
          "TabelaPrecoVendaServico"
        ],
        "summary": "Busca de Tabelas de Preço de Venda de Serviço",
        "description": "Lê uma lista de Tabelas de Preço de Venda de Serviço com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TabelaPrecoVendaServico.ReadTabelaPrecoVendaServicoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/terceiro/{id}": {
      "get": {
        "tags": [
          "Terceiro"
        ],
        "summary": "Leitura de Terceiro pelo ID",
        "description": "Lê um terceiro com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do terceiro a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Terceiro.ReadTerceiroDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/terceiro": {
      "get": {
        "tags": [
          "Terceiro"
        ],
        "summary": "Busca de Terceiros",
        "description": "Lê uma lista de Terceiros Analíticos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint64"
            }
          },
          {
            "name": "Caracteristica",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Terceiro.Enums.TipoCaracteristicaDto"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Terceiro.ReadTerceiroDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/tipo": {
      "post": {
        "tags": [
          "Tipo"
        ],
        "summary": "Gravação de Tipo",
        "description": "Grava uma lista de Tipos com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Tipos a serem gravadas.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Tipo.CreateTipoDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Tipo.CreateTipoDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Core.Dto.ReadDtoBase"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Tipo"
        ],
        "summary": "Busca de Tipos",
        "description": "Lê uma lista de Tipos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 200,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Tipo.ReadTipoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/gerenciador/v1/tipo/{id}": {
      "get": {
        "tags": [
          "Tipo"
        ],
        "summary": "Leitura de Tipo pelo ID",
        "description": "Lê um Tipo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID de Tipo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Tipo.ReadTipoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-cobranca/{id}": {
      "get": {
        "tags": [
          "TipoCobranca"
        ],
        "summary": "Leitura de Tipo de Cobrança pelo ID",
        "description": "Lê um Tipo de Cobrança com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Tipo de Cobrança a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoCobranca.ReadTipoCobrancaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-cobranca": {
      "get": {
        "tags": [
          "TipoCobranca"
        ],
        "summary": "Busca de Tipos de Cobrança",
        "description": "Lê uma lista de Tipos de Cobrança com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoCobranca.ReadTipoCobrancaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/tipo-ordem-producao/{id}": {
      "get": {
        "tags": [
          "TipoOrdemProducao"
        ],
        "summary": "Leitura de Tipo de Ordem de Produção pelo ID",
        "description": "Lê um Tipo de Ordem de Produção com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Tipo de Ordem de Produção a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.TipoOrdemProducao.ReadTipoOrdemProducaoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/producao/v1/tipo-ordem-producao": {
      "get": {
        "tags": [
          "TipoOrdemProducao"
        ],
        "summary": "Busca de Tipos de Ordem de Produção",
        "description": "Lê uma lista de Tipos de Ordem de Produção com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.TipoOrdemProducao.ReadTipoOrdemProducaoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-periodo/{id}": {
      "get": {
        "tags": [
          "TipoPeriodo"
        ],
        "summary": "Leitura de Tipo de Período pelo ID",
        "description": "Lê um Tipo de Período com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Tipo de Período a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoPeriodo.ReadTipoPeriodoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-periodo": {
      "get": {
        "tags": [
          "TipoPeriodo"
        ],
        "summary": "Busca de Tipos de Período",
        "description": "Lê uma lista de Tipos de Período com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Modulos",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoPeriodo.ModuloTipoPeriodoDto"
              }
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "maxLength": 30,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoPeriodo.ReadTipoPeriodoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-recolhimento/{id}": {
      "get": {
        "tags": [
          "TipoRecolhimento"
        ],
        "summary": "Leitura de Tipo de Recolhimento pelo ID",
        "description": "Lê um Tipo de Recolhimento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Tipo de Recolhimento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoRecolhimento.ReadTipoRecolhimentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-recolhimento": {
      "get": {
        "tags": [
          "TipoRecolhimento"
        ],
        "summary": "Busca de Tipos de Recolhimento",
        "description": "Lê uma lista de Tipos de Recolhimento com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Tipo",
            "in": "query",
            "schema": {
              "maxLength": 12,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "maxLength": 52,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoRecolhimento.ReadTipoRecolhimentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-recurso/{id}": {
      "get": {
        "tags": [
          "TipoRecurso"
        ],
        "summary": "Leitura de Tipo de Recurso pelo ID",
        "description": "Lê um Tipo de Recurso com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Tipo de Recurso a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoRecurso.ReadTipoRecursoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-recurso": {
      "get": {
        "tags": [
          "TipoRecurso"
        ],
        "summary": "Busca de Tipos de Recurso",
        "description": "Lê uma lista de Tipos de Recurso com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Tipo",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoRecurso.TipoTipoRecursoDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoRecurso.ReadTipoRecursoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-vencimento/{id}": {
      "get": {
        "tags": [
          "TipoVencimento"
        ],
        "summary": "Leitura de Tipo de Vencimento pelo ID",
        "description": "Lê um vencimento com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do vencimento a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoVencimento.ReadVencimentoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/tipo-vencimento": {
      "get": {
        "tags": [
          "TipoVencimento"
        ],
        "summary": "Busca de Tipos de Vencimentos",
        "description": "Lê uma lista de vencimentos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoVencimento.ReadVencimentoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/titulo-centro-custo/{id}": {
      "get": {
        "tags": [
          "TituloCentroCusto"
        ],
        "summary": "Leitura de Centro de Custo Título pelo ID",
        "description": "Lê um centro de custo título com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do centro de custo título a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.TituloCentroCusto.ReadTituloCentroCustoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/folha/v1/titulo-centro-custo": {
      "get": {
        "tags": [
          "TituloCentroCusto"
        ],
        "summary": "Busca de Centros de Custos Títulos",
        "description": "Lê uma lista de Centros de Custos Títulos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.TituloCentroCusto.ReadTituloCentroCustoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/titulo-contas-pagar": {
      "post": {
        "tags": [
          "TituloContasPagar"
        ],
        "summary": "Gravação de Títulos de Contas a Pagar",
        "description": "Grava uma lista de Títulos de Contas a Pagar com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Títulos de Contas a Pagar a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.CreateTituloContasPagarDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.CreateTituloContasPagarDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retornar a lista de Títulos de Contas a Pagar gravados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.CreateTituloContasPagarDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TituloContasPagar"
        ],
        "summary": "Busca de Títulos de Contas a Pagar",
        "description": "Lê uma lista de Títulos de Contas a Pagar com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdCedente",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NumeroDocumento",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "DataInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ValorInicial",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "ValorFinal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.SituacaoDto"
              }
            }
          },
          {
            "name": "TipoData",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.TipoDataDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.ReadTituloContasPagarDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/titulo-contas-pagar/{id}": {
      "get": {
        "tags": [
          "TituloContasPagar"
        ],
        "summary": "Leitura de Título de Contas a Pagar pelo ID",
        "description": "Lê um Título de Contas a Pagar com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Título de Contas a Pagar a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.ReadTituloContasPagarDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TituloContasPagar"
        ],
        "summary": "Exclusão de Título de Contas a Pagar pelo ID",
        "description": "Exclui um Título de Contas a Pagar com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Título de Contas a Pagar a ser excluído.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/financeiro/v1/titulo-contas-receber": {
      "post": {
        "tags": [
          "TituloContasReceber"
        ],
        "summary": "Gravação de Títulos de Contas a Receber",
        "description": "Grava uma lista de Títulos de Contas a Receber com base no json informado no body da requisição.",
        "requestBody": {
          "description": "Lista de Títulos de Contas a Receber a serem gravados.",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.CreateTituloContasReceberDto"
                }
              }
            },
            "application/*+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.CreateTituloContasReceberDto"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Retornar a lista de Títulos de Contas a Receber gravados.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.CreateTituloContasReceberDto"
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "TituloContasReceber"
        ],
        "summary": "Busca de Títulos de Contas a Receber",
        "description": "Lê uma lista de Títulos de Contas a Receber com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "IdSacado",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "DataInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "DataFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "NumeroDocumento",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "ValorInicial",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "ValorFinal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.SituacaoDto"
              }
            }
          },
          {
            "name": "TipoData",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.TipoDataDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.ReadTituloContasReceberDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/financeiro/v1/titulo-contas-receber/{id}": {
      "get": {
        "tags": [
          "TituloContasReceber"
        ],
        "summary": "Leitura de Título de Contas a Receber pelo ID",
        "description": "Lê um Título de Contas a Receber com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Título de Contas a Receber a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.ReadTituloContasReceberDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "TituloContasReceber"
        ],
        "summary": "Exclusão de Título de Contas a Receber pelo ID",
        "description": "Exclui um Título de Contas a Receber com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Título de Contas a Receber a ser excluído.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/api/v1/token": {
      "post": {
        "tags": [
          "Token"
        ],
        "summary": "Token",
        "description": "Retorna token para autenticar chamadas da API,",
        "requestBody": {
          "description": "Credenciais de autenticação.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Token.CreateTokenDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Token.CreateTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Token.TokenDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/transportadora/{id}": {
      "get": {
        "tags": [
          "Transportadora"
        ],
        "summary": "Leitura de Transportadora pelo ID",
        "description": "Lê uma Transportadora com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Transportadora a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Transportadora.ReadTransportadoraDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/transportadora": {
      "get": {
        "tags": [
          "Transportadora"
        ],
        "summary": "Busca de Transportadoras",
        "description": "Lê uma lista de Transportadoras com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "TipoPessoa",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaFiltroDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "RazaoSocial",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "NomeFantasia",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "IdMunicipio",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "schema": {
              "maxLength": 2,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra1",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra2",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra3",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "InformacoesExtras.InfExtra4",
            "in": "query",
            "schema": {
              "maxLength": 60,
              "type": "string"
            }
          },
          {
            "name": "DataHoraGravacaoInicial",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "DataHoraGravacaoFinal",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "CpfCnpj",
            "in": "query",
            "schema": {
              "maxLength": 18,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Transportadora.ReadTransportadoraDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/unidade-logistica/{id}": {
      "get": {
        "tags": [
          "UnidadeLogistica"
        ],
        "summary": "Leitura de Unidades Logísticas pelo ID",
        "description": "Lê uma Unidade Logística com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Unidade Logística a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeLogistica.ReadUnidadeLogisticaDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/unidade-logistica": {
      "get": {
        "tags": [
          "UnidadeLogistica"
        ],
        "summary": "Busca de Unidades Logísticas",
        "description": "Lê uma lista de Unidades Logísticas com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 5,
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "maxLength": 40,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeLogistica.ReadUnidadeLogisticaDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/unidade-medida-produto/{id}": {
      "get": {
        "tags": [
          "UnidadeMedidaProduto"
        ],
        "summary": "Leitura de Unidade de Medida pelo ID",
        "description": "Lê uma Unidade de Medida com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Unidade de Medida a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.ReadUnidadeMedidaProdutoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/unidade-medida-produto": {
      "get": {
        "tags": [
          "UnidadeMedidaProduto"
        ],
        "summary": "Busca de Unidades de Medida",
        "description": "Lê uma lista de Unidades de Medida com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Abreviatura",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.ReadUnidadeMedidaProdutoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/unidade-medida-servico/{id}": {
      "get": {
        "tags": [
          "UnidadeMedidaServico"
        ],
        "summary": "Leitura de Unidade de Medida pelo ID",
        "description": "Lê uma Unidade de Medida com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID da Unidade de Medida a ser lida.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.ReadUnidadeMedidaServicoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/unidade-medida-servico": {
      "get": {
        "tags": [
          "UnidadeMedidaServico"
        ],
        "summary": "Busca de Unidades de Medida",
        "description": "Lê uma lista de Unidades de Medida com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Abreviatura",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.ReadUnidadeMedidaServicoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/usuario/{id}": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Leitura de Usuário pelo ID",
        "description": "Lê um Usuário com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Usuário a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Usuario.ReadUsuarioDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/usuario": {
      "get": {
        "tags": [
          "Usuario"
        ],
        "summary": "Busca de Usuários",
        "description": "Lê uma lista de Usuários com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 39,
              "type": "string"
            }
          },
          {
            "name": "Apelido",
            "in": "query",
            "schema": {
              "maxLength": 64,
              "type": "string"
            }
          },
          {
            "name": "Supervisor",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Usuario.Enums.FiltroSupervisorDto"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Usuario.ReadUsuarioDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/veiculo/{id}": {
      "get": {
        "tags": [
          "Veiculo"
        ],
        "summary": "Leitura de Veículo pelo ID",
        "description": "Lê um Veículo com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Veículo a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.ReadVeiculoDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/veiculo": {
      "get": {
        "tags": [
          "Veiculo"
        ],
        "summary": "Busca de Veículos",
        "description": "Lê uma lista de Veículos com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "TaraInicial",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "TaraFinal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "CapacidadeQuilogramaInicial",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "CapacidadeQuilogramaFinal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "CapacidadeMetroCubicoInicial",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "CapacidadeMetroCubicoFinal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "AnoInicial",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "AnoFinal",
            "in": "query",
            "schema": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            }
          },
          {
            "name": "IdCliente",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Descricao",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "CodigoANTT",
            "in": "query",
            "schema": {
              "maxLength": 12,
              "type": "string"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 12,
              "type": "string"
            }
          },
          {
            "name": "RENAVAM",
            "in": "query",
            "schema": {
              "maxLength": 11,
              "type": "string"
            }
          },
          {
            "name": "Placa",
            "in": "query",
            "schema": {
              "maxLength": 8,
              "type": "string"
            }
          },
          {
            "name": "UF",
            "in": "query",
            "schema": {
              "maxLength": 3,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "TiposCarroceria",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoCarroceriaVeiculoDto"
              }
            }
          },
          {
            "name": "TiposRodado",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoRodadoVeiculoDto"
              }
            }
          },
          {
            "name": "TiposVeiculo",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoVeiculoDto"
              }
            }
          },
          {
            "name": "TiposTransporte",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoTransporteVeiculoDto"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.ReadVeiculoDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/vendedor/{id}": {
      "get": {
        "tags": [
          "Vendedor"
        ],
        "summary": "Leitura de Vendedor pelo ID",
        "description": "Lê um Vendedor com base no ID informado na URL da requisição.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID do Vendedor a ser lido.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Vendedor.ReadVendedorDto"
                }
              }
            }
          }
        }
      }
    },
    "/api/empresarial/v1/vendedor": {
      "get": {
        "tags": [
          "Vendedor"
        ],
        "summary": "Busca de Vendedores",
        "description": "Lê uma lista de Vendedores com base no filtro informado na URL da requisição.",
        "parameters": [
          {
            "name": "Nome",
            "in": "query",
            "schema": {
              "maxLength": 50,
              "type": "string"
            }
          },
          {
            "name": "Email",
            "in": "query",
            "schema": {
              "maxLength": 256,
              "type": "string"
            }
          },
          {
            "name": "PercentualComissaoFaturamentoInicial",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "PercentualComissaoFaturamentoFinal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "PercentualComissaoRecebimentoInicial",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "PercentualComissaoRecebimentoFinal",
            "in": "query",
            "schema": {
              "type": "number",
              "format": "double"
            }
          },
          {
            "name": "Codigo",
            "in": "query",
            "schema": {
              "maxLength": 10,
              "type": "string"
            }
          },
          {
            "name": "Situacao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto"
            }
          },
          {
            "name": "PagamentoComissao",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Vendedor.IndicePagamentoComissaoDto"
            }
          },
          {
            "name": "ListaIDFilial",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Ids",
            "in": "query",
            "description": "IDs dos registros a serem filtrados. Caso seja passado um ID inválido ou inexistente o dado será retornado como null.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "CodigosIntegrador",
            "in": "query",
            "description": "Códigos de integrador dos registros a serem filtrados.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Fields",
            "in": "query",
            "description": "Campos retornados na busca.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Vendedor.ReadVendedorDto"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoFluxo.Read.ReadAcompanhamentoPedidoFluxoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "processos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoFluxo.Read.ReadAcompanhamentoPedidoFluxoProcessoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoFluxo.Read.ReadAcompanhamentoPedidoFluxoProcessoDto": {
        "type": "object",
        "properties": {
          "idProcesso": {
            "type": "string",
            "nullable": true
          },
          "idPredecessores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoProcesso.Read.ReadAcompanhamentoPedidoProcessoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "situacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoProcesso.Read.ReadAcompanhamentoPedidoProcessoSituacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoProcesso.Read.ReadAcompanhamentoPedidoProcessoSituacaoDto": {
        "type": "object",
        "properties": {
          "idSituacao": {
            "type": "string",
            "nullable": true
          },
          "idInformacaoComplementar": {
            "type": "string",
            "nullable": true
          },
          "prazoApontamento": {
            "type": "number",
            "description": "A flag PrazoEmPercentual indica se o prazo foi informado em percentual ou em quantidade de minutos",
            "format": "double"
          },
          "prazoEmPercentual": {
            "type": "boolean"
          },
          "final": {
            "type": "boolean"
          },
          "idPredecessores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.AcompanhamentoPedidoSituacao.Read.ReadAcompanhamentoPedidoSituacaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalComplementoDto": {
        "type": "object",
        "properties": {
          "informacoesAdicionais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalInformacaoAdicionalDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalDto": {
        "required": [
          "idClienteFornecedor",
          "itens"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "tipoGravacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoGravacaoNfDto"
          },
          "idFilial": {
            "type": "string",
            "description": "Se informado nulo, filial será preenchida automaticamente caso exista apenas uma filial ativa para o usuário da requisição.\r\n",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoNfDto"
          },
          "finalidade": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfDto"
          },
          "finalidadeNfNormalComplemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfNormalComplementoDto"
          },
          "finalidadeNfAjusteComplemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfAjusteComplementoDto"
          },
          "indicadorPresencaComprador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorPresencaCompradorNfDto"
          },
          "numero": {
            "type": "integer",
            "description": "Só deve ser informado se o TipoGravacao for Registrar (Não disponível).\r\n",
            "format": "int32"
          },
          "idDocumento": {
            "type": "string",
            "nullable": true
          },
          "leiaute": {
            "maxLength": 20,
            "type": "string",
            "description": "Se informado nulo, o leiaute será preenchido automaticamente caso o documento informado tiver um leiaute vinculado nas propriedades do Comercial.\r\n\r\nO campo será desconsiderado caso seja uma NF-e.\r\n",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "description": "Só deve ser informado se o TipoGravacao for Registrar (Não disponível).\r\n",
            "format": "date-time"
          },
          "dataEntradaSaida": {
            "type": "string",
            "description": "Se informado, não pode ser menor que a data e hora de emissão.\r\n",
            "format": "date-time"
          },
          "idOperacaoComercial": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoProduto": {
            "type": "string",
            "description": "O campo será desconsiderado caso a nota fiscal não tenha produtos.\r\n",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "description": "O campo será desconsiderado caso a base não utilize classificação empresarial ou a data de emissão seja menor que a data de início da classificação empresarial.\r\n",
            "nullable": true
          },
          "idClienteFornecedor": {
            "minLength": 1,
            "type": "string"
          },
          "consumidorFinal": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorConsumidorFinalNfCreateDto"
          },
          "localEntrega": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalLocalEntregaDto"
          },
          "vendedores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalVendedorRepresentanteDto"
            },
            "description": "Se informado nulo, a lista será preenchida automaticamente caso essa informação esteja parametrizada nos cadastros do cliente/fornecedor da nota e/ou do usuário da integração,\r\nsendo o primeiro prioritário sobre o segundo.\r\n",
            "nullable": true
          },
          "representantes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalVendedorRepresentanteDto"
            },
            "description": "Se informado nulo, a lista será preenchida automaticamente caso essa informação esteja parametrizada nos cadastros do cliente/fornecedor da nota e/ou do usuário da integração,\r\nsendo o primeiro prioritário sobre o segundo.\r\n",
            "nullable": true
          },
          "intermediador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalIntermediadorDto"
          },
          "complemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalComplementoDto"
          },
          "tipoRateio": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.CreateTipoRateioNfDto"
          },
          "itens": {
            "maxItems": 990,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemDto"
            },
            "description": "Referente aos descontos do item:\r\n- Se as flags DescontoPorTotal e DescontoEmPercentual não forem informados no Json ou informados nulo, o sistema irá assumir os campos de desconto na seguinte ordem:\r\n<ul><li>ValorDescontoTotal</li><li>ValorDescontoUnitario</li><li>PercentualDesconto</li></ul>\r\n- Os campos de desconto não são cumulativos: se informado desconto em valor o sitema calcula o % e vice-versa."
          },
          "total": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalTotalDto"
          },
          "transporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalTransporteDto"
          },
          "volume": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalVolumeDto"
          },
          "faturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalFaturamentoDto"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalRateioDto"
            },
            "nullable": true
          },
          "nfsReferidas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalReferidaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalFaturamentoDto": {
        "type": "object",
        "properties": {
          "idCobranca": {
            "type": "string",
            "description": "- Informe este campo apenas quando o valor total a pagar for maior que zero.\r\n\r\n- Para TipoGravacao 'Gravar' e 'Emitir', se o campo não for informado no JSON ou for informado como nulo, será sugerido conforme o cadastro do cliente, caso o tipo de cobrança esteja ativo.\r\n",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "description": "- Informe este campo apenas quando o valor total a pagar for maior que zero e o TipoGravacao for 'Gravar' ou 'Emitir'.\r\n\r\n- Se o campo não for informado no JSON ou for informado como nulo, será sugerido conforme o cadastro do cliente. Se não houver condição de pagamento vinculada no cadastro do cliente, será sugerida a primeira condição encontrada no módulo Comercial e dentro da validade.\r\n",
            "nullable": true
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalFaturamentoParcelaDto"
            },
            "description": "Informe este campo apenas quando o valor total a pagar for maior que zero.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalFaturamentoParcelaDto": {
        "type": "object",
        "properties": {
          "numeroParcela": {
            "type": "integer",
            "description": "Quando houver condição de pagamento vinculada à NF, o campo será ignorado e recalculado.\r\n\r\nQuando não houver condição de pagamento vinculada à NF:\r\n\r\n- Este campo só será considerado se estiver informado em todas as parcelas.\r\n\r\n- Se o campo de todas as parcelas não for informado no JSON ou for informado como nulo, será calculado automaticamente em uma sequência crescente (1, 2, 3, ...).",
            "format": "int32",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "description": "Para TipoGravacao 'Gravar' e 'Emitir':\r\n\r\n- Se o campo não for informado no JSON ou for informado como nulo, será sugerido conforme o cadastro do cliente, caso a forma de pagamento esteja ativa.",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "description": "Para TipoGravacao 'Gravar' e 'Emitir':\r\n\r\n- Se o campo não for informado no JSON ou for informado como nulo, será sugerido conforme a condição de pagamento vinculada à NF.",
            "format": "date",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "description": "- Se o campo de todas as parcelas não for informado no JSON ou for informado como nulo, será sugerido conforme a condição de pagamento vinculada à NF.\r\n\r\n- Valor com até duas casas decimais.",
            "format": "double",
            "nullable": true
          },
          "observacoes": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalGerencialDto": {
        "type": "object",
        "properties": {
          "idConta": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalInformacaoAdicionalDto": {
        "type": "object",
        "properties": {
          "idMensagem": {
            "type": "string",
            "description": "Informe esse campo caso queira selecionar uma mensagem já cadastrada no cadastro de Mensagens.\r\nEste campo pode ser informado isoladamente ou em conjunto com Observacao.\r\nCaso ambos sejam informados, Observação será concatenada imediatamente após texto da mensagem referenciada em IdMensagem.\r\nPara outras variações de concatenação é possível ler mensagem da rota de mensagens e embutir dentro do campo Observacao.",
            "nullable": true
          },
          "observacao": {
            "maxLength": 5000,
            "type": "string",
            "description": "Este campo pode ser informado isoladamente ou em conjunto com IdMensagem.\r\nCaso ambos sejam informados, Observação será concatenada imediatamente após texto da mensagem referenciada em IdMensagem.\r\nPara quebra de linhas usar \\r\\n.\r\nPara ajustar tabulação informar \\t.",
            "nullable": true
          },
          "integrarFiscal": {
            "type": "boolean",
            "description": "Flag válida apenas para TipoMensagem igual a Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoMensagemNfDto.Informada."
          },
          "tipoMensagem": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.CreateTipoMensagemNfDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalIntermediadorDto": {
        "type": "object",
        "properties": {
          "indicadorIntermediador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorIntermediadorNfDto"
          },
          "idIntermediador": {
            "type": "string",
            "description": "Id de Fornecedor pessoa jurídica\r\n\r\nO campo será desconsiderado caso o IndicadorIntermediador seja \"SemIntermediador\"\r\n",
            "nullable": true
          },
          "cnpj": {
            "type": "string",
            "description": "Só serão considerados os caracteres numéricos informados para esse campo, ou seja, 11.111.111/1111-11 é o mesmo que 11111111111111\r\n\r\nO campo será desconsiderado caso o IndicadorIntermediador seja \"SemIntermediador\"\r\n\r\nSe informado nulo, o campo será preenchido automaticamente caso tenha sido informado o IdIntermediador\r\n",
            "nullable": true
          },
          "identificacao": {
            "maxLength": 60,
            "type": "string",
            "description": "O campo será desconsiderado caso o IndicadorIntermediador seja \"SemIntermediador\"\r\n\r\nSe informado nulo, o campo será preenchido automaticamente caso tenha sido informado o IdIntermediador\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemDto": {
        "required": [
          "produtoServico",
          "quantidadeVenda"
        ],
        "type": "object",
        "properties": {
          "idTabelaPreco": {
            "type": "string",
            "description": "Para TipoGravacao 'Gravar' e 'Emitir':\r\n\r\n- Se campo não informado no Json ou informado nulo, será sugerido conforme parametrização desses cadastros, na seguinte ordem de prioridade: Cliente/Fornecedor da nota, primeiro Representante da nota, Filial da nota, Tabela de Preços padrão.",
            "nullable": true
          },
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "complemento": {
            "maxLength": 4000,
            "type": "string",
            "nullable": true
          },
          "classificacaoFiscal": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "idUnidadeVenda": {
            "type": "string",
            "description": "Para TipoGravacao 'Gravar' e 'Emitir':\r\n\r\n- Se campo não informado no Json ou informado nulo, será sugerido do cadastro do Produto.",
            "nullable": true
          },
          "idNaturezaOperacao": {
            "type": "string",
            "description": "Para TipoGravacao Gravar e Emitir:\r\n\r\nSe campo não informado no Json ou informado nulo, será sugerido do Cadastro do Cliente/Fornecedor e Operação Comercial.",
            "nullable": true
          },
          "quantidadeVenda": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "percentualDesconto": {
            "type": "number",
            "description": "- O desconto pode ser informado em valor por unidade, em valor no total do item, ou em percentual.\r\n\r\n- Caso informado em valor por unidade ou em valor no total do item, o PercentualDesconto será calculado.\r\n\r\n- A flag DescontoEmPercentual indica se o desconto foi informado em Percentual.\r\n\r\n- A flag DescontoPorTotal indica se o desconto foi informado no total do item.\r\n",
            "format": "double",
            "nullable": true
          },
          "valorDescontoUnitario": {
            "type": "number",
            "description": "- O desconto pode ser informado em valor por unidade, em valor no total do item, ou em percentual.\r\n\r\n- Para TipoGravacao 'Gravar' e 'Emitir':\r\n<ul><li>Caso tenha sido informado em valor no total do item ou em percentual, o ValorDescontoUnitario será calculado.</li></ul>\r\n- A flag DescontoEmPercentual indica se o desconto foi informado em Percentual.\r\n\r\n- A flag DescontoPorTotal indica se o desconto foi informado no total do item.",
            "format": "double",
            "nullable": true
          },
          "valorDescontoTotal": {
            "type": "number",
            "description": "- O desconto pode ser informado em valor por unidade, em valor no total do item, ou em percentual.\r\n\r\n- Para TipoGravacao 'Gravar' e 'Emitir':\r\n<ul><li>Caso tenha sido informado em valor por unidade ou em percentual, o ValorDescontoTotal será calculado.</li></ul>\r\n- A flag DescontoEmPercentual indica se o desconto foi informado em Percentual.\r\n\r\n- A flag DescontoPorTotal indica se o desconto foi informado no total do item.",
            "format": "double",
            "nullable": true
          },
          "descontoPorTotal": {
            "type": "boolean",
            "description": "Indica se o desconto foi informado no total do item.",
            "nullable": true
          },
          "descontoEmPercentual": {
            "type": "boolean",
            "description": "Indica se o desconto foi informado em Percentual.",
            "nullable": true
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "livreDeCobranca": {
            "type": "boolean"
          },
          "pesoLiquidoUnitario": {
            "type": "number",
            "description": "Para TipoGravacao 'Gravar' e 'Emitir':\r\n\r\n- Se campo não informado no Json ou informado nulo, será sugerido do cadastro do Produto.",
            "format": "double",
            "nullable": true
          },
          "quantidadeVolumes": {
            "maximum": 99999999999999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "fci": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemFciDto"
          },
          "pedidoCompra": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemPedidoCompraDto"
          },
          "liberacoesEstoque": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemLiberacaoEstoqueDto"
            },
            "nullable": true
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalRateioDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemFciDto": {
        "type": "object",
        "properties": {
          "numeroControle": {
            "maxLength": 36,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemLiberacaoEstoqueDto": {
        "required": [
          "idLocalEstocagem",
          "quantidadeLiberada"
        ],
        "type": "object",
        "properties": {
          "idLocalEstocagem": {
            "minLength": 1,
            "type": "string"
          },
          "idLocalTransferencia": {
            "type": "string",
            "nullable": true
          },
          "idFornecedorEptEtpe": {
            "type": "string",
            "nullable": true
          },
          "idClienteEptEtpe": {
            "type": "string",
            "nullable": true
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoProducaoEstoqueNfDto"
          },
          "quantidadeLiberada": {
            "type": "number",
            "format": "double"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemLiberacaoEstoqueLoteDto"
          },
          "volume": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemLiberacaoEstoqueVolumeDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemLiberacaoEstoqueLoteDto": {
        "type": "object",
        "properties": {
          "idFornecedor": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "numeroDiasValidade": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32",
            "nullable": true
          },
          "dataValidade": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemLiberacaoEstoqueVolumeDto": {
        "type": "object",
        "properties": {
          "descricao": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalItemPedidoCompraDto": {
        "type": "object",
        "properties": {
          "xPed": {
            "maxLength": 15,
            "type": "string",
            "nullable": true
          },
          "nItemPed": {
            "maxLength": 6,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalLocalEntregaDto": {
        "type": "object",
        "properties": {
          "tipoPessoa": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoPessoaDto"
          },
          "cpfCnpj": {
            "type": "string",
            "nullable": true
          },
          "inscricaoEstadual": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "cep": {
            "maxLength": 10,
            "pattern": "^\\d*$",
            "type": "string",
            "description": "Informar apenas caracteres numéricos.\r\n",
            "nullable": true
          },
          "logradouro": {
            "maxLength": 60,
            "type": "string",
            "description": "Se não informado, será sugerido conforme o CEP.\r\n",
            "nullable": true
          },
          "semNumero": {
            "type": "boolean"
          },
          "numero": {
            "maxLength": 60,
            "pattern": "^\\d*$",
            "type": "string",
            "description": "Informar apenas caracteres numéricos.\r\n",
            "nullable": true
          },
          "complemento": {
            "maxLength": 60,
            "type": "string",
            "description": "Se não informado, será sugerido conforme o CEP.\r\n",
            "nullable": true
          },
          "bairro": {
            "maxLength": 60,
            "type": "string",
            "description": "Se não informado, será sugerido conforme o CEP.\r\n",
            "nullable": true
          },
          "ddd": {
            "maximum": 99999,
            "minimum": 0,
            "type": "integer",
            "description": "Se não informado, será sugerido conforme o CEP.\r\n",
            "format": "int32",
            "nullable": true
          },
          "telefone": {
            "maximum": 999999999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "idMunicipio": {
            "type": "string",
            "description": "Se não informado, será sugerido conforme o CEP.\r\n",
            "nullable": true
          },
          "email": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Caso não seja informado, será sugerido o endereço de entrega do cadastro do cliente/fornecedor.\r\n"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalRateioDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalRelacionamentoGerencialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalReferidaDto": {
        "required": [
          "chaveAcesso"
        ],
        "type": "object",
        "properties": {
          "chaveAcesso": {
            "minLength": 1,
            "pattern": "^[0-9]{44}$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalRelacionamentoGerencialDto": {
        "type": "object",
        "properties": {
          "gerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalGerencialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalTotalDto": {
        "type": "object",
        "properties": {
          "valorTotalProdutos": {
            "type": "number",
            "description": "Até duas casas decimais.\r\n\r\nPara TipoGravacao Gravar e Emitir, esse valor será recalculado conforme totais dos produtos informados.",
            "format": "double"
          },
          "valorDescontoProdutos": {
            "type": "number",
            "description": "Até duas casas decimais.",
            "format": "double"
          },
          "percentualDescontoProdutos": {
            "type": "number",
            "description": "Até duas casas decimais.",
            "format": "double"
          },
          "descontoProdutosEmPercentual": {
            "type": "boolean",
            "nullable": true
          },
          "despesasPorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.CreateTipoIndicadorDespesasPorContaNfDto"
          },
          "valorFrete": {
            "type": "number",
            "description": "Até duas casas decimais.",
            "format": "double"
          },
          "valorSeguro": {
            "type": "number",
            "description": "Até duas casas decimais.",
            "format": "double"
          },
          "valorDespesasAcessorias": {
            "type": "number",
            "description": "Até duas casas decimais.",
            "format": "double"
          },
          "valorIcmsDispensado": {
            "type": "number",
            "description": "Até duas casas decimais.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalTransporteDto": {
        "type": "object",
        "properties": {
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFretePorContaNfDto"
          },
          "idTransportadora": {
            "type": "string",
            "description": "Se informado nulo, a transportadora será preenchida automaticamente caso o cliente tenha uma transportadora configurada em seu cadastro.\r\n",
            "nullable": true
          },
          "codigoRastreio": {
            "maxLength": 24,
            "type": "string",
            "nullable": true
          },
          "viaTransporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoViaTransporteNfDto"
          },
          "idMotorista": {
            "type": "string",
            "nullable": true
          },
          "veiculos": {
            "maxItems": 3,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalTransporteVeiculoDto"
            },
            "nullable": true
          },
          "idClienteFornecedorSaida": {
            "type": "string",
            "nullable": true
          },
          "idClienteFornecedorEntrada": {
            "type": "string",
            "nullable": true
          },
          "idTransportadoraRedespacho": {
            "type": "string",
            "description": "Se informado nulo, a transportadora redespacho será preenchida automaticamente caso o cliente tenha uma transportadora redespacho configurada em seu cadastro.\r\n\r\nO preenchimento automático não será efetuado caso a transportadora principal não seja informada via json nem via preenchimento automático.\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalTransporteVeiculoDto": {
        "type": "object",
        "properties": {
          "idVeiculo": {
            "type": "string",
            "description": "Se informado nulo, o veículo será preenchido automaticamente caso o motorista tenha um veículo configurado em seu cadastro.\r\n\r\nO preenchimento será feito apenas para o primeiro veículo da lista.\r\n",
            "nullable": true
          },
          "placaVeiculo": {
            "maxLength": 8,
            "type": "string",
            "description": "Se informado nulo, a placa será preenchida automaticamente caso o veículo tenha uma placa configurada em seu cadastro.\r\n",
            "nullable": true
          },
          "ufVeiculo": {
            "type": "string",
            "description": "Se informado nulo, a UF da placa será preenchida automaticamente caso o veículo tenha uma UF configurada em seu cadastro.\r\n",
            "nullable": true
          },
          "anttVeiculo": {
            "maxLength": 20,
            "type": "string",
            "description": "Se informado nulo, a ANTT será preenchida automaticamente caso o veículo ou a transportadora tenham uma ANTT configurada em seu cadastro, nessa ordem de prioridade.\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalVendedorRepresentanteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Create.CreateNotaFiscalVolumeDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "maximum": 99999999999999,
            "minimum": 0,
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "especie": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "marca": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "numeroInicial": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.CreateTipoIndicadorDespesasPorContaNfDto": {
        "enum": [
          "Emitente",
          "Destinatario"
        ],
        "type": "string",
        "description": "Se informado nulo, sistema irá assumir como Destinatário.\r\n"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.CreateTipoMensagemNfDto": {
        "enum": [
          "Informada",
          "Automatica"
        ],
        "type": "string",
        "description": "Informações adicionais com flag Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.CreateTipoMensagemNfDto.Automatica serão descartadas."
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.CreateTipoRateioNfDto": {
        "enum": [
          "RateioPeloLiquidoDaNf",
          "RateioPorItem",
          "RateioPeloTotalDaNf"
        ],
        "type": "string",
        "description": "Se não informar nenhuma lista de rateios, o sistema vai mudar o tipo de rateio para 'Rateio por item' e preencher conforme tal.\r\n"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoEmissaoNfeDto": {
        "enum": [
          "Normal",
          "ContingenciaFsIa",
          "ContingenciaScan",
          "ContingenciaEpec",
          "ContingenciaFsDa",
          "ContingenciaSvcAn",
          "ContingenciaSvcRs"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoEstoqueLocalNfDto": {
        "enum": [
          "Proprio",
          "EmPoderDeTerceiros",
          "DeTerceirosEmPoderDaEmpresa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfAjusteComplementoDto": {
        "enum": [
          "Nenhum",
          "AjusteTransferenciaCredito",
          "AjusteAtivoImobilizado"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfDto": {
        "enum": [
          "Normal",
          "Complementar",
          "Ajuste",
          "Devolucao",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfNormalComplementoDto": {
        "enum": [
          "Nenhum",
          "NormalOutras"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFretePorContaNfDto": {
        "enum": [
          "Emitente",
          "Destinatario",
          "Terceiro",
          "ProprioPorContaRemetente",
          "ProprioPorContaDestinatario",
          "SemFrete"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoGravacaoNfDto": {
        "enum": [
          "Gravar",
          "Emitir",
          "Registrar"
        ],
        "type": "string",
        "description": "'Registrar' não disponível no momento.\r\n"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorConsumidorFinalNfCreateDto": {
        "enum": [
          "Normal",
          "ConsumidorFinal"
        ],
        "type": "string",
        "description": "Se não for informado, o tipo será considerado Consumidor Final se no cadastro do cliente/fornecedor, para pessoa jurídica, a opção Consumidor Final estiver selecionada na aba Insc. Legais e,\r\npara pessoa física, a opção Isento estiver marcada na aba Inf. Cadastrais.\r\n"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorConsumidorFinalNfDto": {
        "enum": [
          "Normal",
          "ConsumidorFinal"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorDespesasPorContaNfDto": {
        "enum": [
          "Emitente",
          "Destinatario"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorIntermediadorNfDto": {
        "enum": [
          "SemIntermediador",
          "SiteOuPlataformaTerceiros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorPresencaCompradorNfDto": {
        "enum": [
          "NaoSeAplica",
          "OperacaoPresencial",
          "OperacaoNaoPresencialInternet",
          "OperacaoNaoPresencialTeleatendimento",
          "NfceEmOperacaoEntregaDomicilio",
          "OperacaoPresencialForaEstabelecimento",
          "OperacaoNaoPresencialOutros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoMensagemNfDto": {
        "enum": [
          "Informada",
          "Automatica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoMovimentoOrigemLiberacaoEstoqueNfDto": {
        "enum": [
          "Nenhum",
          "OrdemDeProducao",
          "Pesagem"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoNfDto": {
        "enum": [
          "Entrada",
          "Saida"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoPessoaDto": {
        "enum": [
          "Fisica",
          "Juridica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoProducaoEstoqueNfDto": {
        "enum": [
          "Externa",
          "Interna"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoRateioNfDto": {
        "enum": [
          "RateioPeloLiquidoDaNf",
          "RateioPorItem",
          "RateioPeloTotalDaNf"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoStatusNfeDto": {
        "enum": [
          "ErroValidacao",
          "AguardandoAutorizacao",
          "Autorizada",
          "Denegada",
          "Rejeitada",
          "Cancelada",
          "Inutilizada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoViaTransporteNfDto": {
        "enum": [
          "Rodoviario",
          "Ferroviario",
          "Rodoferroviario",
          "Aquaviario",
          "Dutoviario",
          "Aereo",
          "Rodoaereo",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalComplementoDto": {
        "type": "object",
        "properties": {
          "informacoesAdicionais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalInformacaoAdicionalDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "chave": {
            "type": "string",
            "nullable": true
          },
          "origemNF": {
            "type": "string",
            "nullable": true
          },
          "pedidos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalPedidoDto"
            },
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoNfDto"
          },
          "finalidade": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfDto"
          },
          "finalidadeNfNormalComplemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfNormalComplementoDto"
          },
          "finalidadeNfAjusteComplemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFinalidadeNfAjusteComplementoDto"
          },
          "serie": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "type": "integer",
            "format": "int32"
          },
          "idDocumento": {
            "type": "string",
            "nullable": true
          },
          "leiaute": {
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "format": "date-time"
          },
          "dataEntradaSaida": {
            "type": "string",
            "format": "date-time"
          },
          "indicadorPresencaComprador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorPresencaCompradorNfDto"
          },
          "idClienteFornecedor": {
            "type": "string",
            "nullable": true
          },
          "consumidorFinal": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorConsumidorFinalNfDto"
          },
          "localEntrega": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalLocalEntregaDto"
          },
          "localEmbarque": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalLocalEmbarqueDto"
          },
          "vendedores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalVendedorRepresentanteDto"
            },
            "nullable": true
          },
          "representantes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalVendedorRepresentanteDto"
            },
            "nullable": true
          },
          "idOperacaoComercial": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoProduto": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "intermediador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalIntermediadorDto"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemDto"
            },
            "nullable": true
          },
          "faturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalFaturamentoDto"
          },
          "total": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalTotalDto"
          },
          "transporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalTransporteDto"
          },
          "volume": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalVolumeDto"
          },
          "complemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalComplementoDto"
          },
          "nfe": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalNfeDto"
          },
          "itemNfReferida": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "nfsReferidas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalReferidaDto"
            },
            "nullable": true
          },
          "tipoRateio": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoRateioNfDto"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalRateioDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalFaturamentoDto": {
        "type": "object",
        "properties": {
          "valorTotalAPagar": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "idCobranca": {
            "type": "string",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalFaturamentoParcelaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalFaturamentoParcelaDto": {
        "type": "object",
        "properties": {
          "numeroParcela": {
            "type": "integer",
            "format": "int32"
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalGerencialDto": {
        "type": "object",
        "properties": {
          "idConta": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalInformacaoAdicionalDto": {
        "type": "object",
        "properties": {
          "observacao": {
            "type": "string",
            "nullable": true
          },
          "integrarFiscal": {
            "type": "boolean",
            "description": "Flag válida apenas para TipoMensagem igual a Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoMensagemNfDto.Informada."
          },
          "tipoMensagem": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoMensagemNfDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalIntermediadorDto": {
        "type": "object",
        "properties": {
          "indicadorIntermediador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorIntermediadorNfDto"
          },
          "idIntermediador": {
            "type": "string",
            "description": "Id de Fornecedor",
            "nullable": true
          },
          "cnpj": {
            "type": "string",
            "nullable": true
          },
          "identificacao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemDto": {
        "type": "object",
        "properties": {
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "idTabelaPreco": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacao": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeVenda": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeEstoque": {
            "type": "string",
            "nullable": true
          },
          "idContaSped": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "classificacaoFiscal": {
            "type": "string",
            "nullable": true
          },
          "quantidadeVenda": {
            "type": "number",
            "format": "double"
          },
          "quantidadeEstoque": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "percentualDesconto": {
            "type": "number",
            "description": "O desconto pode ter sido informado em valor por unidade, em valor no total do item, ou em percentual.\r\n\r\nCaso informado em valor por unidade ou em valor no total do item, o PercentualDesconto será calculado.\r\n\r\nA flag DescontoEmPercentual indica se o desconto foi informado em Percentual.\r\n\r\nA flag DescontoPorTotal indica se o desconto foi informado no total do item.\r\n",
            "format": "double"
          },
          "valorDescontoUnitario": {
            "type": "number",
            "description": "O desconto pode ter sido informado em valor por unidade, em valor no total do item, ou em percentual.\r\n\r\nCaso tenha sido informado em valor no total do item ou em percentual, o ValorDescontoUnitario será calculado.\r\n\r\nA flag DescontoEmPercentual indica se o desconto foi informado em Percentual.\r\n\r\nA flag DescontoPorTotal indica se o desconto foi informado no total do item.",
            "format": "double"
          },
          "valorDescontoTotal": {
            "type": "number",
            "description": "O desconto pode ter sido informado em valor por unidade, em valor no total do item, ou em percentual.\r\n\r\nCaso tenha sido informado em valor por unidade ou em percentual, o ValorDescontoTotal será calculado.\r\n\r\nA flag DescontoPorTotal indica se o desconto foi informado no total do item.",
            "format": "double"
          },
          "descontoEmPercentual": {
            "type": "boolean",
            "description": "Indica se o desconto foi informado em Percentual."
          },
          "descontoPorTotal": {
            "type": "boolean",
            "description": "Indica se o desconto foi informado no total do item."
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "livreDeCobranca": {
            "type": "boolean"
          },
          "pesoLiquidoUnitario": {
            "type": "number",
            "format": "double"
          },
          "quantidadeVolumes": {
            "type": "number",
            "format": "double"
          },
          "itemNfReferida": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "fci": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemFciDto"
          },
          "pedidoCompra": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemPedidoCompraDto"
          },
          "tributos": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributosDto"
          },
          "liberacoesEstoque": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemLiberacaoEstoqueDto"
            },
            "nullable": true
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalRateioDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemFciDto": {
        "type": "object",
        "properties": {
          "numeroControle": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemLiberacaoEstoqueDto": {
        "type": "object",
        "properties": {
          "idLocalEstocagem": {
            "type": "string",
            "nullable": true
          },
          "idLocalTransferencia": {
            "type": "string",
            "nullable": true
          },
          "idFornecedorEptEtpe": {
            "type": "string",
            "nullable": true
          },
          "idClienteEptEtpe": {
            "type": "string",
            "nullable": true
          },
          "idPedido": {
            "type": "string",
            "nullable": true
          },
          "idRomaneio": {
            "type": "string",
            "nullable": true
          },
          "idApontamento": {
            "type": "string",
            "nullable": true
          },
          "idRemessa": {
            "type": "string",
            "nullable": true
          },
          "idControleFCI": {
            "type": "string",
            "nullable": true
          },
          "idFornecedorClienteOrigem": {
            "type": "string",
            "nullable": true
          },
          "idDocumentoMovimentoOrigem": {
            "type": "string",
            "nullable": true
          },
          "tipoEstoqueLocal": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoEstoqueLocalNfDto"
          },
          "tipoEstoqueLocalTransferencia": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoEstoqueLocalNfDto"
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoProducaoEstoqueNfDto"
          },
          "quantidadeLiberada": {
            "type": "number",
            "format": "double"
          },
          "pesoBruto": {
            "type": "number",
            "format": "double"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          },
          "quantidadeVolumes": {
            "type": "number",
            "format": "double"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemLiberacaoEstoqueLoteDto"
          },
          "volume": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemLiberacaoEstoqueVolumeDto"
          },
          "origem": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemLiberacaoEstoqueOrigemDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemLiberacaoEstoqueLoteDto": {
        "type": "object",
        "properties": {
          "idFornecedor": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "numeroDiasValidade": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemLiberacaoEstoqueOrigemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tipoMovimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoMovimentoOrigemLiberacaoEstoqueNfDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemLiberacaoEstoqueVolumeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemPedidoCompraDto": {
        "type": "object",
        "properties": {
          "xPed": {
            "type": "string",
            "nullable": true
          },
          "nItemPed": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoDevolvidoDto": {
        "type": "object",
        "properties": {
          "percentualMercadoriaDevolvida": {
            "type": "number",
            "format": "double"
          },
          "valorIpiDevolvido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoIcmsDto": {
        "type": "object",
        "properties": {
          "cst": {
            "type": "string",
            "description": "CST ou CSOSN. Tabela A + Tabela B\r\n\r\nCST => 000, 010, ..., 100, 110, ...\r\n\r\nCSOSN => 0101, 0102, ..., 1101, 1102, ...\r\n",
            "nullable": true
          },
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "valorIsentas": {
            "type": "number",
            "format": "double"
          },
          "valorOutras": {
            "type": "number",
            "format": "double"
          },
          "valorIPIEmbutido": {
            "type": "number",
            "format": "double"
          },
          "valorReducaoBaseCalculo": {
            "type": "number",
            "description": "Valor total de redução aplicado na base de cálculo de ICMS do item",
            "format": "double"
          },
          "valorAcrescimoBaseCalculo": {
            "type": "number",
            "description": "Valor total de acréscimo aplicado na base de cálculo de ICMS do item",
            "format": "double"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valorPautaIcmsUnitario": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "aliquotaFcp": {
            "type": "number",
            "format": "double"
          },
          "valorFcp": {
            "type": "number",
            "format": "double"
          },
          "valorUnitarioReducaoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "valorUnitarioAcrescimoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoBaseCalculoOperacaoInterna": {
            "type": "number",
            "description": "Percentual de redução da base de cálculo do ICMS próprio nas operações internas. Utilizado no cálculo diferenciado do ICMS/ST e ICMS UF Destino, efetuando a redução da BC do ICMS nas fórmulas de cálculo do ICMS/ST e ICMS UF Destino.",
            "format": "double"
          },
          "valorIcmsDispensado": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsDesonerado": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsDiferido": {
            "type": "number",
            "format": "double"
          },
          "valorFcpDiferido": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsSuframa": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsEtapaAnterior": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoCreditoIcmsSimplesNacional": {
            "type": "number",
            "description": "Base de cálculo para o crédito de ICMS Simples Nacional",
            "format": "double"
          },
          "percentualReducaoIcmsSimplesNacional": {
            "type": "number",
            "description": "Percentual de redução aplicada na base de cálculo para o crédito de ICMS Simples Nacional",
            "format": "double"
          },
          "aliquotaCreditoIcmsSimplesNacional": {
            "type": "number",
            "description": "Alíquota aplicável de cálculo do crédito de ICMS Simples Nacional",
            "format": "double"
          },
          "valorCreditoIcmsSimplesNacional": {
            "type": "number",
            "description": "Valor do crédito do ICMS que pode ser aproveitado nos termos do art. 23 da LC 123 - Simples Nacional",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoIcmsStDto": {
        "type": "object",
        "properties": {
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valorPautaIcmsStUnitario": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "aliquotaFcpSt": {
            "type": "number",
            "format": "double"
          },
          "valorFcpSt": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimoSt": {
            "type": "number",
            "description": "Percentual da margem de valor Adicionado do ICMS ST",
            "format": "double"
          },
          "valorIcmsStEtapaAnterior": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoIcmsStEtapaAnterior": {
            "type": "number",
            "format": "double"
          },
          "valorFcpStEtapaAnterior": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoFcpStEtapaAnterior": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsSubstitutoEtapaAnterior": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoIcmsUfDestinoDto": {
        "type": "object",
        "properties": {
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsUfDestino": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsUfRemetente": {
            "type": "number",
            "format": "double"
          },
          "valorFcpUfDestino": {
            "type": "number",
            "format": "double"
          },
          "aliquotaIcmsInterestadual": {
            "type": "number",
            "format": "double"
          },
          "aliquotaInternaIcmsUfDestino": {
            "type": "number",
            "format": "double"
          },
          "aliquotaFcpUfDestino": {
            "type": "number",
            "format": "double"
          },
          "percentualPartilhaIcmsUfDestino": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoIpiDto": {
        "type": "object",
        "properties": {
          "cst": {
            "type": "string",
            "description": "Código da situação tributária do IPI",
            "nullable": true
          },
          "codigoEnquadramentoLegal": {
            "type": "string",
            "nullable": true
          },
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "valorIsentas": {
            "type": "number",
            "format": "double"
          },
          "valorOutras": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valorIpiUnitario": {
            "type": "number",
            "description": "Valor por Unidade Tributável",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoPisCofinsDto": {
        "type": "object",
        "properties": {
          "cst": {
            "type": "string",
            "nullable": true
          },
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "fatorIncidencia": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoPisCofinsStDto": {
        "type": "object",
        "properties": {
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "fatorIncidencia": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributosDto": {
        "type": "object",
        "properties": {
          "icms": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoIcmsDto"
          },
          "icmsSt": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoIcmsStDto"
          },
          "icmsUfDestino": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoIcmsUfDestinoDto"
          },
          "ipi": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoIpiDto"
          },
          "pis": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoPisCofinsDto"
          },
          "pisSt": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoPisCofinsStDto"
          },
          "cofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoPisCofinsDto"
          },
          "cofinsSt": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoPisCofinsStDto"
          },
          "tributoDevolvido": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalItemTributoDevolvidoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalLocalEmbarqueDto": {
        "type": "object",
        "properties": {
          "ufEmbarque": {
            "type": "string",
            "nullable": true
          },
          "localEmbarque": {
            "type": "string",
            "nullable": true
          },
          "localDespacho": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalLocalEntregaDto": {
        "type": "object",
        "properties": {
          "tipoPessoa": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoPessoaDto"
          },
          "cpfCnpj": {
            "type": "string",
            "nullable": true
          },
          "inscricaoEstadual": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "logradouro": {
            "type": "string",
            "nullable": true
          },
          "semNumero": {
            "type": "boolean"
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "nullable": true
          },
          "ddd": {
            "type": "integer",
            "format": "int32"
          },
          "telefone": {
            "type": "integer",
            "format": "int32"
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalNfeDto": {
        "type": "object",
        "properties": {
          "chaveAcesso": {
            "type": "string",
            "nullable": true
          },
          "tipoEmissao": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoEmissaoNfeDto"
          },
          "status": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoStatusNfeDto"
          },
          "protocoloAutorizacao": {
            "type": "string",
            "nullable": true
          },
          "protocoloAutorizacaoEpec": {
            "type": "string",
            "nullable": true
          },
          "protocoloCancelamentoInutilizacao": {
            "type": "string",
            "nullable": true
          },
          "dataAutorizacaoEpec": {
            "type": "string",
            "format": "date-time"
          },
          "dataEntradaContingencia": {
            "type": "string",
            "format": "date-time"
          },
          "justificativaContingencia": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalPedidoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalRateioDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalRelacionamentoGerencialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalReferidaDto": {
        "type": "object",
        "properties": {
          "chaveAcesso": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalRelacionamentoGerencialDto": {
        "type": "object",
        "properties": {
          "gerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalGerencialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalTotalDto": {
        "type": "object",
        "properties": {
          "valorTotalProdutos": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoProdutos": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoProdutos": {
            "type": "number",
            "format": "double"
          },
          "descontoProdutosEmPercentual": {
            "type": "boolean"
          },
          "despesasPorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoIndicadorDespesasPorContaNfDto"
          },
          "valorFrete": {
            "type": "number",
            "format": "double"
          },
          "valorSeguro": {
            "type": "number",
            "format": "double"
          },
          "valorDespesasAcessorias": {
            "type": "number",
            "format": "double"
          },
          "valorTotalNotaFiscal": {
            "type": "number",
            "format": "double"
          },
          "valorLiquidoNotaFiscal": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoIcms": {
            "type": "number",
            "format": "double"
          },
          "valorIsentasIcms": {
            "type": "number",
            "format": "double"
          },
          "valorOutrasIcms": {
            "type": "number",
            "format": "double"
          },
          "valorIcms": {
            "type": "number",
            "format": "double"
          },
          "valorFcp": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsDispensado": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsSuframa": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsUfDestino": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsUfRemetente": {
            "type": "number",
            "format": "double"
          },
          "valorFcpUfDestino": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoCreditoIcmsSimplesNacional": {
            "type": "number",
            "format": "double"
          },
          "valorCreditoIcmsSimplesNacional": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoIcmsSt": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsSt": {
            "type": "number",
            "format": "double"
          },
          "valorFcpSt": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoIpi": {
            "type": "number",
            "format": "double"
          },
          "valorIsentasIpi": {
            "type": "number",
            "format": "double"
          },
          "valorOutrasIpi": {
            "type": "number",
            "format": "double"
          },
          "valorIpi": {
            "type": "number",
            "format": "double"
          },
          "valorIpiDevolvido": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoPisProdutos": {
            "type": "number",
            "format": "double"
          },
          "valorPisProdutos": {
            "type": "number",
            "format": "double"
          },
          "valorPisStProdutos": {
            "type": "number",
            "format": "double"
          },
          "baseCalculoCofinsProdutos": {
            "type": "number",
            "format": "double"
          },
          "valorCofinsProdutos": {
            "type": "number",
            "format": "double"
          },
          "valorCofinsStProdutos": {
            "type": "number",
            "format": "double"
          },
          "valorTotalAproximadoTributos": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalTransporteDto": {
        "type": "object",
        "properties": {
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoFretePorContaNfDto"
          },
          "idTransportadora": {
            "type": "string",
            "nullable": true
          },
          "codigoRastreio": {
            "type": "string",
            "nullable": true
          },
          "viaTransporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Enums.TipoViaTransporteNfDto"
          },
          "idMotorista": {
            "type": "string",
            "nullable": true
          },
          "veiculos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalTransporteVeiculoDto"
            },
            "nullable": true
          },
          "idClienteFornecedorSaida": {
            "type": "string",
            "nullable": true
          },
          "idClienteFornecedorEntrada": {
            "type": "string",
            "nullable": true
          },
          "idTransportadoraRedespacho": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalTransporteVeiculoDto": {
        "type": "object",
        "properties": {
          "idVeiculo": {
            "type": "string",
            "nullable": true
          },
          "placaVeiculo": {
            "type": "string",
            "nullable": true
          },
          "ufVeiculo": {
            "type": "string",
            "nullable": true
          },
          "anttVeiculo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalVendedorRepresentanteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.NotaFiscal.Read.ReadNotaFiscalVolumeDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "especie": {
            "type": "string",
            "nullable": true
          },
          "marca": {
            "type": "string",
            "nullable": true
          },
          "numeroInicial": {
            "type": "string",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "double"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.OrigemPedidoDto": {
        "enum": [
          "Comercial",
          "WEB",
          "Importacao",
          "Orcamento",
          "WebService",
          "ContratoDeVendas"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoEstoqueLocalPedidoDto": {
        "enum": [
          "Proprio",
          "EmPoderDeTerceiros",
          "DeTerceirosEmPoderDaEmpresa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoFretePorContaPedidoDto": {
        "enum": [
          "Emitente",
          "Destinatario",
          "Terceiro",
          "ProprioPorContaRemetente",
          "ProprioPorContaDestinatario",
          "SemFrete"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoIndicadorConsumidorFinalPedidoDto": {
        "enum": [
          "Normal",
          "ConsumidorFinal"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoIndicadorDespesasPorContaPedidoDto": {
        "enum": [
          "Emitente",
          "Destinatario"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoIndicadorIntermediadorPedidoDto": {
        "enum": [
          "SemIntermediador",
          "SiteOuPlataformaTerceiros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoIndicadorPresencaCompradorPedidoDto": {
        "enum": [
          "NaoSeAplica",
          "OperacaoPresencial",
          "OperacaoNaoPresencialInternet",
          "OperacaoNaoPresencialTeleatendimento",
          "NfceEmOperacaoEntregaDomicilio",
          "OperacaoPresencialForaEstabelecimento",
          "OperacaoNaoPresencialOutros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoMovimentoOrigemLiberacaoEstoquePedidoDto": {
        "enum": [
          "Nenhum",
          "OrdemDeProducao",
          "Pesagem"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoPessoaDto": {
        "enum": [
          "Fisica",
          "Juridica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoProducaoEstoquePedidoDto": {
        "enum": [
          "Externa",
          "Interna"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoRateioPedidoDto": {
        "enum": [
          "RateioPeloTotalDoPedido",
          "RateioPorItem"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoSituacaoPedidoDto": {
        "enum": [
          "EmAnalise",
          "Bloqueado",
          "Pendente",
          "Cancelado",
          "ParcialmenteFaturado",
          "Faturado",
          "ParcialmenteAtendido",
          "Atendido"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoSituacaoProducaoPedidoDto": {
        "enum": [
          "EmProducao",
          "ParcialmenteEmProducao",
          "SemStatusDaProducao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoViaTransportePedidoDto": {
        "enum": [
          "Rodoviario",
          "Ferroviario",
          "Rodoferroviario",
          "Aquaviario",
          "Dutoviario",
          "Aereo",
          "Rodoaereo",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoBeneficiarioDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "dataNascimento": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataEntrega": {
            "type": "string",
            "format": "date"
          },
          "dataCompetencia": {
            "type": "string",
            "format": "date"
          },
          "dataHoraGravacao": {
            "type": "string",
            "format": "date-time"
          },
          "dataHoraUltimaAlteracao": {
            "type": "string",
            "format": "date-time"
          },
          "dataHoraCancelamento": {
            "type": "string",
            "format": "date-time"
          },
          "indicadorPresencaComprador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoIndicadorPresencaCompradorPedidoDto"
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoSituacaoPedidoDto"
          },
          "situacaoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoSituacaoProducaoPedidoDto"
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "consumidorFinal": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoIndicadorConsumidorFinalPedidoDto"
          },
          "localEntrega": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoLocalEntregaDto"
          },
          "vendedores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoVendedorRepresentanteDto"
            },
            "nullable": true
          },
          "representantes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoVendedorRepresentanteDto"
            },
            "nullable": true
          },
          "idOperacaoComercial": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoProduto": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "numeroOrdemCompra": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idContato": {
            "type": "string",
            "nullable": true
          },
          "idFluxoPedido": {
            "type": "string",
            "nullable": true
          },
          "idFluxoPedidoItem": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "beneficiario": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoBeneficiarioDto"
          },
          "intermediador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoIntermediadorDto"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemDto"
            },
            "nullable": true
          },
          "kits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoKitDto"
            },
            "nullable": true
          },
          "total": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoTotalDto"
          },
          "tributos": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoTributosDto"
          },
          "transporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoTransporteDto"
          },
          "volume": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoVolumeDto"
          },
          "observacao": {
            "type": "string",
            "nullable": true
          },
          "faturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoFaturamentoDto"
          },
          "tipoRateio": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoRateioPedidoDto"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoRateioDto"
            },
            "nullable": true
          },
          "informacoesExtras": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoInformacoesExtrasDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoFaturamentoDto": {
        "type": "object",
        "properties": {
          "valorTotalAPagar": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "idCobranca": {
            "type": "string",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoFaturamentoParcelaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoFaturamentoParcelaDto": {
        "type": "object",
        "properties": {
          "numeroParcela": {
            "type": "integer",
            "format": "int32"
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          },
          "administradora": {
            "type": "string",
            "nullable": true
          },
          "autorizacao": {
            "type": "string",
            "nullable": true
          },
          "nsu": {
            "type": "string",
            "nullable": true
          },
          "numeroCv": {
            "type": "string",
            "nullable": true
          },
          "rede": {
            "type": "string",
            "nullable": true
          },
          "tid": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoGerencialDto": {
        "type": "object",
        "properties": {
          "idConta": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoInformacoesExtrasDto": {
        "type": "object",
        "properties": {
          "idInformacaoComplementar1": {
            "type": "string",
            "nullable": true
          },
          "idInformacaoComplementar2": {
            "type": "string",
            "nullable": true
          },
          "idInformacaoComplementar3": {
            "type": "string",
            "nullable": true
          },
          "infoExtra1": {
            "type": "string",
            "nullable": true
          },
          "infoExtra2": {
            "type": "string",
            "nullable": true
          },
          "infoExtra3": {
            "type": "string",
            "nullable": true
          },
          "infoExtra4": {
            "type": "string",
            "nullable": true
          },
          "infoExtra5": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoIntermediadorDto": {
        "type": "object",
        "properties": {
          "indicadorIntermediador": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoIndicadorIntermediadorPedidoDto"
          },
          "idIntermediador": {
            "type": "string",
            "description": "Id de Fornecedor",
            "nullable": true
          },
          "cnpj": {
            "type": "string",
            "nullable": true
          },
          "identificacao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemDto": {
        "type": "object",
        "properties": {
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "idTabelaPreco": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacao": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeVenda": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeEstoque": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "quantidadeVenda": {
            "type": "number",
            "format": "double"
          },
          "quantidadeEstoque": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "percentualDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "descontoEmPercentual": {
            "type": "boolean"
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "livreDeCobranca": {
            "type": "boolean"
          },
          "idKit": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "codigoKit": {
            "type": "integer",
            "format": "int32"
          },
          "idIndice": {
            "type": "string",
            "nullable": true
          },
          "numeroItemPedido": {
            "type": "string",
            "description": "Número do item do pedido de compra. Campo Item Ped do pedido. Esta informação será levada para a tag nItemPed do xml da NF-e.",
            "nullable": true
          },
          "numeroOrdemCompra": {
            "type": "string",
            "description": "Número da ordem de compra do cliente. Campo Nr. OC do pedido. Esta informação será levada para a tag xPed do xml da NF-e.",
            "nullable": true
          },
          "dataPedidoCompra": {
            "type": "string",
            "format": "date"
          },
          "numeroPedidoCompra": {
            "type": "string",
            "nullable": true
          },
          "cancelado": {
            "type": "boolean"
          },
          "reservar": {
            "type": "boolean"
          },
          "dataEntrega": {
            "type": "string",
            "format": "date"
          },
          "valorIndice": {
            "type": "number",
            "format": "double"
          },
          "valorTotalLiquidoSemImpostos": {
            "type": "number",
            "format": "double"
          },
          "tributos": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributosDto"
          },
          "liberacoesEstoque": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueDto"
            },
            "nullable": true
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoRateioDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueDto": {
        "type": "object",
        "properties": {
          "idLocalEstocagem": {
            "type": "string",
            "nullable": true
          },
          "idLocalTransferencia": {
            "type": "string",
            "nullable": true
          },
          "idFornecedorEptEtpe": {
            "type": "string",
            "nullable": true
          },
          "idClienteEptEtpe": {
            "type": "string",
            "nullable": true
          },
          "idRomaneio": {
            "type": "string",
            "nullable": true
          },
          "idApontamento": {
            "type": "string",
            "nullable": true
          },
          "idControleFCI": {
            "type": "string",
            "nullable": true
          },
          "idFornecedorClienteOrigem": {
            "type": "string",
            "nullable": true
          },
          "idDocumentoMovimentoOrigem": {
            "type": "string",
            "nullable": true
          },
          "tipoEstoqueLocal": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoEstoqueLocalPedidoDto"
          },
          "tipoEstoqueLocalTransferencia": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoEstoqueLocalPedidoDto"
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoProducaoEstoquePedidoDto"
          },
          "quantidadeLiberada": {
            "type": "number",
            "format": "double"
          },
          "pesoBruto": {
            "type": "number",
            "format": "double"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          },
          "quantidadeVolumes": {
            "type": "number",
            "format": "double"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "idUsuarioLiberou": {
            "type": "string",
            "nullable": true
          },
          "dataHoraLiberacao": {
            "type": "string",
            "format": "date-time"
          },
          "faturado": {
            "type": "boolean"
          },
          "faturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueFaturamentoDto"
          },
          "origem": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueOrigemDto"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueLoteDto"
          },
          "volume": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueVolumeDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueFaturamentoDto": {
        "type": "object",
        "properties": {
          "idNotaFiscal": {
            "type": "string",
            "nullable": true
          },
          "idUsuarioFaturou": {
            "type": "string",
            "nullable": true
          },
          "dataHoraFaturamento": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueLoteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "idFornecedor": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "numeroDiasValidade": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueOrigemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "tipoMovimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoMovimentoOrigemLiberacaoEstoquePedidoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemLiberacaoEstoqueVolumeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoIcmsDto": {
        "type": "object",
        "properties": {
          "cst": {
            "type": "string",
            "nullable": true
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "valorPautaIcmsUnitario": {
            "type": "number",
            "format": "double"
          },
          "aliquotaFcp": {
            "type": "number",
            "format": "double"
          },
          "valorFcp": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoBaseCalculo": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoIcmsStDto": {
        "type": "object",
        "properties": {
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "valorPautaIcmsStUnitario": {
            "type": "number",
            "format": "double"
          },
          "aliquotaFcpSt": {
            "type": "number",
            "format": "double"
          },
          "valorFcpSt": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoIcmsUfDestinoDto": {
        "type": "object",
        "properties": {
          "aliquotaInterna": {
            "type": "number",
            "format": "double"
          },
          "aliquotaIcmsInterestadual": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "aliquotaFcpUfDestino": {
            "type": "number",
            "format": "double"
          },
          "valorFcpUfDestino": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsUfRemetente": {
            "type": "number",
            "format": "double"
          },
          "percentualPartilha": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoIpiDto": {
        "type": "object",
        "properties": {
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "reducaoBaseCalculo": {
            "type": "number",
            "format": "double"
          },
          "cst": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoPisCofinsDto": {
        "type": "object",
        "properties": {
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "fatorIncidencia": {
            "type": "number",
            "format": "double"
          },
          "cst": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributosDto": {
        "type": "object",
        "properties": {
          "icms": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoIcmsDto"
          },
          "icmsSt": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoIcmsStDto"
          },
          "icmsUfDestino": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoIcmsUfDestinoDto"
          },
          "ipi": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoIpiDto"
          },
          "pis": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoPisCofinsDto"
          },
          "cofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoItemTributoPisCofinsDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoKitDto": {
        "type": "object",
        "properties": {
          "idKit": {
            "$ref": "#/components/schemas/Radar.API.Model.Dados.ProdutoServico.ProdutoServicoModel"
          },
          "codigoKit": {
            "type": "integer",
            "format": "int32"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "descontoTotalValor": {
            "type": "number",
            "format": "double"
          },
          "descontoTotalPercentual": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoLocalEntregaDto": {
        "type": "object",
        "properties": {
          "tipoPessoa": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoPessoaDto"
          },
          "cpfCnpj": {
            "type": "string",
            "nullable": true
          },
          "inscricaoEstadual": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "cep": {
            "type": "string",
            "nullable": true
          },
          "logradouro": {
            "type": "string",
            "nullable": true
          },
          "semNumero": {
            "type": "boolean"
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "nullable": true
          },
          "ddd": {
            "type": "integer",
            "format": "int32"
          },
          "telefone": {
            "type": "integer",
            "format": "int32"
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoRateioDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoRelacionamentoGerencialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoRelacionamentoGerencialDto": {
        "type": "object",
        "properties": {
          "gerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoGerencialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoTotalDto": {
        "type": "object",
        "properties": {
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "valorTotalProdutos": {
            "type": "number",
            "format": "double"
          },
          "valorTotalServicos": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoProdutos": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoServicos": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoProdutos": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoServicos": {
            "type": "number",
            "format": "double"
          },
          "descontoProdutosEmPercentual": {
            "type": "boolean"
          },
          "descontoServicosEmPercentual": {
            "type": "boolean"
          },
          "despesasPorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoIndicadorDespesasPorContaPedidoDto"
          },
          "valorFrete": {
            "type": "number",
            "format": "double"
          },
          "valorSeguro": {
            "type": "number",
            "format": "double"
          },
          "valorDespesasAcessorias": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoTransporteDto": {
        "type": "object",
        "properties": {
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoFretePorContaPedidoDto"
          },
          "idTransportadora": {
            "type": "string",
            "nullable": true
          },
          "viaTransporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Enums.TipoViaTransportePedidoDto"
          },
          "idMotorista": {
            "type": "string",
            "nullable": true
          },
          "veiculos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoTransporteVeiculoDto"
            },
            "nullable": true
          },
          "idTransportadoraRedespacho": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoTransporteVeiculoDto": {
        "type": "object",
        "properties": {
          "idVeiculo": {
            "type": "string",
            "nullable": true
          },
          "placaVeiculo": {
            "type": "string",
            "nullable": true
          },
          "ufVeiculo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoTributosDto": {
        "type": "object",
        "properties": {
          "valorIcms": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsSt": {
            "type": "number",
            "format": "double"
          },
          "valorIcmsUfDestino": {
            "type": "number",
            "format": "double"
          },
          "valorFcp": {
            "type": "number",
            "format": "double"
          },
          "valorFcpSt": {
            "type": "number",
            "format": "double"
          },
          "valorFcpUfDestino": {
            "type": "number",
            "format": "double"
          },
          "valorIpi": {
            "type": "number",
            "format": "double"
          },
          "valorPis": {
            "type": "number",
            "format": "double"
          },
          "valorCofins": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoVendedorRepresentanteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Comercial.Dtos.V1.Pedido.Read.ReadPedidoVolumeDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "especie": {
            "type": "string",
            "nullable": true
          },
          "marca": {
            "type": "string",
            "nullable": true
          },
          "numeroInicial": {
            "type": "string",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "double"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dados.RegistroEntrada.TipoIncoterm": {
        "enum": [
          "Invalido",
          "Nenhum",
          "Exw",
          "Fca",
          "Fas",
          "Fob",
          "Cpt",
          "Cip",
          "Cfr",
          "Cif",
          "Dap",
          "Dpu",
          "Dpp"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateCondicaoPagamentoCotacaoDto": {
        "type": "object",
        "properties": {
          "idTipoPeriodo": {
            "type": "string",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "dataPrimeiroVencimento": {
            "type": "string",
            "format": "date"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateParcelaCondicaoPagamentoCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateCotacaoDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "codigoCotacao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "dataCotacao": {
            "type": "string",
            "format": "date"
          },
          "dataNecessidade": {
            "type": "string",
            "format": "date"
          },
          "dataLimitePropostas": {
            "type": "string",
            "format": "date"
          },
          "localEntrega": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacao": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idGerencial": {
            "type": "string",
            "nullable": true
          },
          "idComprador": {
            "type": "string",
            "nullable": true
          },
          "obervacoesGerais": {
            "maxLength": 2500,
            "type": "string",
            "nullable": true
          },
          "fornecedores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateFornecedorCotacaoDto"
            },
            "nullable": true
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateItemCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateFornecedorCotacaoDto": {
        "type": "object",
        "properties": {
          "idFornecedor": {
            "type": "string",
            "nullable": true
          },
          "nomeFornecedorNaoCadastrado": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "valorFrete": {
            "type": "number",
            "format": "double"
          },
          "idMoeda": {
            "type": "string",
            "nullable": true
          },
          "prazoEntrega": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "dataEntrega": {
            "type": "string",
            "format": "date"
          },
          "prazoProposta": {
            "type": "string",
            "format": "date"
          },
          "valorDescontoSobreTotal": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoSobreTotal": {
            "type": "number",
            "format": "double"
          },
          "idNatureza": {
            "type": "string",
            "nullable": true
          },
          "observacaoFornecedor": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoFretePorContaDto"
          },
          "condicaoPagamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateCondicaoPagamentoCotacaoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateItemCotacaoDto": {
        "type": "object",
        "properties": {
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "idUnidadeCompra": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "dataNecessidade": {
            "type": "string",
            "format": "date"
          },
          "complemento": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "maxLength": 2500,
            "type": "string",
            "nullable": true
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateRateioItemCotacaoDto"
            },
            "nullable": true
          },
          "precosCotados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreatePrecoCotadoItemCotacaoDto"
            },
            "description": "Na rota de criação de Cotações, serão apenas disponibilizados os campos básicos para realizar um vinculo de acompanhamento entre o fornecedor e o item.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateParcelaCondicaoPagamentoCotacaoDto": {
        "type": "object",
        "properties": {
          "numeroParcela": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "idTipoVencimento": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreatePrecoCotadoItemCotacaoDto": {
        "type": "object",
        "properties": {
          "idFornecedor": {
            "type": "string",
            "nullable": true
          },
          "nomeFornecedorNaoCadastrado": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "precoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "precoTotal": {
            "type": "number",
            "format": "double"
          },
          "dataHoraEntrega": {
            "type": "string",
            "format": "date-time"
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoSituacaoPrecoCotadoDto"
          },
          "tributos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateTributoItemCotacaoDto"
            },
            "description": "Para que um determinado grupo de tributos seja sugerido pelo sistema, não informe nenhum item com seu enumerador de tributo.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateRateioGerencialCotacaoDto": {
        "type": "object",
        "properties": {
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateRateioItemCotacaoDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateRelacionamentoGerencialItemCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateRelacionamentoGerencialItemCotacaoDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateRateioGerencialCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.CreateTributoItemCotacaoDto": {
        "type": "object",
        "properties": {
          "tributo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoTributoItemCotacaoDto"
          },
          "percentualReducao": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "ipiNaBaseCalculoIcms": {
            "type": "boolean"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "description": "Utilizado apenas em IPI, como alternativa a informar o percentual de alíquota.",
            "format": "double"
          },
          "percentualReducaoOpInternaSt": {
            "type": "number",
            "format": "double"
          },
          "codigoOrigemIcms": {
            "type": "integer",
            "description": "Código de origem, aplicado apenas ao ICMS, de acordo com a “Tabela A - Origem da Mercadoria” estipulada pelo Convênio S/Nº, de 15 de dezembro de 1970.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadCondicaoPagamentoCotacaoDto": {
        "type": "object",
        "properties": {
          "idTipoPeriodo": {
            "type": "string",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "dataPrimeiroVencimento": {
            "type": "string",
            "format": "date"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadParcelaCondicaoPagamentoCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadCotacaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "chaveCotacao": {
            "type": "string",
            "nullable": true
          },
          "chaveSolicitacao": {
            "type": "string",
            "nullable": true
          },
          "codigoCotacao": {
            "type": "string",
            "nullable": true
          },
          "dataCotacao": {
            "type": "string",
            "format": "date"
          },
          "dataNecessidade": {
            "type": "string",
            "format": "date"
          },
          "dataLimitePropostas": {
            "type": "string",
            "format": "date"
          },
          "localEntrega": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacao": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idGerencial": {
            "type": "string",
            "nullable": true
          },
          "idComprador": {
            "type": "string",
            "nullable": true
          },
          "obervacoesGerais": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoSituacaoCotacaoDto"
          },
          "savingValor": {
            "type": "number",
            "format": "double"
          },
          "savingPorcentagem": {
            "type": "number",
            "format": "double"
          },
          "fornecedores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadFornecedorCotacaoDto"
            },
            "nullable": true
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadItemCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadFornecedorCotacaoDto": {
        "type": "object",
        "properties": {
          "idFornecedor": {
            "type": "string",
            "nullable": true
          },
          "nomeFornecedorNaoCadastrado": {
            "type": "string",
            "nullable": true
          },
          "valorFrete": {
            "type": "number",
            "format": "double"
          },
          "idMoeda": {
            "type": "string",
            "nullable": true
          },
          "prazoEntrega": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "dataEntrega": {
            "type": "string",
            "format": "date"
          },
          "prazoProposta": {
            "type": "string",
            "format": "date"
          },
          "valorDescontoSobreTotal": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoSobreTotal": {
            "type": "number",
            "format": "double"
          },
          "idNatureza": {
            "type": "string",
            "nullable": true
          },
          "observacaoFornecedor": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoFretePorContaDto"
          },
          "condicaoPagamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadCondicaoPagamentoCotacaoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadItemCotacaoDto": {
        "type": "object",
        "properties": {
          "numeroItem": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "idUnidadeCompra": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "dataNecessidade": {
            "type": "string",
            "format": "date"
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "type": "string",
            "nullable": true
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadRateioItemCotacaoDto"
            },
            "nullable": true
          },
          "precosCotados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadPrecoCotadoItemCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadParcelaCondicaoPagamentoCotacaoDto": {
        "type": "object",
        "properties": {
          "numeroParcela": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "idTipoVencimento": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadPrecoCotadoItemCotacaoDto": {
        "type": "object",
        "properties": {
          "idFornecedor": {
            "type": "string",
            "nullable": true
          },
          "nomeFornecedorNaoCadastrado": {
            "type": "string",
            "nullable": true
          },
          "precoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "percentualDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "precoTotal": {
            "type": "number",
            "format": "double"
          },
          "dataHoraEntrega": {
            "type": "string",
            "format": "date-time"
          },
          "observacao": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoSituacaoPrecoCotadoDto"
          },
          "tributos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadTributoItemCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadRateioGerencialCotacaoDto": {
        "type": "object",
        "properties": {
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadRateioItemCotacaoDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadRelacionamentoGerencialItemCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadRelacionamentoGerencialItemCotacaoDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadRateioGerencialCotacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.ReadTributoItemCotacaoDto": {
        "type": "object",
        "properties": {
          "tributo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoTributoItemCotacaoDto"
          },
          "percentualReducao": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "ipiNaBaseCalculoIcms": {
            "type": "boolean"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "description": "Utilizado apenas em IPI, como alternativa a informar o percentual de alíquota.",
            "format": "double"
          },
          "percentualReducaoOpInternaSt": {
            "type": "number",
            "format": "double"
          },
          "codigoOrigemIcms": {
            "type": "integer",
            "description": "Código de origem, aplicado apenas ao ICMS, de acordo com a “Tabela A - Origem da Mercadoria” estipulada pelo Convênio S/Nº, de 15 de dezembro de 1970.",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoFretePorContaDto": {
        "enum": [
          "Nenhum",
          "Remetente",
          "Destinatario",
          "Terceiro",
          "ProprioPorContaRemetente",
          "ProprioPorContaDestinatario",
          "SemFrete"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoSituacaoCotacaoDto": {
        "enum": [
          "NaoIniciada",
          "EmAndamento",
          "Encerrada",
          "Interrompida",
          "Cotada",
          "ParcialmenteEncerrada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoSituacaoPrecoCotadoDto": {
        "enum": [
          "Vazio",
          "Aprovado",
          "Reprovado"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.Cotacao.TipoTributoItemCotacaoDto": {
        "enum": [
          "Icms",
          "Fcp",
          "IcmsSt",
          "FcpSt",
          "IcmsDifa",
          "Ipi"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.Create.CreateJustificativaCancelamentoOrdemCompraDto": {
        "type": "object",
        "properties": {
          "justificativa": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateCondicaoPagamentoOrdemCompraDto": {
        "type": "object",
        "properties": {
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "fixarDatasVencimentoNoRegistroEntrada": {
            "type": "boolean"
          },
          "comPagamentoAntecipado": {
            "type": "boolean"
          },
          "idTipoPeriodo": {
            "type": "string",
            "nullable": true
          },
          "numeroParcelas": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "dataPrimeiroVencimento": {
            "type": "string",
            "format": "date"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateParcelaCondicaoPagamentoOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateEntregaOrdemCompraDto": {
        "type": "object",
        "properties": {
          "dataEntrega": {
            "type": "string",
            "format": "date"
          },
          "numeroDiasEntrega": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "localEntrega": {
            "maxLength": 150,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateItemOrdemCompraDto": {
        "required": [
          "produtoServico",
          "quantidadeSolicitada"
        ],
        "type": "object",
        "properties": {
          "numero": {
            "minimum": 0,
            "type": "integer",
            "description": "Utilizado para ordenar os itens na lista, em ordem crescente, caso todos itens possuam algum informado (diferente de 0).",
            "format": "uint32"
          },
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "complemento": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "idNatureza": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeCompra": {
            "type": "string",
            "nullable": true
          },
          "quantidadeSolicitada": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "livreDeCobranca": {
            "type": "boolean"
          },
          "dataNecesssidade": {
            "type": "string",
            "format": "date"
          },
          "gerarAcompanhamento": {
            "type": "boolean"
          },
          "dataHoraEntrega": {
            "type": "string",
            "format": "date-time"
          },
          "despesa": {
            "type": "boolean"
          },
          "imobilizado": {
            "type": "boolean"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateRateioItemOrdemCompraDto"
            },
            "nullable": true
          },
          "tributos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateTributoItemOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateOrdemCompraDto": {
        "required": [
          "frete",
          "idFilialEmitente",
          "idFilialFaturamento",
          "idFornecedorTransportador",
          "itens"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "codigo": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataCompetencia": {
            "type": "string",
            "format": "date"
          },
          "dataNecessidade": {
            "type": "string",
            "format": "date"
          },
          "idFilialEmitente": {
            "minLength": 1,
            "type": "string"
          },
          "idFilialFaturamento": {
            "minLength": 1,
            "type": "string"
          },
          "idNaturezaOperacaoProduto": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idFornecedorTransportador": {
            "minLength": 1,
            "type": "string"
          },
          "frete": {
            "type": "boolean"
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idGerencial": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "idComprador": {
            "type": "string",
            "nullable": true
          },
          "idMoeda": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "maxLength": 2500,
            "type": "string",
            "nullable": true
          },
          "entrega": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateEntregaOrdemCompraDto"
          },
          "transporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateTransporteOrdemCompraDto"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "totais": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateTotaisOrdemCompraDto"
          },
          "condicaoPagamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateCondicaoPagamentoOrdemCompraDto"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateItemOrdemCompraDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateParcelaCondicaoPagamentoOrdemCompraDto": {
        "type": "object",
        "properties": {
          "numero": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "idTipoVencimento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateRateioGerencialOrdemCompraDto": {
        "type": "object",
        "properties": {
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateRateioItemOrdemCompraDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateRelacionamentoGerencialOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateRelacionamentoGerencialOrdemCompraDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateRateioGerencialOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateTotaisOrdemCompraDto": {
        "type": "object",
        "properties": {
          "frete": {
            "type": "number",
            "format": "double"
          },
          "seguro": {
            "type": "number",
            "format": "double"
          },
          "despesasAcessorias": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateTransporteOrdemCompraDto": {
        "required": [
          "fretePorConta"
        ],
        "type": "object",
        "properties": {
          "idTransportadora": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoFretePorContaOrdemCompraDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.CreateTributoItemOrdemCompraDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoTributoItemOrdemCompraDto"
          },
          "cst": {
            "type": "string",
            "nullable": true
          },
          "percentualReducao": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoOpInternaST": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadAutorizacaoOrdemCompraDto": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "dataHoraAssinatura": {
            "type": "string",
            "format": "date-time"
          },
          "dataAutorizadoNaDataInformada": {
            "type": "string",
            "format": "date"
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAutorizacaoOrdemCompraDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadCondicaoPagamentoOrdemCompraDto": {
        "type": "object",
        "properties": {
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "fixarDatasVencimentoNoRegistroEntrada": {
            "type": "boolean"
          },
          "comPagamentoAntecipado": {
            "type": "boolean"
          },
          "idTipoPeriodo": {
            "type": "string",
            "nullable": true
          },
          "dataPrimeiroVencimento": {
            "type": "string",
            "format": "date"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadParcelaCondicaoPagamentoOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadEntregaOrdemCompraDto": {
        "type": "object",
        "properties": {
          "dataEntrega": {
            "type": "string",
            "format": "date"
          },
          "numeroDiasEntrega": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "localEntrega": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadItemOrdemCompraDto": {
        "type": "object",
        "properties": {
          "numero": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "idNatureza": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeCompra": {
            "type": "string",
            "nullable": true
          },
          "quantidadeSolicitada": {
            "type": "number",
            "format": "double"
          },
          "quantidadeAtendida": {
            "type": "number",
            "format": "double"
          },
          "quantidadePendente": {
            "type": "number",
            "format": "double"
          },
          "quantidadeCancelada": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "livreDeCobranca": {
            "type": "boolean"
          },
          "dataNecesssidade": {
            "type": "string",
            "format": "date"
          },
          "gerarAcompanhamento": {
            "type": "boolean"
          },
          "dataHoraEntrega": {
            "type": "string",
            "format": "date-time"
          },
          "despesa": {
            "type": "boolean"
          },
          "imobilizado": {
            "type": "boolean"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadRateioItemOrdemCompraDto"
            },
            "nullable": true
          },
          "tributos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadTributoItemOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadOrdemCompraDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "chave": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataCompetencia": {
            "type": "string",
            "format": "date"
          },
          "dataNecessidade": {
            "type": "string",
            "format": "date"
          },
          "idFilialEmitente": {
            "type": "string",
            "nullable": true
          },
          "idFilialFaturamento": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoProduto": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idFornecedorTransportador": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idGerencial": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "idComprador": {
            "type": "string",
            "nullable": true
          },
          "idMoeda": {
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "type": "string",
            "nullable": true
          },
          "bloqueioOrcamentoExcedente": {
            "type": "boolean"
          },
          "impressa": {
            "type": "boolean"
          },
          "frete": {
            "type": "boolean"
          },
          "incompleta": {
            "type": "boolean"
          },
          "situacaoAutorizacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAutorizacaoOrdemCompraDto"
          },
          "situacaoAtendimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAtendimentoOrdemCompraDto"
          },
          "situacaoIntegracao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoIntegracaoOrdemCompraDto"
          },
          "situacaoEnvioEmailFornecedorOrdemCompra": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoEnvioEmailFornecedorOrdemCompraDto"
          },
          "entrega": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadEntregaOrdemCompraDto"
          },
          "transporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadTransporteOrdemCompraDto"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "totais": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadTotaisOrdemCompraDto"
          },
          "condicaoPagamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadCondicaoPagamentoOrdemCompraDto"
          },
          "autorizacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadAutorizacaoOrdemCompraDto"
            },
            "nullable": true
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadItemOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadParcelaCondicaoPagamentoOrdemCompraDto": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "idTipoVencimento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadRateioGerencialOrdemCompraDto": {
        "type": "object",
        "properties": {
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadRateioItemOrdemCompraDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadRelacionamentoGerencialOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadRelacionamentoGerencialOrdemCompraDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadRateioGerencialOrdemCompraDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadTotaisOrdemCompraDto": {
        "type": "object",
        "properties": {
          "frete": {
            "type": "number",
            "format": "double"
          },
          "seguro": {
            "type": "number",
            "format": "double"
          },
          "despesasAcessorias": {
            "type": "number",
            "format": "double"
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadTransporteOrdemCompraDto": {
        "type": "object",
        "properties": {
          "idTransportadora": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoFretePorContaOrdemCompraDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.ReadTributoItemOrdemCompraDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoTributoItemOrdemCompraDto"
          },
          "cst": {
            "type": "string",
            "nullable": true
          },
          "percentualReducao": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoOpInternaST": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoFretePorContaOrdemCompraDto": {
        "enum": [
          "Nenhum",
          "Remetente",
          "Destinatario",
          "Terceiro",
          "ProprioPorContaRemetente",
          "ProprioPorContaDestinatario",
          "SemFrete"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAtendimentoOrdemCompraDto": {
        "enum": [
          "Pendente",
          "ParcialmenteAtendida",
          "Atendida",
          "Cancelada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoAutorizacaoOrdemCompraDto": {
        "enum": [
          "Pendente",
          "Autorizada",
          "AutorizadaNaDataInformada",
          "Vetada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoEnvioEmailFornecedorOrdemCompraDto": {
        "enum": [
          "Vazio",
          "Pendente",
          "Enviado"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoSituacaoIntegracaoOrdemCompraDto": {
        "enum": [
          "Integrada",
          "Pendente"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.OrdemCompra.TipoTributoItemOrdemCompraDto": {
        "enum": [
          "Icms",
          "Fcp",
          "IcmsSt",
          "FcpSt",
          "IcmsDifa",
          "Ipi",
          "IssRetido",
          "InssRetido",
          "Irrf"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.PreRegistroNotas.ReadPreRegistroNotasDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.PreRegistroNotas.TipoPreRegistroNotaDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.PreRegistroNotas.TipoPreRegistroNotaDto": {
        "enum": [
          "Invalido",
          "LancamentoManual",
          "ImportacaoNFe",
          "ImportacaoCTe"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.PreRegistroNotas.TipoSituacaoPreRegistroNotasDto": {
        "enum": [
          "Todos",
          "Ativos"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaComplementoDto": {
        "type": "object",
        "properties": {
          "observacoesGerais": {
            "maxLength": 7000,
            "type": "string",
            "nullable": true
          },
          "observacoesInteresseFisco": {
            "maxLength": 7000,
            "type": "string",
            "nullable": true
          },
          "observacoesLancamentoFiscal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaComplementoObservacoesLancamentoFiscalDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaComplementoObservacoesLancamentoFiscalDto": {
        "type": "object",
        "properties": {
          "idNaturezaOperacao": {
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "maxLength": 7000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaComunicacaoDto": {
        "type": "object",
        "properties": {
          "tipoAssinante": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoAssinanteDto"
          },
          "codigoClasseConsumidora": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.CodigoClasseConsumidoraComunicacaoDto"
          }
        },
        "additionalProperties": false,
        "description": "Deverá ser informado apenas o grupo energia ou comunicação, conforme o tipo de nota fiscal."
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaCondicaoPagamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "idCedente": {
            "type": "string",
            "nullable": true
          },
          "idMoeda": {
            "type": "string",
            "nullable": true
          },
          "idTipoPeriodo": {
            "type": "string",
            "nullable": true
          },
          "dataCambio": {
            "type": "string",
            "format": "date"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaCondicaoPagamentoParcelaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaCondicaoPagamentoParcelaAdiantamentoBaixaDto": {
        "type": "object",
        "properties": {
          "idAdiantamento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaCondicaoPagamentoParcelaDto": {
        "type": "object",
        "properties": {
          "numeroParcela": {
            "type": "integer",
            "format": "int32"
          },
          "codigoBarras": {
            "maxLength": 55,
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "idTipoVencimento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "adiantamentosBaixa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaCondicaoPagamentoParcelaAdiantamentoBaixaDto"
            },
            "nullable": true
          },
          "inssPf": {
            "type": "number",
            "format": "double"
          },
          "irrfPf": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaDocumentoReferenciadoDto": {
        "type": "object",
        "properties": {
          "notaOrigem": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoNotaOrigemDto"
          },
          "tipoOperacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoOperacaoDto"
          },
          "nfPropria": {
            "type": "boolean"
          },
          "idParticipante": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 15,
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "codigoModelo": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "serie": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "subSerie": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "chaveAcesso": {
            "type": "string",
            "nullable": true
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaDto": {
        "required": [
          "dataEmissao",
          "dataEntrada",
          "idDocumento",
          "idFilial",
          "idFornecedorCliente",
          "indicadorNF",
          "itens"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "propria": {
            "type": "boolean"
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoSituacaoDto"
          },
          "indicadorNF": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoIndicadorNFDto"
          },
          "finalidade": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoFinalidadeDto"
          },
          "chaveAcesso": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 15,
            "type": "string",
            "nullable": true
          },
          "idDocumento": {
            "minLength": 1,
            "type": "string"
          },
          "idNaturezaOperacaoProduto": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoServico": {
            "type": "string",
            "nullable": true
          },
          "dataEntrada": {
            "type": "string",
            "format": "date"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataEscrituracaoExtemporanea": {
            "type": "string",
            "format": "date"
          },
          "idFornecedorCliente": {
            "minLength": 1,
            "type": "string"
          },
          "idPossuidorProprietario": {
            "type": "string",
            "nullable": true
          },
          "idPreRegistro": {
            "type": "string",
            "nullable": true
          },
          "codigoNfse": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "idContrato": {
            "type": "string",
            "nullable": true
          },
          "idRecebimentoProdutos": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idGerencial": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "numeroDocumentoContabil": {
            "type": "integer",
            "format": "int32"
          },
          "idLocalEstocagem": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "idComprador": {
            "type": "string",
            "nullable": true
          },
          "consumoFaturado": {
            "type": "number",
            "format": "double"
          },
          "documentosReferenciados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaDocumentoReferenciadoDto"
            },
            "nullable": true
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemDto"
            }
          },
          "energia": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaEnergiaDto"
          },
          "comunicacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaComunicacaoDto"
          },
          "total": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaTotalDto"
          },
          "transporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaTransporteDto"
          },
          "complemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaComplementoDto"
          },
          "condicaoPagamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaCondicaoPagamentoDto"
          },
          "origem": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaMunicipioDto"
          },
          "destino": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaMunicipioDto"
          },
          "integrado": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoIntegradoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaEnergiaDto": {
        "type": "object",
        "properties": {
          "tipoLigacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoLigacaoDto"
          },
          "tipoTensao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoTensaoDto"
          },
          "nF3eDeducaoEnergiaInjetada": {
            "type": "number",
            "format": "double"
          },
          "nF3eOutrasDeducoes": {
            "type": "number",
            "format": "double"
          },
          "codigoClasseConsumidora": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.CodigoClasseConsumidoraEnergiaDto"
          }
        },
        "additionalProperties": false,
        "description": "Deverá ser informado apenas o grupo energia ou comunicação, conforme o tipo de nota fiscal."
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemDeclaracaoImportacaoDto": {
        "type": "object",
        "properties": {
          "numero": {
            "maxLength": 15,
            "type": "string",
            "nullable": true
          },
          "dataRegistro": {
            "type": "string",
            "format": "date"
          },
          "idExportador": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "numeroDrawback": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "desembaracoArduaneiroUF": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "desembaracoArduaneiroData": {
            "type": "string",
            "format": "date"
          },
          "desembaracoArduaneiroLocal": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "adicaoNumero": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "adicaoDesconto": {
            "type": "number",
            "format": "double"
          },
          "idFabricante": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "declaracaoSimplificada": {
            "type": "boolean"
          },
          "freteInternacional": {
            "type": "number",
            "format": "double"
          },
          "seguroInternacional": {
            "type": "number",
            "format": "double"
          },
          "incoterm": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dados.RegistroEntrada.TipoIncoterm"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemDespesaDto": {
        "type": "object",
        "properties": {
          "frete": {
            "type": "number",
            "format": "double"
          },
          "seguro": {
            "type": "number",
            "format": "double"
          },
          "despesasAcessorias": {
            "type": "number",
            "format": "double"
          },
          "custoFreteConhecimentoTransporte": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemDto": {
        "required": [
          "produtoServico",
          "quantidade",
          "valorUnitario"
        ],
        "type": "object",
        "properties": {
          "numero": {
            "type": "integer",
            "format": "int32"
          },
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "complemento": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "idNatureza": {
            "type": "string",
            "nullable": true
          },
          "idUnidade": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "valorTotal": {
            "type": "number",
            "description": "Valor total do item. Será utilizado apenas se for um item de serviço e não for informada a quantidade e valor unitário.",
            "format": "double"
          },
          "livreDeCobranca": {
            "type": "boolean"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          },
          "imobilizado": {
            "type": "boolean"
          },
          "despesa": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemDespesaDto"
          },
          "ordensCompra": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemOrdemCompraDto"
            },
            "nullable": true
          },
          "tributos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemTributoDto"
            },
            "nullable": true
          },
          "declaracaoImportacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemDeclaracaoImportacaoDto"
          },
          "servicoEfdReinf": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemServicoEfdReinfDto"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemOrdemCompraDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "numeroItem": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioArmaDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoArmaDeFogoDto"
          },
          "serie": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "cano": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "estoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioEstoqueDto"
          },
          "idClassificacaoOrigem": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciaisOrigem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaRelacionamentoGerencialDto"
            },
            "nullable": true
          },
          "idClassificacaoDestino": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciaisDestino": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaRelacionamentoGerencialDto"
            },
            "nullable": true
          },
          "relacionamentosGerenciaisFilialDestino": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaRelacionamentoGerencialDto"
            },
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "medicamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioMedicamentoDto"
          },
          "veiculo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioVeiculoDto"
          },
          "arma": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioArmaDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioEstoqueDto": {
        "type": "object",
        "properties": {
          "retorno": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoEstoqueRetornoDto"
          },
          "producao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoEstoqueProducaoDto"
          },
          "idMovimentoOrigem": {
            "type": "string",
            "nullable": true
          },
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "idLocalEpt": {
            "type": "string",
            "nullable": true
          },
          "idContaProdutoElaboracao": {
            "type": "string",
            "nullable": true
          },
          "rateiosGerenciaisProdEmElaboracao": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioEstoqueGerencialProdEmElaboracaoDto"
            },
            "nullable": true
          },
          "idLocalDestino": {
            "type": "string",
            "nullable": true
          },
          "idPossuidorProprietario": {
            "type": "string",
            "nullable": true
          },
          "loteNumero": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "loteDataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "loteNumeroDiasValidade": {
            "type": "integer",
            "format": "int32"
          },
          "loteDataValidade": {
            "type": "string",
            "format": "date"
          },
          "volume": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioEstoqueGerencialProdEmElaboracaoDto": {
        "type": "object",
        "properties": {
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioGerencialDto": {
        "type": "object",
        "properties": {
          "idContaEmpresarial": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioMedicamentoDto": {
        "type": "object",
        "properties": {
          "precoTabelado": {
            "type": "number",
            "format": "double"
          },
          "tipoReferencia": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoReferenciaDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioVeiculoDto": {
        "type": "object",
        "properties": {
          "tipoOperacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoOperacaoVeiculoDto"
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "chassi": {
            "maxLength": 17,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemServicoEfdReinfDto": {
        "type": "object",
        "properties": {
          "retencaoServSubcontratado": {
            "type": "number",
            "format": "double"
          },
          "retencaoAjuizada": {
            "type": "number",
            "format": "double"
          },
          "retencaoAjuizadaProcessos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemServicoEfdReinfRetencaoAjuizadaProcessoDto"
            },
            "nullable": true
          },
          "valorServicosInsalubridade15Anos": {
            "type": "number",
            "format": "double"
          },
          "valorServicosInsalubridade20Anos": {
            "type": "number",
            "format": "double"
          },
          "valorServicosInsalubridade25Anos": {
            "type": "number",
            "format": "double"
          },
          "adicionalRetencaoInsalubridade": {
            "type": "number",
            "format": "double"
          },
          "adicionalRetencaoAjuizada": {
            "type": "number",
            "format": "double"
          },
          "adicionalRetencaoAjuizadaProcessos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemServicoEfdReinfRetencaoAjuizadaProcessoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemServicoEfdReinfRetencaoAjuizadaProcessoDto": {
        "type": "object",
        "properties": {
          "idProcesso": {
            "type": "string",
            "nullable": true
          },
          "idSuspensao": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemTributoDeducaoBaseCalculoDto": {
        "type": "object",
        "properties": {
          "deducaoInss": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoDeducaoINSSDto"
          },
          "descricao": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "percentual": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemTributoDto": {
        "type": "object",
        "properties": {
          "tributo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoTributoDto"
          },
          "baseCalculoCreditoPisCofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.TipoBaseCalculoCreditoProdutoServicoDto"
          },
          "cst": {
            "type": "string",
            "nullable": true
          },
          "csosn": {
            "type": "string",
            "nullable": true
          },
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "percentualReducao": {
            "type": "number",
            "format": "double"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "icmsDispensado": {
            "type": "number",
            "format": "double"
          },
          "creditoPresumidoSimplesNacional": {
            "type": "boolean"
          },
          "cfopNaNfEmitente": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "aliquotaCreditoPresumido": {
            "type": "number",
            "format": "double"
          },
          "creditoPresumido": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoOpInternaSt": {
            "type": "number",
            "format": "double"
          },
          "fcpNaoContribuinte": {
            "type": "number",
            "format": "double"
          },
          "classificacaoFiscal": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "idContaContabilSped": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencialSped": {
            "type": "string",
            "nullable": true
          },
          "despesasArduaneiras": {
            "type": "number",
            "format": "double"
          },
          "iof": {
            "type": "number",
            "format": "double"
          },
          "afrmm": {
            "type": "number",
            "format": "double"
          },
          "pisImportacao": {
            "type": "number",
            "format": "double"
          },
          "cofinsImportacao": {
            "type": "number",
            "format": "double"
          },
          "parcelaImportada": {
            "type": "number",
            "format": "double"
          },
          "numeroControleFci": {
            "maxLength": 36,
            "type": "string",
            "nullable": true
          },
          "deducoesBaseCalculo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemTributoDeducaoBaseCalculoDto"
            },
            "nullable": true
          },
          "codigoReceita": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaMunicipioDto": {
        "type": "object",
        "properties": {
          "idUf": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaRelacionamentoGerencialDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaItemRateioGerencialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaTotalDto": {
        "type": "object",
        "properties": {
          "frete": {
            "type": "number",
            "format": "double"
          },
          "seguro": {
            "type": "number",
            "format": "double"
          },
          "despesasAcessoriais": {
            "type": "number",
            "format": "double"
          },
          "custoConhecimentoTransporte": {
            "type": "number",
            "format": "double"
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "valorLiquido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaTransporteDto": {
        "type": "object",
        "properties": {
          "numeroConhecimentoTransporte": {
            "maxLength": 15,
            "type": "string",
            "nullable": true
          },
          "idTransportadora": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoFretePorContaDto"
          },
          "viaTransporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoViaTransporteDto"
          },
          "volume": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaTransporteVolumeDto"
          },
          "veiculos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaTransporteVeiculoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaTransporteVeiculoDto": {
        "type": "object",
        "properties": {
          "placaVeiculo": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "uf": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Create.CreateRegistroEntradaTransporteVolumeDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "integer",
            "format": "int64"
          },
          "especie": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "marca": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "double"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.CodigoClasseConsumidoraComunicacaoDto": {
        "enum": [
          "_00_01RegistroConsolidandoDocumentosConsumoResidencialPessoaFisicaAte50",
          "_01_01RegistroConsolidandoDocumentosConsumoResidencialPessoaFisicaDe50Ate100",
          "_02_01RegistroConsolidandoDocumentosConsumoResidencialPessoaFisicaDe100Ate200",
          "_03_01RegistroConsolidandoDocumentosConsumoResidencialPessoaFisicaDe200Ate300",
          "_04_01RegistroConsolidandoDocumentosConsumoResidencialPessoaFisicaDe300Ate400",
          "_05_01RegistroConsolidandoDocumentosConsumoResidencialPessoaFisicaDe400Ate500",
          "_06_01RegistroConsolidandoDocumentosConsumoResidencialPessoaFisicaDe500Ate1000",
          "_07_01RegistroPorDocumentoFiscalPessoaFisicaAcima1000",
          "_10_01RegistroConsolidandoDocumentosConsumoComercialIndustrialAte50",
          "_11_01RegistroConsolidandoDocumentosConsumoComercialIndustrialDe50Ate100",
          "_12_01RegistroConsolidandoDocumentosConsumoComercialIndustrialDe100Ate200",
          "_13_01RegistroConsolidandoDocumentosConsumoComercialIndustrialDe200Ate300",
          "_14_01RegistroConsolidandoDocumentosConsumoComercialIndustrialDe300Ate400",
          "_15_01RegistroConsolidandoDocumentosConsumoComercialIndustrialDe400Ate500",
          "_16_01RegistroConsolidandoDocumentosConsumoComercialIndustrialDe500Ate1000",
          "_17_01RegistroPorDocumentoFiscalComercialIndustrialAcima1000",
          "_70_01RegistroConsolidandoDocumentosConsumoPoderPublicoAte50",
          "_71_01RegistroConsolidandoDocumentosConsumoPoderPublicoDe50Ate100",
          "_72_01RegistroConsolidandoDocumentosConsumoPoderPublicoDe100Ate200",
          "_73_01RegistroConsolidandoDocumentosConsumoPoderPublicoDe200Ate300",
          "_74_01RegistroConsolidandoDocumentosConsumoPoderPublicoDe300Ate400",
          "_75_01RegistroConsolidandoDocumentosConsumoPoderPublicoDe400Ate500",
          "_76_01RegistroConsolidandoDocumentosConsumoPoderPublicoDe500Ate1000",
          "_77_01RegistroPorDocumentoFiscalOrgaoPublicoAcima1000",
          "_78_01RegistroPorDocumentoFiscalOrgaoPublicoIsentoICMS",
          "_79_01RegistroPorDocumentoFiscalOrgaoSemipublico",
          "_90_01RegistroConsolidandoDocumentosConsumoOutroTipoAte50",
          "_91_01RegistroConsolidandoDocumentosConsumoOutroTipoDe50Ate100",
          "_92_01RegistroConsolidandoDocumentosConsumoOutroTipoDe100Ate200",
          "_93_01RegistroConsolidandoDocumentosConsumoOutroTipoDe200Ate300",
          "_94_01RegistroConsolidandoDocumentosConsumoOutroTipoDe300Ate400",
          "_95_01RegistroConsolidandoDocumentosConsumoOutroTipoDe400Ate500",
          "_96_01RegistroConsolidandoDocumentosConsumoOutroTipoDe500Ate1000",
          "_97_01RegistroPorDocumentoFiscalOutrosTiposAcima1000",
          "_99_01RegistroPorDocumentoFiscalEmitido",
          "Nenhum"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.CodigoClasseConsumidoraEnergiaDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "Comercial",
          "ConsumoProprio",
          "IluminacaoPublica",
          "Industrial",
          "PoderPublico",
          "Residencial",
          "Rural",
          "ServicoPublico"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoArmaDeFogoDto": {
        "enum": [
          "Invalido",
          "UsoPermitido",
          "UsoRestrito"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoAssinanteDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "ComercialIndustrial",
          "PoderPublico",
          "ResidencialPessoaFisica",
          "Publico",
          "SemiPublico",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoDeducaoINSSDto": {
        "enum": [
          "Invalido",
          "MaterialUtilizado",
          "AlimentacaoFornecida",
          "TransporteFornecido"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoEstoqueProducaoDto": {
        "enum": [
          "Invalido",
          "Externa",
          "Interna"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoEstoqueRetornoDto": {
        "enum": [
          "Invalido",
          "Vazio",
          "ParaLocalProprio",
          "ComNovaRemessa",
          "SemRetorno",
          "ProducaoExterna",
          "ProducaoInterna"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoFinalidadeDto": {
        "enum": [
          "Invalido",
          "Normal",
          "Substituicao",
          "Ajuste"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoFretePorContaDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "Remetente",
          "Destinatario",
          "Terceiro",
          "ProprioPorContaRemetente",
          "ProprioPorContaDestinatario",
          "SemFrete"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoIncotermDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "Exw",
          "Fca",
          "Fas",
          "Fob",
          "Cpt",
          "Cip",
          "Cfr",
          "Cif",
          "Dap",
          "Dpu",
          "Dpp"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoIndicadorNFDto": {
        "enum": [
          "Invalido",
          "Normal",
          "Complementar",
          "DevolucaoRetorno",
          "CupomFiscal",
          "RegimeEspecialNormaEspecifica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoIntegradoDto": {
        "enum": [
          "Invalido",
          "Integrado",
          "Pendente"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoLigacaoDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "Monofasico",
          "Bifasico",
          "Trifasico"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoNotaOrigemDto": {
        "enum": [
          "Invalido",
          "Comercial",
          "NFCe",
          "Compras",
          "Outras"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoOperacaoDto": {
        "enum": [
          "Invalido",
          "EntradaAquisicao",
          "SaidaPrestacao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoOperacaoVeiculoDto": {
        "enum": [
          "Invalido",
          "VendaParaConcessionaria",
          "FaturamentoDireto",
          "VendaDireta",
          "VendaConcessionaria",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoReferenciaDto": {
        "enum": [
          "Invalido",
          "PrecoTabelado",
          "MargemValorAgregado",
          "ListaNegativa",
          "ListaPositiva",
          "ListaNeutra"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoSituacaoDto": {
        "enum": [
          "Invalido",
          "Normal",
          "Cancelada",
          "Extemporanea"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoTensaoDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "A1AltaTensao230KvOuMais",
          "A2AltaTensao88a138Kv",
          "A3AltaTensao69Kv",
          "A3aAltaTensao30a44Kv",
          "A4AltaTensao23a25Kv",
          "ASAltaTensaoSubterraneo06",
          "B1Residencial07",
          "B1ResidencialBaixaRenda08",
          "B2Rural09",
          "B2CooperativaEletrificacaoRural",
          "B2ServicoPublicoIrrigacao",
          "B3DemaisClasses",
          "B4aIluminacaoPublicaRedeDistribuicao",
          "B4bIluminacaoPublicaBulboLampada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoTributoDto": {
        "enum": [
          "Invalido",
          "Icms",
          "Fcp",
          "IcmsSt",
          "IcmsRetencao",
          "FcpSt",
          "FcpStRetencao",
          "IcmsDifa",
          "IcmsDifalNaoContribuinte",
          "Ipi",
          "Pis",
          "Cofins",
          "ImpostoImportacao",
          "PisImportacao",
          "CofinsImportacao",
          "PisRetido",
          "CofinsRetido",
          "CsllRetido",
          "IrrfPf",
          "Pcc",
          "IssRetido",
          "IssNormal",
          "InssPf",
          "IrrfPj",
          "InssPj"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoViaTransporteDto": {
        "enum": [
          "Invalido",
          "Rodoviario",
          "Ferroviario",
          "Rodoferroviario",
          "Aquaviario",
          "Dutoviario",
          "Aereo",
          "Rodoaereo",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaComplementoDto": {
        "type": "object",
        "properties": {
          "observacoesGerais": {
            "type": "string",
            "nullable": true
          },
          "observacoesInteresseFisco": {
            "type": "string",
            "nullable": true
          },
          "observacoesLancamentoFiscal": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaComplementoObservacoesLancamentoFiscalDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaComplementoObservacoesLancamentoFiscalDto": {
        "type": "object",
        "properties": {
          "idNaturezaOperacao": {
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaComunicacaoDto": {
        "type": "object",
        "properties": {
          "tipoAssinante": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoAssinanteDto"
          },
          "codigoClasseConsumidora": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.CodigoClasseConsumidoraComunicacaoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaCondicaoPagamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "idCedente": {
            "type": "string",
            "nullable": true
          },
          "idMoeda": {
            "type": "string",
            "nullable": true
          },
          "idTipoPeriodo": {
            "type": "string",
            "nullable": true
          },
          "dataCambio": {
            "type": "string",
            "format": "date"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaCondicaoPagamentoParcelaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaCondicaoPagamentoParcelaAdiantamentoBaixaDto": {
        "type": "object",
        "properties": {
          "idAdiantamento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaCondicaoPagamentoParcelaDto": {
        "type": "object",
        "properties": {
          "numeroParcela": {
            "type": "integer",
            "format": "int32"
          },
          "codigoBarras": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "idTipoVencimento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "adiantamentosBaixa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaCondicaoPagamentoParcelaAdiantamentoBaixaDto"
            },
            "nullable": true
          },
          "inssPf": {
            "type": "number",
            "format": "double"
          },
          "irrfPf": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaDocumentoReferenciadoDto": {
        "type": "object",
        "properties": {
          "notaOrigem": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoNotaOrigemDto"
          },
          "tipoOperacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoOperacaoDto"
          },
          "nfPropria": {
            "type": "boolean"
          },
          "idParticipante": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "codigoModelo": {
            "type": "string",
            "nullable": true
          },
          "serie": {
            "type": "string",
            "nullable": true
          },
          "subSerie": {
            "type": "string",
            "nullable": true
          },
          "chaveAcesso": {
            "type": "string",
            "nullable": true
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "chave": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "propria": {
            "type": "boolean"
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoSituacaoDto"
          },
          "indicadorNf": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoIndicadorNFDto"
          },
          "finalidade": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoFinalidadeDto"
          },
          "chaveAcesso": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "type": "string",
            "nullable": true
          },
          "idDocumento": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoProduto": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacaoServico": {
            "type": "string",
            "nullable": true
          },
          "dataEntrada": {
            "type": "string",
            "format": "date"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataEscrituracaoExtemporanea": {
            "type": "string",
            "format": "date"
          },
          "idFornecedorCliente": {
            "type": "string",
            "nullable": true
          },
          "idPreRegistro": {
            "type": "string",
            "nullable": true
          },
          "codigoNfse": {
            "type": "string",
            "nullable": true
          },
          "idContrato": {
            "type": "string",
            "nullable": true
          },
          "idRecebimentoProdutos": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idGerencial": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "numeroDocumentoContabil": {
            "type": "integer",
            "format": "int32"
          },
          "idLocalEstocagem": {
            "type": "string",
            "nullable": true
          },
          "idPossuidorProprietario": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "idComprador": {
            "type": "string",
            "nullable": true
          },
          "consumoFaturado": {
            "type": "number",
            "format": "double"
          },
          "documentosReferenciados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaDocumentoReferenciadoDto"
            },
            "nullable": true
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemDto"
            },
            "nullable": true
          },
          "energia": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaEnergiaDto"
          },
          "comunicacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaComunicacaoDto"
          },
          "total": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaTotalDto"
          },
          "transporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaTransporteDto"
          },
          "complemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaComplementoDto"
          },
          "condicaoPagamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaCondicaoPagamentoDto"
          },
          "origem": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaMunicipioDto"
          },
          "destino": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaMunicipioDto"
          },
          "integrado": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoIntegradoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaEnergiaDto": {
        "type": "object",
        "properties": {
          "tipoLigacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoLigacaoDto"
          },
          "tipoTensao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoTensaoDto"
          },
          "nF3eDeducaoEnergiaInjetada": {
            "type": "number",
            "format": "double"
          },
          "nF3eOutrasDeducoes": {
            "type": "number",
            "format": "double"
          },
          "codigoClasseConsumidora": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.CodigoClasseConsumidoraEnergiaDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemDeclaracaoImportacaoDto": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "string",
            "nullable": true
          },
          "dataRegistro": {
            "type": "string",
            "format": "date"
          },
          "idExportador": {
            "type": "string",
            "nullable": true
          },
          "numeroDrawback": {
            "type": "string",
            "nullable": true
          },
          "desembaracoArduaneiroUF": {
            "type": "string",
            "nullable": true
          },
          "desembaracoArduaneiroData": {
            "type": "string",
            "format": "date"
          },
          "desembaracoArduaneiroLocal": {
            "type": "string",
            "nullable": true
          },
          "adicaoNumero": {
            "type": "string",
            "nullable": true
          },
          "adicaoDesconto": {
            "type": "number",
            "format": "double"
          },
          "idFabricante": {
            "type": "string",
            "nullable": true
          },
          "declaracaoSimplificada": {
            "type": "boolean"
          },
          "freteInternacional": {
            "type": "number",
            "format": "double"
          },
          "seguroInternacional": {
            "type": "number",
            "format": "double"
          },
          "incoterm": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoIncotermDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemDespesaDto": {
        "type": "object",
        "properties": {
          "frete": {
            "type": "number",
            "format": "double"
          },
          "seguro": {
            "type": "number",
            "format": "double"
          },
          "despesasAcessorias": {
            "type": "number",
            "format": "double"
          },
          "custoFreteConhecimentoTransporte": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemDto": {
        "type": "object",
        "properties": {
          "numero": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "produtoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "idNatureza": {
            "type": "string",
            "nullable": true
          },
          "idUnidade": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoTotal": {
            "type": "number",
            "format": "double"
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "livreDeCobranca": {
            "type": "boolean"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          },
          "imobilizado": {
            "type": "boolean"
          },
          "despesa": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemDespesaDto"
          },
          "ordensCompra": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemOrdemCompraDto"
            },
            "nullable": true
          },
          "tributos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemTributoDto"
            },
            "nullable": true
          },
          "declaracaoImportacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemDeclaracaoImportacaoDto"
          },
          "servicoEfdReinf": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemServicoEfdReinfDto"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemOrdemCompraDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "numeroItem": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioArmaDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoArmaDeFogoDto"
          },
          "serie": {
            "type": "string",
            "nullable": true
          },
          "cano": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "estoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioEstoqueDto"
          },
          "idClassificacaoOrigem": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciaisOrigem": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaRelacionamentoGerencialDto"
            },
            "nullable": true
          },
          "idClassificacaoDestino": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciaisDestino": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaRelacionamentoGerencialDto"
            },
            "nullable": true
          },
          "idClassificacaoFilialDestino": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciaisFilialDestino": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaRelacionamentoGerencialDto"
            },
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "medicamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioMedicamentoDto"
          },
          "veiculo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioVeiculoDto"
          },
          "arma": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioArmaDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioEstoqueDto": {
        "type": "object",
        "properties": {
          "retorno": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoEstoqueRetornoDto"
          },
          "producao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoEstoqueProducaoDto"
          },
          "idMovimentoOrigem": {
            "type": "string",
            "nullable": true
          },
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "idLocalEpt": {
            "type": "string",
            "nullable": true
          },
          "idContaProdutoElaboracao": {
            "type": "string",
            "nullable": true
          },
          "rateiosGerenciaisProdEmElaboracao": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioEstoqueGerencialProdEmElaboracaoDto"
            },
            "nullable": true
          },
          "idLocalDestino": {
            "type": "string",
            "nullable": true
          },
          "idPossuidorProprietario": {
            "type": "string",
            "nullable": true
          },
          "loteNumero": {
            "type": "string",
            "nullable": true
          },
          "loteDataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "loteNumeroDiasValidade": {
            "type": "integer",
            "format": "int32"
          },
          "loteDataValidade": {
            "type": "string",
            "format": "date"
          },
          "volume": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioEstoqueGerencialProdEmElaboracaoDto": {
        "type": "object",
        "properties": {
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioGerencialDto": {
        "type": "object",
        "properties": {
          "idContaEmpresarial": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioMedicamentoDto": {
        "type": "object",
        "properties": {
          "precoTabelado": {
            "type": "number",
            "format": "double"
          },
          "tipoReferencia": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoReferenciaDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioVeiculoDto": {
        "type": "object",
        "properties": {
          "tipoOperacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoOperacaoVeiculoDto"
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "chassi": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemServicoEfdReinfDto": {
        "type": "object",
        "properties": {
          "retencaoServSubcontratado": {
            "type": "number",
            "format": "double"
          },
          "retencaoAjuizada": {
            "type": "number",
            "format": "double"
          },
          "retencaoAjuizadaProcessos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemServicoEfdReinfRetencaoAjuizadaProcessoDto"
            },
            "nullable": true
          },
          "valorServicosInsalubridade15Anos": {
            "type": "number",
            "format": "double"
          },
          "valorServicosInsalubridade20Anos": {
            "type": "number",
            "format": "double"
          },
          "valorServicosInsalubridade25Anos": {
            "type": "number",
            "format": "double"
          },
          "adicionalRetencaoInsalubridade": {
            "type": "number",
            "format": "double"
          },
          "adicionalRetencaoAjuizada": {
            "type": "number",
            "format": "double"
          },
          "adicionalRetencaoAjuizadaProcessos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemServicoEfdReinfRetencaoAjuizadaProcessoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemServicoEfdReinfRetencaoAjuizadaProcessoDto": {
        "type": "object",
        "properties": {
          "idProcesso": {
            "type": "string",
            "nullable": true
          },
          "idSuspensao": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemTributoDeducaoBaseCalculoDto": {
        "type": "object",
        "properties": {
          "deducaoInss": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoDeducaoINSSDto"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "percentual": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemTributoDto": {
        "type": "object",
        "properties": {
          "tributo": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoTributoDto"
          },
          "baseCalculoCreditoPisCofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.TipoBaseCalculoCreditoProdutoServicoDto"
          },
          "cst": {
            "type": "string",
            "nullable": true
          },
          "csosn": {
            "type": "string",
            "nullable": true
          },
          "percentualReducao": {
            "type": "number",
            "format": "double"
          },
          "percentualAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "baseCalculo": {
            "type": "number",
            "format": "double"
          },
          "aliquota": {
            "type": "number",
            "format": "double"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "icmsDispensado": {
            "type": "number",
            "format": "double"
          },
          "creditoPresumidoSimplesNacional": {
            "type": "boolean"
          },
          "cfopNaNfEmitente": {
            "type": "string",
            "nullable": true
          },
          "aliquotaCreditoPresumido": {
            "type": "number",
            "format": "double"
          },
          "creditoPresumido": {
            "type": "number",
            "format": "double"
          },
          "percentualReducaoOpInternaSt": {
            "type": "number",
            "format": "double"
          },
          "fcpNaoContribuinte": {
            "type": "number",
            "format": "double"
          },
          "classificacaoFiscal": {
            "type": "string",
            "nullable": true
          },
          "idContaContabilSped": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencialSped": {
            "type": "string",
            "nullable": true
          },
          "despesasArduaneiras": {
            "type": "number",
            "format": "double"
          },
          "iof": {
            "type": "number",
            "format": "double"
          },
          "afrmm": {
            "type": "number",
            "format": "double"
          },
          "pisImportacao": {
            "type": "number",
            "format": "double"
          },
          "cofinsImportacao": {
            "type": "number",
            "format": "double"
          },
          "parcelaImportada": {
            "type": "number",
            "format": "double"
          },
          "numeroControleFci": {
            "type": "string",
            "nullable": true
          },
          "deducoesBaseCalculo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemTributoDeducaoBaseCalculoDto"
            },
            "nullable": true
          },
          "codigoReceita": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaMunicipioDto": {
        "type": "object",
        "properties": {
          "idUf": {
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaRelacionamentoGerencialDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaItemRateioGerencialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaTotalDto": {
        "type": "object",
        "properties": {
          "frete": {
            "type": "number",
            "format": "double"
          },
          "seguro": {
            "type": "number",
            "format": "double"
          },
          "despesasAcessoriais": {
            "type": "number",
            "format": "double"
          },
          "custoConhecimentoTransporte": {
            "type": "number",
            "format": "double"
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "valorLiquido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaTransporteDto": {
        "type": "object",
        "properties": {
          "numeroConhecimentoTransporte": {
            "type": "string",
            "nullable": true
          },
          "idTransportadora": {
            "type": "string",
            "nullable": true
          },
          "fretePorConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoFretePorContaDto"
          },
          "viaTransporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Enums.TipoViaTransporteDto"
          },
          "volume": {
            "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaTransporteVolumeDto"
          },
          "veiculos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaTransporteVeiculoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaTransporteVeiculoDto": {
        "type": "object",
        "properties": {
          "placaVeiculo": {
            "type": "string",
            "nullable": true
          },
          "uf": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Compras.Dtos.V1.RegistroEntrada.Read.ReadRegistroEntradaTransporteVolumeDto": {
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "integer",
            "format": "int64"
          },
          "especie": {
            "type": "string",
            "nullable": true
          },
          "marca": {
            "type": "string",
            "nullable": true
          },
          "pesoBruto": {
            "type": "number",
            "format": "double"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.CreateLancamentoContaDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idContaContabil": {
            "type": "string",
            "nullable": true
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.CreateRateioContabilDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.CreateLancamentoContabilDto": {
        "required": [
          "data",
          "historico",
          "idFilial",
          "valor"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "chave": {
            "maxLength": 13,
            "type": "string",
            "nullable": true
          },
          "documento": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "data": {
            "type": "string",
            "format": "date"
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "credito": {
            "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.CreateLancamentoContaDto"
          },
          "debito": {
            "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.CreateLancamentoContaDto"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "notaExplicativa": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.CreateRateioContabilDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idContaContabil": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.ReadLancamentoContaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idContaContabil": {
            "type": "string",
            "nullable": true
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.ReadRateioContabilDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.ReadLancamentoContabilDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "chave": {
            "maxLength": 13,
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "credito": {
            "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.ReadLancamentoContaDto"
          },
          "data": {
            "type": "string",
            "format": "date"
          },
          "debito": {
            "$ref": "#/components/schemas/Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.ReadLancamentoContaDto"
          },
          "documento": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "notaExplicativa": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Contabil.Dtos.V1.LancamentoContabil.ReadRateioContabilDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idContaContabil": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Contabil.Dtos.V1.OrigemLancamentoDto": {
        "enum": [
          "Origem_Lote",
          "Origem_Importacao",
          "Origem_EscritaFiscal",
          "Origem_Patrimonial",
          "Origem_Contabilidade",
          "Origem_Financeiro",
          "Origem_FN_LancamentoContasAPagar",
          "Origem_FN_BaixaContasAPagar",
          "Origem_FN_LancamentoContasAReceber",
          "Origem_FN_BaixaContasAReceber",
          "Origem_FN_Tesouraria",
          "Origem_FN_Cambial",
          "Origem_Estoque",
          "Origem_IrpjLalur",
          "Origem_Comercial",
          "Origem_Comercial_Pedido",
          "Origem_Conciliacao",
          "Origem_GeradorLancamento",
          "Origem_Folha",
          "Origem_NFCe",
          "Origem_Compras_RegistroEntranda",
          "Origem_Compras_ConhecimentoTransporte",
          "Origem_Custos",
          "Origem_Gerenciador",
          "Origem_ECF",
          "Origem_LancamentoNeutro_IFRS",
          "Origem_WebService"
        ],
        "type": "string"
      },
      "Radar.API.Model.Contabil.Dtos.V1.TipoConferidoDto": {
        "enum": [
          "eTodos",
          "eConferido",
          "eNaoConferidos"
        ],
        "type": "string"
      },
      "Radar.API.Model.Core.Dto.ReadDtoBase": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "complementos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "complementos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Dados.Filtro.FiltroAtivoInativo": {
        "enum": [
          "Todos",
          "Inativo",
          "Ativo"
        ],
        "type": "string"
      },
      "Radar.API.Model.Dados.ProdutoServico.ProdutoServicoModel": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Dados.ProdutoServico.TipoProdutoServico"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade1": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade2": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Dados.ProdutoServico.TipoProdutoServico": {
        "enum": [
          "Produto",
          "Servico"
        ],
        "type": "string"
      },
      "Radar.API.Model.Dtos.V1.Filtro.FiltroAtivoInativoDto": {
        "enum": [
          "Todos",
          "Inativo",
          "Ativo"
        ],
        "type": "string"
      },
      "Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto": {
        "type": "object",
        "properties": {
          "posicao": {
            "minimum": 0,
            "type": "integer",
            "description": "Posição do campo do InfoPlus na lista de campos, podendo ir de 1 ao 20. Esse valor é o mesmo da propriedade \"Ordem\" do cadastro do InfoPlus.\r\nUse para indicar qual campo você deseja gravar ou alterar dentro da lista de campos previamente cadastrada.",
            "format": "uint32"
          },
          "valor": {
            "maxLength": 1500,
            "type": "string",
            "description": "Valor atribuído ao campo de InfoPlus. Informe algum dos seguintes valores:\r\n\r\n`Alfanumerico = Qualquer valor no formato alfanumérico de até 1500 caracteres`\r\n`Checkbox = \"Sim\" ou \"Não\"`\r\n`DataDiaMesAno = Qualquer data válida no formato DD/MM/AAAA`\r\n`DataMesAno = Qualquer data válida no formato MM/AAAA`\r\n`HoraMinuto = Qualquer hora válida no formato HH:MM`\r\n`InformacoesComplementares = ID de uma conta do tipo Analítica do cadastro de Informações Complementares`\r\n`Numerico = Qualquer valor numérico inteiro de até 9 dígitos`\r\n`Valor2Decimais = Qualquer valor numérico com duas casas decimais de até 16 dígitos`\r\n`Valor4Decimais = Qualquer valor numérico com quatro casas decimais de até 18 dígitos`\r\n`Valor8Decimais = Qualquer valor numérico com oito casas decimais de até 18 dígitos`\r\n",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto": {
        "type": "object",
        "properties": {
          "posicao": {
            "minimum": 0,
            "type": "integer",
            "description": "Posição do campo do InfoPlus na lista de campos, podendo ir de 1 ao 20. Esse valor é o mesmo da propriedade \"Ordem\" do cadastro do InfoPlus.",
            "format": "uint32"
          },
          "nome": {
            "type": "string",
            "description": "Nome do campo de InfoPlus, conforme informado no cadastro do InfoPlus.",
            "nullable": true
          },
          "valor": {
            "type": "string",
            "description": "Valor atribuído ao campo de InfoPlus.",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.TipoCampoDto"
          },
          "idGrupo": {
            "type": "string",
            "description": "ID da conta do tipo Grupo do cadastro de Informações Complementares, conforme informado no cadastro do InfoPlus.\r\nRetornado quando o <see cref=\"P:Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto.Tipo\">\"tipo\"</see> for <see cref=\"F:Radar.API.Model.Dtos.V1.InfoPlus.TipoCampoDto.InformacoesComplementares\">\"InformacoesComplementares\"</see>.",
            "nullable": true
          },
          "obrigatorio": {
            "type": "boolean",
            "description": "Identifica se o campo é obrigatório ou não, conforme informado no cadastro do InfoPlus."
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Dtos.V1.InfoPlus.TipoCampoDto": {
        "enum": [
          "Invalido",
          "Alfanumerico",
          "Checkbox",
          "DataDiaMesAno",
          "DataMesAno",
          "HoraMinuto",
          "InformacoesComplementares",
          "Numerico",
          "Valor2Decimais",
          "Valor4Decimais",
          "Valor8Decimais"
        ],
        "type": "string"
      },
      "Radar.API.Model.Dtos.V1.InfoPlus.TipoProcessoDto": {
        "enum": [
          "Invalido",
          "Comercial_Orcamentos",
          "Comercial_Pedidos",
          "Comercial_Romaneios",
          "Comercial_NotasFiscais",
          "Comercial_AgendamentoDeVisitas",
          "Comercial_ContratosDeVendas",
          "Compras_SolicitacoesDeCompras",
          "Compras_Cotacoes",
          "Compras_OrdensDeCompras",
          "Compras_RegistroDeEntradas",
          "Compras_ConhecimentosDeTransportes",
          "Compras_GerenciamentoContratosDeCompras",
          "Empresarial_RequisicoesInternas",
          "Empresarial_CadastroDeProdutos",
          "Empresarial_CadastroDeServicos",
          "Empresarial_Recursos",
          "Empresarial_CadastroDeFornecedores",
          "Empresarial_CadastroDeClientes",
          "Empresarial_CadastroDeTransportadoras",
          "Empresarial_CadastroDeRepresentantes",
          "Estoque_CadastroDeLocais",
          "Estoque_MovimentosDeEstoque",
          "Financeiro_ContasAReceber",
          "Financeiro_ContasAPagar",
          "Financeiro_Tesouraria",
          "Folha_Cargos",
          "Folha_Empregados",
          "Folha_Pagamentos",
          "Folha_Sindicatos",
          "Folha_TabelaDeRubricas",
          "Folha_TerceirosAlimentacao",
          "Folha_TerceirosContribuinteIndividual",
          "Folha_TerceirosPlanoDeSaude",
          "Folha_TerceirosSeguros",
          "Folha_TerceirosTransporte",
          "Folha_Transferencias",
          "Gerenciador_AcompanhamentoDeServicos",
          "Gerenciador_Assistec_AgruparRegistros",
          "Gerenciador_AtendimentosTecnicos",
          "Gerenciador_Contratos",
          "Gerenciador_Contratos_Servicos",
          "Gerenciador_ProtocolosDeEntrada",
          "Gerenciador_ProtocolosDeSaida",
          "Manutencao_Manutencoes",
          "Manutencao_Planos",
          "MTFiscal_Entradas",
          "MTFiscal_Entradas_ContasAPagar",
          "MTFiscal_Entradas_ItensDeNota",
          "MTFiscal_Prestados",
          "MTFiscal_Prestados_ContasAReceber",
          "MTFiscal_Prestados_ItensDeNota",
          "MTFiscal_Saidas",
          "MTFiscal_Saidas_ContasAReceber",
          "MTFiscal_Saidas_ItensDeNota",
          "MTFiscal_Tomados",
          "MTFiscal_Tomados_ContasAPagar",
          "MTFiscal_Tomados_ItensDeNota",
          "Producao_ApontamentosDePerdasDefeitos",
          "Producao_ApontamentosDeProcessosFinais",
          "Producao_ApontamentosDeProcessosIntermediarios",
          "Producao_ApontamentosDeRecursos",
          "Producao_DesenvolvimentoDeProdutos",
          "Producao_EnsaiosDeProdutos",
          "Producao_FichaTecnica",
          "Producao_NecessidadeDeProducao",
          "Producao_OrdemDeProducao",
          "RVI_ArquivoEletronicoRecebido_NF",
          "RVI_ArquivoEletronicoRecebido_CT",
          "RVI_ArquivoEletronicoRecebido_NFS"
        ],
        "type": "string"
      },
      "Radar.API.Model.Dtos.V1.ProdutoServico.CasasDecimaisProdutoServicoDto": {
        "enum": [
          "Duas",
          "Quatro",
          "Oito"
        ],
        "type": "string"
      },
      "Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto": {
        "type": "object",
        "properties": {
          "idProduto": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade1": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade2": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.TipoProdutoServicoDto"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade1": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade2": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Dtos.V1.ProdutoServico.TipoBaseCalculoCreditoProdutoServicoDto": {
        "enum": [
          "Invalido",
          "AquisicaoBensRevenda",
          "AquisicaoBensUtilizadosInsumo",
          "AquisicaoServicosUtilizadosInsumo",
          "EnergiaEletricaTermicaInclusiveFormaVapor",
          "ArmazenagemMercadoriaFreteOperacaoVenda",
          "MaquinasEquipamentosOutrosBensIncorporadosAtivoImobilizadoCreditoBaseValorAquisicao",
          "OutrasOperacoesDireitoCredito",
          "AtividadeTransporteCargasSubcontratacao",
          "AlugueisPredios",
          "AlugueisMaquinasEquipamentos",
          "ContraprestacoesArrendamentoMercantil",
          "AtividadeImobiliariaCustoIncorridoUnidadeImobiliaria",
          "AtividadePrestacaoServicosConservacaoValeTransporteValeRefeicaoValeAlimentacao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Dtos.V1.ProdutoServico.TipoProdutoServicoDto": {
        "enum": [
          "Produto",
          "Servico"
        ],
        "type": "string"
      },
      "Radar.API.Model.Dtos.V1.Token.CreateTokenDto": {
        "required": [
          "empresa",
          "nomeUsuario",
          "senha"
        ],
        "type": "object",
        "properties": {
          "empresa": {
            "minLength": 1,
            "type": "string"
          },
          "nomeUsuario": {
            "minLength": 1,
            "type": "string"
          },
          "senha": {
            "minLength": 1,
            "type": "string"
          },
          "idIntegrador": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Dtos.V1.Token.TokenDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Tipo da autenticação.",
            "nullable": true
          },
          "token": {
            "type": "string",
            "description": "Token de autenticação.",
            "nullable": true
          },
          "expiration": {
            "type": "string",
            "description": "Data de validade.",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dados.Importacao.StatusImportacao": {
        "enum": [
          "Invalido",
          "Inicializando",
          "EmExecucao",
          "FinalizadaComErro",
          "FinalizadaComSucesso"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dados.Importacao.TipoImportacao": {
        "enum": [
          "Nenhum",
          "PlanoDeContas_Contabil",
          "PlanoDeContas_Gerencial",
          "Clientes",
          "Fornecedores",
          "Produtos",
          "Servicos",
          "Documentos",
          "TabelasDePreco",
          "Indices",
          "RequisicoesInternas",
          "Transportadoras",
          "Representantes",
          "MovimentoContabil",
          "MovimentoContabil_Exclusao",
          "MovimentoFiscal_Entrada_Inclusao",
          "MovimentoFiscal_Entrada_Exclusao",
          "MovimentoFiscal_Entrada_Alteracao",
          "MovimentoFiscal_Entrada_ImportacaoXmlNfeNfce",
          "MovimentoFiscal_Saida_Inclusao",
          "MovimentoFiscal_Saida_Exclusao",
          "MovimentoFiscal_Saida_Alteracao",
          "MovimentoFiscal_Saida_ImportacaoXmlNfeNfce",
          "MovimentoFiscal_Saida_ImportacaoXmlCte",
          "MovimentoFiscal_Saida_ImportacaoXmlCfeSat",
          "MovimentoFiscal_ServicosPrestados_Inclusao",
          "MovimentoFiscal_ServicosPrestados_Exclusao",
          "MovimentoFiscal_ServicosPrestados_Alteracao",
          "MovimentoFiscal_ServicosPrestados_NfseXml",
          "MovimentoFiscal_ServicosTomados_Inclusao",
          "MovimentoFiscal_ServicosTomados_Exclusao",
          "MovimentoFiscal_ServicosTomados_Alteracao",
          "Naturezas_Inclusao",
          "Inventario_Inclusao",
          "ContasAReceber",
          "BaixasDeContasAReceber",
          "ContasAPagar",
          "BaixasDeContasAPagar",
          "Tesouraria",
          "AdiantamentosParaViagens",
          "MovimentosDeEstoque",
          "MovimentosDeEstoque_Entrada",
          "MovimentosDeEstoque_Saida",
          "MovimentosDeEstoque_EntradaDaProducao",
          "MovimentosDeEstoque_BaixaParaProducao",
          "PedidosDeVenda",
          "PedidosDeVenda_Liberacao",
          "NotasFiscais",
          "Orcamentos",
          "GerenciamentoContratosDeCompras",
          "OrdensDeCompras",
          "RegistroDeEntradas",
          "SolicitacaoDeCompra",
          "Producao_ApontamentosDaProducao",
          "Producao_ApontamentosDeOperacao",
          "Producao_FichasTecnicas",
          "Producao_OrdensDeProducao",
          "Producao_MetasDeProducao",
          "Producao_EnsaiosDeProduto_Insumos",
          "Manutencao_ApontamentosDeContadores",
          "RubricasProgramadas",
          "Afd",
          "MovimentosDoAssistec",
          "AssistecEquipamentos",
          "MovimentosDoAtendimentoTecnico",
          "ContratosDoGerenciador",
          "AcompanhamentoDeServicos"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dados.TipoPeriodo.TipoIncrementoTipoPeriodo": {
        "enum": [
          "Dias",
          "Mensal",
          "Anual"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.CaracteristicasDto": {
        "enum": [
          "CaracteristicaNula",
          "ICMS_STEstimativaDec392_11",
          "AliquotaDiferenciadaPIS_COFINS",
          "DispensarValorMinPCC",
          "DispensarValorMinIRRF",
          "ComercialExportada",
          "RamoAgropecuario",
          "OrgaoFomentoDesenvolvimentoAgropecuario",
          "EmpresaPublicaOrgaosAutarquiasFundacoes",
          "EmpresaPublicaOutrasEntidades",
          "ClienteSubstituto",
          "SimplesNacional",
          "MEI",
          "Grafica",
          "RetTributosFedProdutos",
          "BenefICMSDispensado",
          "EmpresaME_EPP",
          "TratDecreto10514ISS_RJ",
          "AdministradoraCartaoTicket",
          "IPISuspenso",
          "IsentoRetencaoISS",
          "Autorizada",
          "ContribuinteCPRB",
          "ProdutorRuralCPsemFolha"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadDetalhesDto": {
        "type": "object",
        "properties": {
          "idRepresentantes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "idVendedores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadEnderecoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoEnderecoDto"
          },
          "cep": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "nomeEndereco": {
            "maxLength": 84,
            "type": "string",
            "nullable": true
          },
          "semNumero": {
            "type": "boolean"
          },
          "numero": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "complemento": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "uf": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "codigoIBGE": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          },
          "telefones": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadTelefoneDto"
            },
            "nullable": true
          },
          "email": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "idTransportadora": {
            "type": "string",
            "description": "Campo <see cref=\"P:Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadEnderecoDto.IdTransportadora\">\"IdTransportadora\"</see> é desconsiderado para representantes e transportadoras.",
            "nullable": true
          },
          "idTransportadoraRedespacho": {
            "type": "string",
            "description": "Campo <see cref=\"P:Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadEnderecoDto.IdTransportadoraRedespacho\">\"IdTransportadoraRedespacho\"</see> é desconsiderado para representantes e transportadoras.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesCadastraisDto": {
        "type": "object",
        "properties": {
          "rg": {
            "maxLength": 15,
            "type": "string",
            "nullable": true
          },
          "orgaoEmissor": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "uf": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "tipoICMS": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoICMSDto"
          },
          "inscricaoEstadualProdutor": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "sexo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoSexoDto"
          },
          "estadoCivil": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoEstadoCivilDto"
          },
          "dataNascimento": {
            "type": "string",
            "format": "date"
          },
          "nomePai": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "nomeMae": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "naturalidade": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "nacionalidade": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoNacionalidadeDto"
          },
          "paisOrigem": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "numeroPIS": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesExtrasDto": {
        "type": "object",
        "properties": {
          "infExtra1": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "infExtra2": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "infExtra3": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "infExtra4": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "anotacoesGerais": {
            "maxLength": 4095,
            "type": "string",
            "nullable": true
          },
          "emailNFe": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInscricoesLegaisDto": {
        "type": "object",
        "properties": {
          "tipoICMS": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoICMSDto"
          },
          "inscricaoEstadual": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "categoriaFiscal": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoCategoriaFiscalDto"
          },
          "cnaePrincipal": {
            "maxLength": 7,
            "type": "string",
            "nullable": true
          },
          "inscricaoMunicipal": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "codigoAtividadeMunicipal": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "registroSuframa": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadTelefoneDto": {
        "type": "object",
        "properties": {
          "ddd": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoCategoriaFiscalDto": {
        "enum": [
          "CategoriaNula",
          "Armazenador",
          "ConsumidorFinal",
          "CentralPetroquimica",
          "Distribuidor",
          "Formulador",
          "Importador",
          "PostoVarejista",
          "Refinaria",
          "TransportadorRevendedorRetalhista",
          "Usina",
          "VarejistaGLP"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoDescontoDto": {
        "enum": [
          "Valor",
          "Percentual"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoEnderecoDto": {
        "enum": [
          "Padrao",
          "Faturamento",
          "Entrega",
          "Cobranca"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoEstadoCivilDto": {
        "enum": [
          "Solteiro",
          "Casado",
          "SeparadoJudicialmente",
          "Divorciado",
          "Convivente",
          "Viuvo"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoICMSDto": {
        "enum": [
          "Contribuinte",
          "Isento",
          "NaoContribuinte"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoNacionalidadeDto": {
        "enum": [
          "Brasileiro",
          "EstrangeiroComVisto",
          "EstrangeiroSemVisto"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaDto": {
        "enum": [
          "Fisica",
          "Juridica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaFiltroDto": {
        "enum": [
          "Todos",
          "Fisica",
          "Juridica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoSexoDto": {
        "enum": [
          "Feminino",
          "Masculino"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CadastroInfoPlus.ReadCadastroInfoPlusDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "processo": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.TipoProcessoDto"
          },
          "campos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CadastroInfoPlus.ReadCampoCadastroInfoPlusDto"
            },
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CadastroInfoPlus.ReadCampoCadastroInfoPlusDto": {
        "type": "object",
        "properties": {
          "ordem": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.TipoCampoDto"
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "obrigatorio": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CategoriaCFRT.GrupoCategoriaCFRTFiltroDto": {
        "enum": [
          "Todos",
          "Grupo1",
          "Grupo2",
          "Grupo3"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CategoriaCFRT.ReadCategoriaCFRTDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CategoriaCFRT.TipoCategoriaCFRTDto"
          },
          "descricao": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CategoriaCFRT.TipoCategoriaCFRTDto": {
        "enum": [
          "Invalido",
          "Grupo",
          "Analitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CategoriaProduto.GrupoCategoriaProdutoFiltroDto": {
        "enum": [
          "Todos",
          "Grupo1",
          "Grupo2",
          "Grupo3"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CategoriaProduto.ReadCategoriaProdutoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CategoriaProduto.TipoCategoriaProdutoDto"
          },
          "codigoProprio": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CategoriaProduto.TipoCategoriaProdutoDto": {
        "enum": [
          "Invalido",
          "Grupo",
          "Analitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Cliente.ReadClienteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "cpfCnpj": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "tipoPessoa": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaDto"
          },
          "classificacaoParalela": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "razaoSocial": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "nomeFantasia": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idEmpresaGrupo": {
            "type": "string",
            "nullable": true
          },
          "contato": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ativoInativoDesde": {
            "type": "string",
            "format": "date"
          },
          "vendaBloqueada": {
            "type": "boolean"
          },
          "caracteristicas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.CaracteristicasDto"
            },
            "nullable": true
          },
          "idCategoria1": {
            "type": "string",
            "nullable": true
          },
          "idCategoria2": {
            "type": "string",
            "nullable": true
          },
          "idCategoria3": {
            "type": "string",
            "nullable": true
          },
          "enderecos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadEnderecoDto"
            },
            "nullable": true
          },
          "inscricoesLegais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInscricoesLegaisDto"
          },
          "informacoesCadastrais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesCadastraisDto"
          },
          "detalhes": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadDetalhesDto"
          },
          "informacoesFinanceiras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Cliente.ReadClienteInformacoesFinanceirasDto"
          },
          "informacoesExtras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesExtrasDto"
          },
          "informacoesExtras2": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Cliente.ReadClienteInformacoesExtras2Dto"
          },
          "contatos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Contato.ReadContatoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Cliente.ReadClienteInformacoesExtras2Dto": {
        "type": "object",
        "properties": {
          "descontoComercial": {
            "type": "number",
            "format": "double"
          },
          "tipoDescontoComercial": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoDescontoDto"
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecoProduto": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecoServico": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Cliente.ReadClienteInformacoesFinanceirasDto": {
        "type": "object",
        "properties": {
          "clienteDesde": {
            "type": "string",
            "format": "date"
          },
          "limiteCredito": {
            "type": "number",
            "format": "double"
          },
          "descontoFinanceiro": {
            "type": "number",
            "format": "double"
          },
          "tipoDescontoFinanceiro": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoDescontoDto"
          },
          "desconto": {
            "type": "number",
            "format": "double"
          },
          "tipoDesconto": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoDescontoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Comprador.ReadCompradorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "apelido": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "registroAnonimizado": {
            "type": "boolean"
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CondicaoPagamento.ModuloCondicaoPagamentoDto": {
        "enum": [
          "ComercialECF",
          "Compras"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CondicaoPagamento.ReadCondicaoPagamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "modulos": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CondicaoPagamento.ModuloCondicaoPagamentoDto"
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "aVista": {
            "type": "boolean"
          },
          "comEntrada": {
            "type": "boolean"
          },
          "antecipada": {
            "type": "boolean"
          },
          "aplicarRegrasBloqueioFaturamento": {
            "type": "boolean"
          },
          "aplicarBloqueioFaturamentoAutomaticamente": {
            "type": "boolean"
          },
          "validade": {
            "type": "string",
            "format": "date"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CondicaoPagamento.ReadParcelaCondicaoPagamentoDto"
            },
            "nullable": true
          },
          "idTipoPeriodo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.CondicaoPagamento.ReadParcelaCondicaoPagamentoDto": {
        "type": "object",
        "properties": {
          "percentual": {
            "type": "number",
            "format": "double"
          },
          "prazo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "idTipoVencimento": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Contato.ReadContatoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "endereco": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "departamento": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "funcao": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "cep": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "numero": {
            "type": "integer",
            "format": "int64"
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "telefoneDDD": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "telefoneNumero": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "faxDDD": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "faxNumero": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "dataNascimento": {
            "type": "string",
            "format": "date"
          },
          "semNumero": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Departamento.ReadDepartamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Documento.ModuloDocumentoDto": {
        "enum": [
          "ComprasFiscal",
          "ComercialFiscal",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Documento.ReadDocumentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "modulos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Documento.ModuloDocumentoDto"
            },
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "especie": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "serie": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Documento.TipoSituacaoDocumentoDto": {
        "enum": [
          "Todos",
          "Ativos"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Estado.CreateEstadoAliquotaDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "icmsCompra": {
            "type": "number",
            "format": "double"
          },
          "icmsVenda": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Estado.CreateEstadoDto": {
        "required": [
          "mascaraInscricaoEstadual",
          "nome",
          "nomePais",
          "regiaoFiscal",
          "regiaoGeografica",
          "siglaUF"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "nomePais": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "siglaUF": {
            "maxLength": 2,
            "minLength": 1,
            "type": "string"
          },
          "exterior": {
            "type": "boolean"
          },
          "regiaoGeografica": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.RegiaoGeograficaEstadoDto"
          },
          "codigoSinief": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "codigoPais": {
            "maximum": 9999,
            "minimum": 0,
            "type": "integer",
            "format": "int32"
          },
          "mascaraInscricaoEstadual": {
            "maxLength": 30,
            "minLength": 1,
            "type": "string"
          },
          "regiaoFiscal": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.RegiaoFiscalEstadoDto"
          },
          "aliquotaSubstituicaoTributaria": {
            "type": "number",
            "format": "double"
          },
          "aliquotaInternaICMS": {
            "type": "number",
            "format": "double"
          },
          "convenioICMSSTDifal": {
            "type": "boolean"
          },
          "convenioICMSPartilhado": {
            "type": "boolean"
          },
          "calcularICMSPartilhadoConformeRegraEspecifica": {
            "type": "boolean"
          },
          "listaAliquotaEstado": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.CreateEstadoAliquotaDto"
            },
            "description": "Lista de alíquotas de ICMS por estado.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Estado.ReadEstadoAliquotaDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "icmsCompra": {
            "type": "number",
            "format": "double"
          },
          "icmsVenda": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Estado.ReadEstadoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "nomePais": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "siglaUF": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "exterior": {
            "type": "boolean"
          },
          "regiaoGeografica": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.RegiaoGeograficaEstadoDto"
          },
          "codigoSinief": {
            "type": "integer",
            "format": "int32"
          },
          "codigoPais": {
            "type": "integer",
            "format": "int32"
          },
          "mascaraInscricaoEstadual": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "regiaoFiscal": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.RegiaoFiscalEstadoDto"
          },
          "aliquotaSubstituicaoTributaria": {
            "type": "number",
            "format": "double"
          },
          "aliquotaInternaICMS": {
            "type": "number",
            "format": "double"
          },
          "convenioICMSSTDifal": {
            "type": "boolean"
          },
          "convenioICMSPartilhado": {
            "type": "boolean"
          },
          "calcularICMSPartilhadoConformeRegraEspecifica": {
            "type": "boolean"
          },
          "listaAliquotaEstado": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.ReadEstadoAliquotaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Estado.RegiaoFiscalEstadoDto": {
        "enum": [
          "Invalido",
          "Sul_Sudeste_MenosEspiritoSanto",
          "Norte_Nordeste_CentroOeste_MaisEspiritoSanto",
          "ZonaFrancaManaus_MaisExterior"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Estado.RegiaoGeograficaEstadoDto": {
        "enum": [
          "Invalido",
          "Sul",
          "Sudeste",
          "Norte",
          "Nordeste",
          "CentroOeste",
          "Exterior"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Estado.UpdateEstadoAliquotaDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "icmsCompra": {
            "type": "number",
            "format": "double"
          },
          "icmsVenda": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Estado.UpdateEstadoDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "nomePais": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "siglaUF": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "exterior": {
            "type": "boolean",
            "nullable": true
          },
          "regiaoGeografica": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.RegiaoGeograficaEstadoDto"
          },
          "codigoSinief": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "codigoPais": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "mascaraInscricaoEstadual": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "regiaoFiscal": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.RegiaoFiscalEstadoDto"
          },
          "aliquotaSubstituicaoTributaria": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "aliquotaInternaICMS": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "convenioICMSSTDifal": {
            "type": "boolean",
            "nullable": true
          },
          "convenioICMSPartilhado": {
            "type": "boolean",
            "nullable": true
          },
          "calcularICMSPartilhadoConformeRegraEspecifica": {
            "type": "boolean",
            "nullable": true
          },
          "listaAliquotaEstado": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Estado.UpdateEstadoAliquotaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Filial.ReadFilialDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 4,
            "type": "integer",
            "format": "int32"
          },
          "identificacao": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "razaoSocial": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "nomeFantasia": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "cpfCnpj": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Filial.TipoSituacaoDto"
          },
          "estabelecimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Filial.TipoEstabelecimentoDto"
          },
          "idMatriz": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "uf": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "endereco": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Filial.ReadFilialEnderecoDto"
          },
          "inscricaoEstadual": {
            "maxLength": 19,
            "type": "string",
            "nullable": true
          },
          "inscricaoMunicipal": {
            "maxLength": 19,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Filial.ReadFilialEnderecoDto": {
        "type": "object",
        "properties": {
          "endereco": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Filial.TipoEstabelecimentoDto": {
        "enum": [
          "Invalido",
          "Matriz",
          "Filial"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Filial.TipoSituacaoDto": {
        "enum": [
          "Invalido",
          "Ativa",
          "Inativa",
          "SemMovimento",
          "Abandonada",
          "Baixada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.FormaPagamento.MeioPagamentoFormaPagamentoDto": {
        "enum": [
          "Nenhum",
          "Dinheiro",
          "Cheque",
          "CartaoCredito",
          "CartaoDebito",
          "CreditoLoja",
          "ValeAlimentacao",
          "ValeRefeicao",
          "ValePresente",
          "ValeCombustivel",
          "DuplicataMercantil",
          "BoletoBancario",
          "DepositoBancario",
          "Pix",
          "TransferenciaBancaria",
          "Cashback",
          "SemPagamento",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.FormaPagamento.ReadFormaPagamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "inativa": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.FormaPagamento.TipoSituacaoFormaPagamentoFiltroDto": {
        "enum": [
          "Todos",
          "Ativos"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Fornecedor.ReadFornecedorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "cpfCnpj": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "tipoPessoa": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaDto"
          },
          "classificacaoParalela": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "razaoSocial": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "nomeFantasia": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idEmpresaGrupo": {
            "type": "string",
            "nullable": true
          },
          "contato": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ativoInativoDesde": {
            "type": "string",
            "format": "date"
          },
          "caracteristicas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.CaracteristicasDto"
            },
            "nullable": true
          },
          "idCategoria1": {
            "type": "string",
            "nullable": true
          },
          "idCategoria2": {
            "type": "string",
            "nullable": true
          },
          "idCategoria3": {
            "type": "string",
            "nullable": true
          },
          "enderecos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadEnderecoDto"
            },
            "nullable": true
          },
          "inscricoesLegais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInscricoesLegaisDto"
          },
          "informacoesCadastrais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesCadastraisDto"
          },
          "informacoesFinanceiras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Fornecedor.ReadFornecedorInformacoesFinanceirasDto"
          },
          "informacoesExtras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesExtrasDto"
          },
          "informacoesExtras2": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Fornecedor.ReadFornecedorInformacoesExtras2Dto"
          },
          "contatos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Contato.ReadContatoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Fornecedor.ReadFornecedorInformacoesExtras2Dto": {
        "type": "object",
        "properties": {
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecoProduto": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecoServico": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Fornecedor.ReadFornecedorInformacoesFinanceirasDto": {
        "type": "object",
        "properties": {
          "clienteDesde": {
            "type": "string",
            "format": "date"
          },
          "limiteCredito": {
            "type": "number",
            "format": "double"
          },
          "descontoFinanceiro": {
            "type": "number",
            "format": "double"
          },
          "tipoDescontoFinanceiro": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoDescontoDto"
          },
          "desconto": {
            "type": "number",
            "format": "double"
          },
          "tipoDesconto": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoDescontoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Grade.ReadGradeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.ItemGrade.ReadItemGradeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.GradeContabil.ProcessoGradeContabilDto": {
        "enum": [
          "Nenhum",
          "Financeiro_Tesouraria",
          "Financeiro_LancamentosContasReceber",
          "Financeiro_LancamentosContasPagar",
          "Financeiro_BaixasContasReceber",
          "Financeiro_BaixasContasPagar"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.GradeContabil.ReadGradeContabilDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 39,
            "type": "string",
            "nullable": true
          },
          "processo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.GradeContabil.ProcessoGradeContabilDto"
          },
          "contabilizacaoSintetica": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.GrupoNaturezaEFDReinf.ReadGrupoNaturezaEFDReinfDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 30000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.GrupoRecurso.ReadGrupoRecursoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Historico.CreateHistoricoDto": {
        "required": [
          "classificacao",
          "codigo",
          "descricao"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 5,
            "minLength": 1,
            "type": "string"
          },
          "classificacao": {
            "maxLength": 5,
            "minLength": 1,
            "type": "string"
          },
          "descricao": {
            "maxLength": 499,
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Historico.ReadHistoricoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 499,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Importacao.ReadImportacaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nomeArquivo": {
            "type": "string",
            "nullable": true
          },
          "tipoImportacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Importacao.TipoImportacaoDto"
          },
          "leiauteImportacao": {
            "type": "string",
            "nullable": true
          },
          "resultadoImportacao": {
            "type": "string",
            "nullable": true
          },
          "dataHoraInicio": {
            "type": "string",
            "format": "date-time"
          },
          "dataHoraFim": {
            "type": "string",
            "format": "date-time"
          },
          "statusImportacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dados.Importacao.StatusImportacao"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Importacao.TipoImportacaoDto": {
        "enum": [
          "Nenhum",
          "PlanoDeContas_Contabil",
          "PlanoDeContas_Gerencial",
          "Clientes",
          "Fornecedores",
          "Produtos",
          "Servicos",
          "Documentos",
          "TabelasDePreco",
          "Indices",
          "RequisicoesInternas",
          "Transportadoras",
          "Representantes",
          "MovimentoContabil",
          "MovimentoContabil_Exclusao",
          "MovimentoFiscal_Entrada_Inclusao",
          "MovimentoFiscal_Entrada_Exclusao",
          "MovimentoFiscal_Entrada_Alteracao",
          "MovimentoFiscal_Entrada_ImportacaoXmlNfeNfce",
          "MovimentoFiscal_Saida_Inclusao",
          "MovimentoFiscal_Saida_Exclusao",
          "MovimentoFiscal_Saida_Alteracao",
          "MovimentoFiscal_Saida_ImportacaoXmlNfeNfce",
          "MovimentoFiscal_Saida_ImportacaoXmlCte",
          "MovimentoFiscal_Saida_ImportacaoXmlCfeSat",
          "MovimentoFiscal_ServicosPrestados_Inclusao",
          "MovimentoFiscal_ServicosPrestados_Exclusao",
          "MovimentoFiscal_ServicosPrestados_Alteracao",
          "MovimentoFiscal_ServicosPrestados_NfseXml",
          "MovimentoFiscal_ServicosTomados_Inclusao",
          "MovimentoFiscal_ServicosTomados_Exclusao",
          "MovimentoFiscal_ServicosTomados_Alteracao",
          "Naturezas_Inclusao",
          "Inventario_Inclusao",
          "ContasAReceber",
          "BaixasDeContasAReceber",
          "ContasAPagar",
          "BaixasDeContasAPagar",
          "Tesouraria",
          "AdiantamentosParaViagens",
          "MovimentosDeEstoque",
          "MovimentosDeEstoque_Entrada",
          "MovimentosDeEstoque_Saida",
          "MovimentosDeEstoque_EntradaDaProducao",
          "MovimentosDeEstoque_BaixaParaProducao",
          "PedidosDeVenda",
          "PedidosDeVenda_Liberacao",
          "NotasFiscais",
          "Orcamentos",
          "GerenciamentoContratosDeCompras",
          "OrdensDeCompras",
          "RegistroDeEntradas",
          "SolicitacaoDeCompra",
          "Producao_ApontamentosDaProducao",
          "Producao_ApontamentosDeOperacao",
          "Producao_FichasTecnicas",
          "Producao_OrdensDeProducao",
          "Producao_MetasDeProducao",
          "Producao_EnsaiosDeProduto_Insumos",
          "Manutencao_ApontamentosDeContadores",
          "RubricasProgramadas",
          "Afd",
          "MovimentosDoAssistec",
          "AssistecEquipamentos",
          "MovimentosDoAtendimentoTecnico",
          "ContratosDoGerenciador",
          "AcompanhamentoDeServicos"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.CreateIndiceDto": {
        "required": [
          "dataInicial",
          "formato",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "dataInicial": {
            "type": "string",
            "format": "date"
          },
          "formato": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceFormatoDto"
          },
          "tipoIncremento": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceTipoIncrementoDto"
          },
          "inativo": {
            "type": "boolean"
          },
          "simbolo": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "valores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.CreateValorIndiceDto"
            },
            "description": "Lista de valores do índice.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.CreateValorIndiceDto": {
        "required": [
          "data",
          "valor"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceFormatoDto": {
        "enum": [
          "Invalido",
          "Valor",
          "Percentual"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceFormatoFiltroDto": {
        "enum": [
          "Todos",
          "Valor",
          "Percentual"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceTipoIncrementoDto": {
        "enum": [
          "Invalido",
          "Diario",
          "Mensal"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.ReadIndiceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "dataInicial": {
            "type": "string",
            "format": "date"
          },
          "dataFinal": {
            "type": "string",
            "format": "date"
          },
          "formato": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceFormatoDto"
          },
          "tipoIncremento": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceTipoIncrementoDto"
          },
          "inativo": {
            "type": "boolean"
          },
          "simbolo": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "valores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.ReadValorIndiceDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.ReadValorIndiceDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.UpdateIndiceDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "formato": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.IndiceFormatoDto"
          },
          "inativo": {
            "type": "boolean",
            "nullable": true
          },
          "simbolo": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "valores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Indice.UpdateValorIndiceDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Indice.UpdateValorIndiceDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancaria.ReadInformacaoBancariaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "idCFRT": {
            "type": "string",
            "nullable": true
          },
          "idPortador": {
            "type": "string",
            "nullable": true
          },
          "agencia": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "digitoAgencia": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "contaBancaria": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "digitoContaBancaria": {
            "maxLength": 4,
            "type": "string",
            "nullable": true
          },
          "tipoConta": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancaria.TipoContaBancariaDto"
          },
          "cpfcnpj": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "codigoDebitoAutomatico": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "contaPadrao": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancaria.TipoContaBancariaDto": {
        "enum": [
          "Nenhum",
          "Corrente",
          "Pagamento",
          "Poupanca"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancariaPix.ReadInformacaoBancariaPixDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "idCFRT": {
            "type": "string",
            "nullable": true
          },
          "tipoChaveEnderecamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancariaPix.TipoChaveEnderecamentoDto"
          },
          "chaveEnderecamento": {
            "maxLength": 77,
            "type": "string",
            "nullable": true
          },
          "contaPadrao": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.InformacaoBancariaPix.TipoChaveEnderecamentoDto": {
        "enum": [
          "Nenhum",
          "Telefone",
          "Email",
          "CPFCNPJ",
          "ChaveAleatoria"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.InformacaoComplementar.GrupoInformacaoComplementarFiltroDto": {
        "enum": [
          "Todos",
          "Grupo1",
          "Grupo2",
          "Grupo3"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.InformacaoComplementar.ReadInformacaoComplementarDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.InformacaoComplementar.TipoInformacaoComplementarDto"
          },
          "descricao": {
            "maxLength": 100,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.InformacaoComplementar.TipoInformacaoComplementarDto": {
        "enum": [
          "Grupo",
          "Analitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.ItemGrade.ReadItemGradeDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.ItemGrade.ReadItemGradeProdutoDto": {
        "type": "object",
        "properties": {
          "idProduto": {
            "type": "string",
            "nullable": true
          },
          "itensGradeProduto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.ItemGrade.ReadItemGradeDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Mensagem.CreateMensagemDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "texto": {
            "maxLength": 1500,
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "modulo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.ModuloMensagemDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Mensagem.ModuloMensagemDto": {
        "enum": [
          "Nenhum",
          "Empresarial",
          "Financeiro",
          "Comercial",
          "MtFiscal",
          "Gerenciador",
          "Ponto",
          "Folha",
          "Producao",
          "NFCe"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Mensagem.ReadMensagemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "texto": {
            "maxLength": 1500,
            "type": "string",
            "nullable": true
          },
          "modulo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.ModuloMensagemDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Mensagem.UpdateMensagemDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "texto": {
            "maxLength": 1500,
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "modulo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Mensagem.ModuloMensagemDto"
          },
          "inativo": {
            "type": "boolean",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Motorista.ReadMotoristaCnhDto": {
        "type": "object",
        "properties": {
          "habilitacao": {
            "type": "string",
            "nullable": true
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataPrimeiraHabilitacao": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Motorista.ReadMotoristaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "dddTelefone": {
            "type": "string",
            "nullable": true
          },
          "telefone": {
            "type": "string",
            "nullable": true
          },
          "idVeiculo": {
            "type": "string",
            "nullable": true
          },
          "rg": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Motorista.ReadMotoristaRgDto"
          },
          "cnh": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Motorista.ReadMotoristaCnhDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Motorista.ReadMotoristaRgDto": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "string",
            "nullable": true
          },
          "dataExpedicao": {
            "type": "string",
            "format": "date"
          },
          "orgaoEmissor": {
            "type": "string",
            "nullable": true
          },
          "idUfEmissor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Municipio.CreateMunicipioDto": {
        "required": [
          "cep",
          "codigoMunicipio",
          "idEstado",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string"
          },
          "codigoIBGE": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "cep": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "aliquotaISS": {
            "maximum": 100,
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "codigoMunicipio": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "codigoEstadual": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "idEstado": {
            "minLength": 1,
            "type": "string"
          },
          "codigoFederal": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Municipio.ReadMunicipioDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "codigoIBGE": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "cep": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "aliquotaISS": {
            "type": "number",
            "format": "double"
          },
          "codigoMunicipio": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "codigoEstadual": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "idEstado": {
            "type": "string",
            "nullable": true
          },
          "codigoFederal": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Municipio.UpdateMunicipioDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "codigoIBGE": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32",
            "nullable": true
          },
          "cep": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32",
            "nullable": true
          },
          "aliquotaISS": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "codigoMunicipio": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32",
            "nullable": true
          },
          "codigoEstadual": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32",
            "nullable": true
          },
          "idEstado": {
            "type": "string",
            "nullable": true
          },
          "codigoFederal": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.NaturezaEFDReinf.ReadNaturezaEFDReinfDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 30000,
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.NaturezaOperacao.ModuloNaturezaOperacaoDto": {
        "enum": [
          "Compras",
          "Comercial",
          "EscritaFiscal"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.NaturezaOperacao.ReadNaturezaOperacaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "modulos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.NaturezaOperacao.ModuloNaturezaOperacaoDto"
            },
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "descricaoLegal": {
            "maxLength": 310,
            "type": "string",
            "nullable": true
          },
          "cfop": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "tipoNf": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoNfDto"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "disponivelRadarWeb": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          },
          "classeProduto": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoClasseProdutoDto"
          },
          "operacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialTipoOperacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialTipoOperacaoClienteDto": {
        "type": "object",
        "properties": {
          "pessoa": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoPessoaDto"
          },
          "alcanceOperacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoAlcanceOperacaoDto"
          },
          "destinoOperacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoDestinoOperacaoDto"
          },
          "contribuinteIcms": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoContribuinteIcmsDto"
          },
          "optanteSimplesNacional": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoOptanteSimplesNacionalDto"
          },
          "beneficioSuframa": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoBeneficioSuframaDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialTipoOperacaoDto": {
        "type": "object",
        "properties": {
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "cliente": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialTipoOperacaoClienteDto"
          },
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialTipoOperacaoProdutoDto"
          },
          "resultado": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialTipoOperacaoResultadoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialTipoOperacaoProdutoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoProdutoDto"
          },
          "substituicaoTributaria": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoSubstituicaoTributariaDto"
          },
          "origemFiscal": {
            "type": "string",
            "nullable": true
          },
          "classe": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.ReadOperacaoComercialTipoOperacaoResultadoDto": {
        "type": "object",
        "properties": {
          "idNaturezaOperacao": {
            "type": "string",
            "nullable": true
          },
          "idMensagem": {
            "type": "string",
            "nullable": true
          },
          "cstIcms": {
            "type": "string",
            "nullable": true
          },
          "cstIpi": {
            "type": "string",
            "nullable": true
          },
          "possuiAliquotaIcms": {
            "type": "boolean"
          },
          "aliquotaIcms": {
            "type": "number",
            "format": "double"
          },
          "possuiReducaoBaseCalculoIcms": {
            "type": "boolean"
          },
          "reducaoBaseCalculoIcms": {
            "type": "number",
            "format": "double"
          },
          "possuiAliquotaIcmsSt": {
            "type": "boolean"
          },
          "aliquotaIcmsSt": {
            "type": "number",
            "format": "double"
          },
          "possuiAcrescimoIcmsSt": {
            "type": "boolean"
          },
          "acrescimoIcmsSt": {
            "type": "number",
            "format": "double"
          },
          "cstPis": {
            "type": "string",
            "nullable": true
          },
          "fatorIncidenciaPisEmPercentual": {
            "type": "boolean"
          },
          "fatorIncidenciaPis": {
            "type": "number",
            "format": "double"
          },
          "cstCofins": {
            "type": "string",
            "nullable": true
          },
          "fatorIncidenciaCofinsEmPercentual": {
            "type": "boolean"
          },
          "fatorIncidenciaCofins": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoAlcanceOperacaoDto": {
        "enum": [
          "Estadual",
          "Interestadual",
          "Exterior"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoAlcanceOperacaoFiltroDto": {
        "enum": [
          "Todos",
          "Estadual",
          "Interestadual",
          "Exterior"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoBeneficioSuframaDto": {
        "enum": [
          "Todos",
          "IcmsEIpi",
          "SomenteIcms",
          "SomenteIPI",
          "Nao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoClasseProdutoDto": {
        "enum": [
          "Todos",
          "Classificacao",
          "InfoExtra1",
          "InfoExtra2",
          "InfoExtra3"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoClasseProdutoFiltroDto": {
        "enum": [
          "Todos",
          "Classificacao",
          "InfoExtra1",
          "InfoExtra2",
          "InfoExtra3"
        ],
        "type": "string",
        "description": "Este campo funciona em conjunto com o campo Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.OperacaoComercialFiltroTipoOperacaoProdutoDto.Classe."
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoContribuinteIcmsDto": {
        "enum": [
          "Todos",
          "Contribuinte",
          "NaoContribuinte",
          "Isento"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoDestinoOperacaoDto": {
        "enum": [
          "Todos",
          "RevendedorOuIndustrializador",
          "ConsumidorFinal"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoNfDto": {
        "enum": [
          "Entrada",
          "Saida"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoNfFiltroDto": {
        "enum": [
          "Todos",
          "Entrada",
          "Saida"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoOptanteSimplesNacionalDto": {
        "enum": [
          "Todos",
          "Sim",
          "Nao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoPessoaDto": {
        "enum": [
          "Fisica",
          "Juridica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoPessoaFiltroDto": {
        "enum": [
          "Todos",
          "Fisica",
          "Juridica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoProdutoDto": {
        "enum": [
          "Todos",
          "Proprio",
          "Terceiros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.OperacaoComercial.TipoSubstituicaoTributariaDto": {
        "enum": [
          "Todos",
          "Sim",
          "Nao",
          "IcmsRetidoAnteriormente"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Pessoa.CreatePessoaDto": {
        "required": [
          "apelido",
          "modulos",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 42,
            "minLength": 1,
            "type": "string"
          },
          "apelido": {
            "maxLength": 64,
            "minLength": 1,
            "type": "string"
          },
          "email": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "modulos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Pessoa.PessoaModuloDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Pessoa.PessoaModuloDto": {
        "enum": [
          "Nenhum",
          "Gerenciador"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Pessoa.ReadPessoaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 42,
            "type": "string",
            "nullable": true
          },
          "apelido": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "modulos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Pessoa.PessoaModuloDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.CaracteristicasPlanoContabilDto": {
        "enum": [
          "Caixa",
          "Banco",
          "Cliente",
          "Fornecedor",
          "Representante",
          "Transportadora",
          "Sacado",
          "Cedente",
          "EntradaDeRecursos",
          "SaidaDeRecursos",
          "Tesouraria",
          "Patrimonio",
          "CustoDespesa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.CaracteristicasPlanoContabilFiltroDto": {
        "enum": [
          "Caixa",
          "Banco",
          "Cliente",
          "Fornecedor",
          "Representante",
          "Transportadora",
          "Sacado",
          "Cedente",
          "EntradaDeRecursos",
          "SaidaDeRecursos",
          "Tesouraria",
          "Patrimonio",
          "CustoDespesa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.ReadPlanoContabilDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.TipoPlanoContabilDto"
          },
          "classificacao": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "caracteristicas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.CaracteristicasPlanoContabilDto"
            },
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.TipoPlanoContabilDto": {
        "enum": [
          "Titulo",
          "Analitica",
          "Subanalitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.PlanoContabil.TipoPlanoContabilFiltroDto": {
        "enum": [
          "Todos",
          "Titulo",
          "Analitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.PlanoGerencial.ReadPlanoGerencialDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.PlanoGerencial.TipoPlanoGerencialDto"
          },
          "classificacao": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.PlanoGerencial.TipoPlanoGerencialDto": {
        "enum": [
          "Titulo",
          "Analitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.PlanoGerencial.TipoPlanoGerencialFiltroDto": {
        "enum": [
          "Todos",
          "Titulo",
          "Analitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Portador.ReadPortadorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "razaoSocial": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "nomeFantasia": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "codigoISPB": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ocorrencias": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Portador.ReadPortadorOcorrenciaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Portador.ReadPortadorOcorrenciaDto": {
        "type": "object",
        "properties": {
          "codigo": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoComplementoDto": {
        "type": "object",
        "properties": {
          "casasDecimaisValorUnitarioCompras": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.CasasDecimaisProdutoServicoDto"
          },
          "casasDecimaisValorUnitarioEstoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.CasasDecimaisProdutoServicoDto"
          },
          "possuiArmaDeFogo": {
            "type": "boolean"
          },
          "tipoArmaDeFogo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoArmaDeFogoProdutoDto"
          },
          "possuiGTIN": {
            "type": "boolean"
          },
          "gtin": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "possuiGTINTributavel": {
            "type": "boolean"
          },
          "gtinTributavel": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoDimensoesDto": {
        "type": "object",
        "properties": {
          "largura": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaLargura": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoComprimentoDto"
          },
          "altura": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaAltura": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoComprimentoDto"
          },
          "comprimento": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaComprimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoComprimentoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1500,
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idGrade1": {
            "type": "string",
            "nullable": true
          },
          "idGrade2": {
            "type": "string",
            "nullable": true
          },
          "idGrade3": {
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "referencia": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoProdutoDto"
          },
          "tipoEmbalagem": {
            "type": "boolean"
          },
          "precoVenda": {
            "type": "number",
            "format": "double"
          },
          "casasDecimaisPrecoVenda": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.CasasDecimaisProdutoServicoDto"
          },
          "descontoSugerido": {
            "type": "number",
            "format": "double"
          },
          "prazoValidade": {
            "type": "integer",
            "format": "int64"
          },
          "idEmbalagem": {
            "type": "string",
            "nullable": true
          },
          "numeroProdutosPorEmbalagem": {
            "type": "number",
            "format": "double"
          },
          "quantidadeEmbalagensPorPalete": {
            "type": "integer",
            "format": "int64"
          },
          "idUnidadeLogistica": {
            "type": "string",
            "nullable": true
          },
          "tara": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaTara": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoMassaDto"
          },
          "capacidadeVolumetrica": {
            "type": "integer",
            "format": "int64"
          },
          "pesoBruto": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaPesoBruto": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoMassaDto"
          },
          "pesoLiquido": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaPesoLiquido": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoMassaDto"
          },
          "prazoGarantia": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaPrazoGarantia": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoPeriodoProdutoDto"
          },
          "inativo": {
            "type": "boolean"
          },
          "gradesInformacoesExtras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoGradesInformacoesExtrasDto"
          },
          "referenciasGrade": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoReferenciaGradeDto"
            },
            "nullable": true
          },
          "complemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoComplementoDto"
          },
          "ipi": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoIPIDto"
          },
          "embalagem": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoEmbalagemDto"
          },
          "kit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoKitDto"
            },
            "nullable": true
          },
          "informacoesFiscais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoInformacoesFiscaisDto"
          },
          "dimensoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoDimensoesDto"
          },
          "informacoesExtrasPorFiliais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoInformacoesExtrasFilialDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoEmbalagemDto": {
        "type": "object",
        "properties": {
          "largura": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaLargura": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoComprimentoDto"
          },
          "altura": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaAltura": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoComprimentoDto"
          },
          "comprimento": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaComprimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoComprimentoDto"
          },
          "volume": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaVolume": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoVolumeDto"
          },
          "tara": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaTara": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoMassaDto"
          },
          "pesoMaximo": {
            "type": "number",
            "format": "double"
          },
          "unidadeMedidaPesoMaximo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoMassaDto"
          },
          "percentualMaximoOcupacao": {
            "type": "number",
            "format": "double"
          },
          "quantidadeMaximaEmpilhamento": {
            "type": "integer",
            "format": "int32"
          },
          "material": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoGradesInformacoesExtrasDto": {
        "type": "object",
        "properties": {
          "informacoesExtra1": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "informacoesExtra2": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "informacoesExtra3": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoIPIDto": {
        "type": "object",
        "properties": {
          "classificacaoFiscalNCM": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoInformacoesExtrasFilialDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "description": "Id da Filial de Informações Extras Por Filial. Caso o valor retorne 0, significa que este registro é para todas as filiais.",
            "nullable": true
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoProducaoProdutoDto"
          },
          "idCategoria1": {
            "type": "string",
            "nullable": true
          },
          "idCategoria2": {
            "type": "string",
            "nullable": true
          },
          "idCategoria3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoInformacoesFiscaisDto": {
        "type": "object",
        "properties": {
          "cest": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoItemKitDto": {
        "type": "object",
        "properties": {
          "idProduto": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade1": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade2": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade3": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "idLocalOrigem": {
            "type": "string",
            "nullable": true
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoProducaoProdutoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoKitDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade1": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade2": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade3": {
            "type": "string",
            "nullable": true
          },
          "permiteAlterarComposicao": {
            "type": "boolean"
          },
          "itemKit": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoItemKitDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.ReadProdutoReferenciaGradeDto": {
        "type": "object",
        "properties": {
          "idItemGrade1": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade2": {
            "type": "string",
            "nullable": true
          },
          "idItemGrade3": {
            "type": "string",
            "nullable": true
          },
          "referencia": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoArmaDeFogoProdutoDto": {
        "enum": [
          "Nenhum",
          "UsoPermitido",
          "UsoRestrito"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoComprimentoDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "cm",
          "dm",
          "m",
          "mm",
          "pol"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoMassaDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "kg",
          "dg",
          "cg",
          "mg",
          "g",
          "lb",
          "t"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoPeriodoProdutoDto": {
        "enum": [
          "Nenhum",
          "Anos",
          "Meses",
          "Semanas",
          "Dias",
          "Horas"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoProducaoProdutoDto": {
        "enum": [
          "Nenhum",
          "Externa",
          "Interna"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoProdutoDto": {
        "enum": [
          "Invalido",
          "Classe",
          "Proprio",
          "Terceiros",
          "Kit"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoProdutoFiltroDto": {
        "enum": [
          "Proprios",
          "Terceiros",
          "Kits",
          "Embalagens"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Produto.TipoVolumeDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "cl",
          "cm3",
          "dl",
          "dm3",
          "l",
          "m3",
          "ml",
          "mm3",
          "pol3"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Recurso.ReadRecursoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "idTipoRecurso": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idContaClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "detalhe": {
            "maxLength": 512,
            "type": "string",
            "nullable": true
          },
          "contadorAtual": {
            "type": "number",
            "format": "double"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteDetalhesDto": {
        "type": "object",
        "properties": {
          "percentualFaturamento": {
            "type": "number",
            "format": "double"
          },
          "percentualVencimento": {
            "type": "number",
            "format": "double"
          },
          "percentualIrrf": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "cpfCnpj": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "tipoPessoa": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaDto"
          },
          "classificacao": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "classificacaoParalela": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "razaoSocial": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "nomeFantasia": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idEmpresaGrupo": {
            "type": "string",
            "nullable": true
          },
          "contato": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ativoInativoDesde": {
            "type": "string",
            "format": "date"
          },
          "caracteristicas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.CaracteristicasDto"
            },
            "nullable": true
          },
          "idCategoria1": {
            "type": "string",
            "nullable": true
          },
          "idCategoria2": {
            "type": "string",
            "nullable": true
          },
          "idCategoria3": {
            "type": "string",
            "nullable": true
          },
          "enderecos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadEnderecoDto"
            },
            "nullable": true
          },
          "inscricoesLegais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInscricoesLegaisDto"
          },
          "informacoesCadastrais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesCadastraisDto"
          },
          "detalhes": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteDetalhesDto"
          },
          "informacoesFinanceiras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteInformacoesFinanceirasDto"
          },
          "informacoesExtras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesExtrasDto"
          },
          "informacoesExtras2": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteInformacoesExtras2Dto"
          },
          "contatos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Contato.ReadContatoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteInformacoesExtras2Dto": {
        "type": "object",
        "properties": {
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecoProduto": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecoServico": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Representante.ReadRepresentanteInformacoesFinanceirasDto": {
        "type": "object",
        "properties": {
          "descontoFinanceiro": {
            "type": "number",
            "format": "double"
          },
          "tipoDescontoFinanceiro": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoDescontoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Requisitante.ReadRequisitanteDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 49,
            "type": "string",
            "nullable": true
          },
          "apelido": {
            "maxLength": 19,
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "matricula": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Servico.ReadServicoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Servico.ServicoTipoDto"
          },
          "classificacao": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "precoVenda": {
            "type": "number",
            "format": "double"
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 250,
            "type": "string",
            "nullable": true
          },
          "casasDecimaisPrecoVenda": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.CasasDecimaisProdutoServicoDto"
          },
          "casasDecimaisValorUnitarioCompras": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.CasasDecimaisProdutoServicoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Servico.ServicoTipoDto": {
        "enum": [
          "Invalido",
          "Classe",
          "ServicoProprio",
          "ServicoTerceiro"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TabelaPrecoVendaProduto.ReadTabelaPrecoVendaProdutoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TabelaPrecoVendaServico.ReadTabelaPrecoVendaServicoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TipoCobranca.ModalidadeCobrancaTipoCobrancaDto": {
        "enum": [
          "Nenhum",
          "Simples",
          "Vinculada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TipoCobranca.ReadTipoCobrancaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "modalidadeCobranca": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoCobranca.ModalidadeCobrancaTipoCobrancaDto"
          },
          "baixarContasReceberSemMovimentarTesouraria": {
            "type": "boolean"
          },
          "desconsideraTitulosContasReceberFluxoCaixa": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TipoPeriodo.ModuloTipoPeriodoDto": {
        "enum": [
          "Empresarial",
          "Manutencao",
          "Producao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TipoPeriodo.ReadTipoPeriodoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "intervalo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "periodo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dados.TipoPeriodo.TipoIncrementoTipoPeriodo"
          },
          "modulos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoPeriodo.ModuloTipoPeriodoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TipoRecolhimento.ReadTipoRecolhimentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 51,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TipoRecurso.ReadTipoRecursoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.TipoRecurso.TipoTipoRecursoDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TipoRecurso.TipoTipoRecursoDto": {
        "enum": [
          "Pessoa",
          "Maquina",
          "Ferramenta",
          "Grupo"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.TipoVencimento.ReadVencimentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Transportadora.ReadTransportadoraDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "cpfCnpj": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "tipoPessoa": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoPessoaDto"
          },
          "classificacao": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "classificacaoParalela": {
            "maxLength": 28,
            "type": "string",
            "nullable": true
          },
          "razaoSocial": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "nomeFantasia": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idEmpresaGrupo": {
            "type": "string",
            "nullable": true
          },
          "contato": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "homepage": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ativoInativoDesde": {
            "type": "string",
            "format": "date"
          },
          "vendaBloqueada": {
            "type": "boolean"
          },
          "caracteristicas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.CaracteristicasDto"
            },
            "nullable": true
          },
          "idCategoria1": {
            "type": "string",
            "nullable": true
          },
          "idCategoria2": {
            "type": "string",
            "nullable": true
          },
          "idCategoria3": {
            "type": "string",
            "nullable": true
          },
          "enderecos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadEnderecoDto"
            },
            "nullable": true
          },
          "inscricoesLegais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInscricoesLegaisDto"
          },
          "informacoesCadastrais": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesCadastraisDto"
          },
          "informacoesFinanceiras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Transportadora.ReadTransportadoraInformacoesFinanceirasDto"
          },
          "informacoesExtras": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.ReadInformacoesExtrasDto"
          },
          "informacoesExtras2": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Transportadora.ReadTransportadoraInformacoesExtras2Dto"
          },
          "contatos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Contato.ReadContatoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Transportadora.ReadTransportadoraInformacoesExtras2Dto": {
        "type": "object",
        "properties": {
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecoProduto": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecoServico": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Transportadora.ReadTransportadoraInformacoesFinanceirasDto": {
        "type": "object",
        "properties": {
          "clienteDesde": {
            "type": "string",
            "format": "date"
          },
          "limiteCredito": {
            "type": "number",
            "format": "double"
          },
          "descontoFinanceiro": {
            "type": "number",
            "format": "double"
          },
          "tipoDescontoFinanceiro": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.CFRT.TipoDescontoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.UnidadeLogistica.ReadItemUnidadeLogisticaDto": {
        "type": "object",
        "properties": {
          "indicadorUnidadeLogistica": {
            "type": "integer",
            "format": "int32"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "idEmbalagem": {
            "type": "string",
            "nullable": true
          },
          "compra": {
            "type": "boolean"
          },
          "venda": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.UnidadeLogistica.ReadUnidadeLogisticaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeLogistica.ReadItemUnidadeLogisticaDto"
            },
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.ReadUnidadeMedidaProdutoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "abreviatura": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "codigoIN359": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "grandeza": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.UnidadeMedidaProdutoGrandezaDto"
          },
          "unidade": {
            "minimum": 0,
            "type": "integer",
            "description": "Comprimento:`Invalido = 0`,`Nenhum = 1`,`cm = 2`,`dm = 3`,`m = 4`,`mm = 5`,`pol = 6`\r\n\r\nMassa:`Invalido = 0`,`Nenhum = 1`,`cg = 2`,`dg = 3`,`g = 4`,`kg = 5`,`lb = 6`,`mg = 7`,`t = 8`\r\n\r\nTempo:`Invalido = 0`,`Nenhum = 1`,`h = 2`,`min = 3`,`s = 4`\r\n\r\nVolume:`Invalido = 0`,`Nenhum = 1`,`cl = 2`,`cm³ = 3`,`dl = 4`,`dm³ = 5`,`l = 6`,`m³ = 7`,`ml = 8`,`mm³ = 9`,`pol³ = 10`",
            "format": "uint32"
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.UnidadeMedidaTipoDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.ReadUnidadeMedidaServicoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "abreviatura": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.UnidadeMedidaTipoDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.UnidadeMedidaProdutoGrandezaDto": {
        "enum": [
          "Invalido",
          "Nenhum",
          "Comprimento",
          "Massa",
          "Tempo",
          "Volume"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.UnidadeMedida.UnidadeMedidaTipoDto": {
        "enum": [
          "Invalido",
          "ApenasValoresInteiros",
          "ValoresInteirosEFracionariosCom2CasasDecimais",
          "ValoresInteirosEFracionariosCom4CasasDecimais"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Usuario.Enums.FiltroSupervisorDto": {
        "enum": [
          "Todos",
          "NaoSupervisor",
          "Supervisor"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Usuario.ReadUsuarioDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 39,
            "type": "string",
            "nullable": true
          },
          "apelido": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 63,
            "type": "string",
            "nullable": true
          },
          "supervisor": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Veiculo.ReadVeiculoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "tara": {
            "type": "number",
            "format": "double"
          },
          "capacidadeQuilograma": {
            "type": "number",
            "format": "double"
          },
          "capacidadeMetroCubico": {
            "type": "number",
            "format": "double"
          },
          "valorValePedagio": {
            "type": "number",
            "format": "double"
          },
          "ano": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "idTransportadorProprietario": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "codigoANTT": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 12,
            "type": "string",
            "nullable": true
          },
          "renavam": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "placa": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "uf": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "cnpjFornecedor": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "cnpjResponsavel": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "numeroComprovanteCompra": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "tipoCarroceria": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoCarroceriaVeiculoDto"
          },
          "tipoRodado": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoRodadoVeiculoDto"
          },
          "tipoVeiculo": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoVeiculoDto"
          },
          "tipoTransporte": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoTransporteVeiculoDto"
          },
          "tipoValePedagio": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoValorPedagioVeiculoDto"
          },
          "categoriaCombinacaoVeicular": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoCategoriaCombinacaoVeiculoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoCarroceriaVeiculoDto": {
        "enum": [
          "NaoAplicavel",
          "Aberta",
          "FechadaBau",
          "Graneleira",
          "PortaContainer",
          "Sider"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoCategoriaCombinacaoVeiculoDto": {
        "enum": [
          "Nenhum",
          "Eixos2",
          "Eixos3",
          "Eixos4",
          "Eixos5",
          "Eixos6",
          "Eixos7",
          "Eixos8",
          "Eixos9",
          "Eixos10",
          "AcimaDezEixos"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoRodadoVeiculoDto": {
        "enum": [
          "Truck",
          "Toco",
          "CavaloMecanico",
          "Van",
          "Utilitario",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoTransporteVeiculoDto": {
        "enum": [
          "Proprio",
          "Terceiro"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoValorPedagioVeiculoDto": {
        "enum": [
          "Nenhum",
          "Tag",
          "Cupom",
          "Cartao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Veiculo.TipoVeiculoDto": {
        "enum": [
          "Tracao",
          "Reboque"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Vendedor.IndicePagamentoComissaoDto": {
        "enum": [
          "Todos",
          "Semana",
          "Mensal"
        ],
        "type": "string"
      },
      "Radar.API.Model.Empresarial.Dtos.V1.Vendedor.ReadVendedorDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "valorFixo": {
            "type": "number",
            "format": "double"
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "percentualComissaoFaturamento": {
            "type": "number",
            "format": "double"
          },
          "percentualComissaoRecebimento": {
            "type": "number",
            "format": "double"
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "fone1": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "fone2": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "dddFone1": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "dddFone2": {
            "maxLength": 5,
            "type": "string",
            "nullable": true
          },
          "pagamentoComissao": {
            "$ref": "#/components/schemas/Radar.API.Model.Empresarial.Dtos.V1.Vendedor.IndicePagamentoComissaoDto"
          },
          "pagamentoComissaoDiaSemana": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "listaPagamentoComissaoDiasMes": {
            "type": "array",
            "items": {
              "minimum": 0,
              "type": "integer",
              "format": "uint32"
            },
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.ReadLocalArmazenagemDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.TipoLocalArmazenagemDto"
          },
          "tipoEstocagem": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.TipoEstocagemDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.TipoEstocagemDto": {
        "enum": [
          "Nenhum",
          "ConsumoProprio",
          "Expedicao",
          "EstoqueEmPoderDeTerceiros",
          "EstoqueDeTerceirosEmPoderDaEmpresa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Estoque.Dtos.V1.LocalArmazenagem.TipoLocalArmazenagemDto": {
        "enum": [
          "Armazenagem",
          "Estocagem"
        ],
        "type": "string"
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateLoteMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoProducaoLoteEstoqueDto"
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dataValidade": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "numero": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "idFornecedor": {
            "type": "string",
            "nullable": true
          },
          "numeroDias": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateLoteMovimentoEstoqueEntradaDto": {
        "type": "object",
        "properties": {
          "dataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          },
          "numero": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "numeroDias": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueAjusteAutomaticoInventarioDto": {
        "required": [
          "idContaEstoque",
          "idFilial",
          "idLocalOrigem",
          "item",
          "quantidade"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "dataMovimento": {
            "type": "string",
            "description": "A data e a hora do movimento não podem ser maior que a do servidor. Se não informada, será utilizado a data e hora atual do servidor.",
            "format": "date-time"
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "item": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "quantidade": {
            "type": "number",
            "description": "A partir da quantidade informada será calculada a diferença em confronto com o saldo existente do item. Através do resultado será gerado um lançamento de \"Ajuste Positivo de Inventário\" ou \"Ajuste Negativo de Inventário\".",
            "format": "double"
          },
          "idLocalOrigem": {
            "minLength": 1,
            "type": "string"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateLoteMovimentoEstoqueDto"
          },
          "volume": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "idTipoDocumento": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "idContaEstoque": {
            "minLength": 1,
            "type": "string"
          },
          "numeroFichaConteudoImportacao": {
            "maxLength": 36,
            "type": "string",
            "nullable": true
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          },
          "observacao": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "motivosAjuste": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateMotivoAjusteMovimentoEstoqueDto"
            },
            "description": "Lista de rateio por tipo de motivo do ajuste.",
            "nullable": true
          },
          "rateiosGerenciais": {
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRateioClassificacaoMovimentoEstoqueDto"
            },
            "description": "Rateios gerenciais vinculados ao movimento. Caso uma classificação informada não ser compatível com o configurado pelas grades, a mesma será ignorada.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueEntradaDto": {
        "required": [
          "idFilial",
          "item",
          "quantidade",
          "valorUnitario"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "dataMovimento": {
            "type": "string",
            "description": "A data e a hora do movimento não podem ser maior que a do servidor. Se não informada, será utilizado a data e hora atual do servidor.",
            "format": "date-time"
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "item": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "idLocalDestino": {
            "type": "string",
            "description": "Se não informado, o sistema fará o preenchimento buscando o local padrão configurado no cadastro do item.",
            "nullable": true
          },
          "idEmbalagem": {
            "type": "string",
            "description": "Será priorizada a embalagem atrelada ao cadastro de produto.",
            "nullable": true
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateLoteMovimentoEstoqueEntradaDto"
          },
          "volume": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "idNaturezaOperacao": {
            "type": "string",
            "description": "Se ativada a propriedade para emitir o Livro Registro do Controle da Produção e do Estoque, torna-se obrigatório informar.",
            "nullable": true
          },
          "idTipoDocumento": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "idFornecedorCliente": {
            "type": "string",
            "nullable": true
          },
          "idContaEstoque": {
            "type": "string",
            "description": "Se não informado, será preenchido automaticamente conforme a grade de contabilização, campo débito.",
            "nullable": true
          },
          "idTerceiroProprietario": {
            "type": "string",
            "description": "Exclusivo para entradas em que o local de estoque seja do tipo ETPE(Estoque de Terceiros em Poder da Empresa).",
            "nullable": true
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          },
          "numeroFichaConteudoImportacao": {
            "maxLength": 36,
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "rateiosGerenciais": {
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRateioClassificacaoMovimentoEstoqueDto"
            },
            "description": "Rateios gerenciais vinculados ao movimento. Caso uma classificação informada não ser compatível com o configurado pelas grades, a mesma será ignorada.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueSaidaDto": {
        "required": [
          "idFilial",
          "item",
          "quantidade"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "tipoEstoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoEstoqueMovimentoEstoqueCreateDto"
          },
          "dataMovimento": {
            "type": "string",
            "description": "A data e a hora do movimento não podem ser maior que a do servidor. Se não informada, será utilizado a data e hora atual do servidor.",
            "format": "date-time"
          },
          "idLocalOrigem": {
            "type": "string",
            "description": "Se não informado, o sistema tentará sugerir um local de origem avaliando o cadastro de sugestões de local/lote compatível ou local padrão do item e filial, caso configurado no cadastro de produtos.",
            "nullable": true
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "idEmbalagem": {
            "type": "string",
            "description": "Será priorizada a embalagem atrelada ao cadastro de produto.",
            "nullable": true
          },
          "idTipoDocumento": {
            "type": "string",
            "nullable": true
          },
          "idTerceiroProprietario": {
            "type": "string",
            "description": "Exclusivo para saídas em que o local de estoque seja do tipo ETPE(Estoque de Terceiros em Poder da Empresa).",
            "nullable": true
          },
          "idNaturezaOperacao": {
            "type": "string",
            "description": "Se ativada a propriedade para emitir o Livro Registro do Controle da Produção e do Estoque, torna-se obrigatório informar.",
            "nullable": true
          },
          "idFornecedorCliente": {
            "type": "string",
            "nullable": true
          },
          "idContaEstoque": {
            "type": "string",
            "description": "Se não informado, será preenchido automaticamente conforme a grade de contabilização, campo débito.",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "volume": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "numeroDocumentoOrigem": {
            "maxLength": 14,
            "type": "string",
            "description": "Exclusivo para saídas em que o local de estoque seja do tipo ETPE(Estoque de Terceiros em Poder da Empresa).",
            "nullable": true
          },
          "numeroFichaConteudoImportacao": {
            "maxLength": 36,
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "ativoFixoUsoProprio": {
            "type": "boolean"
          },
          "item": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateLoteMovimentoEstoqueDto"
          },
          "rateiosGerenciais": {
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRateioClassificacaoMovimentoEstoqueDto"
            },
            "description": "Rateios gerenciais vinculados ao movimento. Caso uma classificação informada não ser compatível com o configurado pelas grades, a mesma será ignorada.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateMovimentoEstoqueTransferenciaLocaisDto": {
        "required": [
          "idLocalDestino",
          "item",
          "quantidade"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "dataMovimento": {
            "type": "string",
            "description": "A data e a hora do movimento não podem ser maior que a do servidor. Se não informada, será utilizado a data e hora atual do servidor.",
            "format": "date-time"
          },
          "idLocalOrigem": {
            "type": "string",
            "description": "Se não informado, o sistema tentará sugerir um local de origem com base na filial e no tipo de estoque correspondente ao local de destino informado, avaliando também o cadastro de sugestões de local/lote compatível ou local padrão do item e filial, caso configurado no cadastro de produtos.",
            "nullable": true
          },
          "idLocalDestino": {
            "minLength": 1,
            "type": "string"
          },
          "idEmbalagem": {
            "type": "string",
            "description": "Será priorizada a embalagem atrelada ao cadastro de produto.",
            "nullable": true
          },
          "idTipoDocumento": {
            "type": "string",
            "nullable": true
          },
          "idTerceiroProprietario": {
            "type": "string",
            "description": "Exclusivo se for transferência entre locais de estoque tipo ETPE(Estoque de Terceiros em Poder da Empresa).",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "volume": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "numeroDocumentoOrigem": {
            "maxLength": 14,
            "type": "string",
            "description": "Exclusivo se for transferência entre locais de estoque tipo ETPE(Estoque de Terceiros em Poder da Empresa).",
            "nullable": true
          },
          "numeroFichaConteudoImportacao": {
            "maxLength": 36,
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "item": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateLoteMovimentoEstoqueDto"
          },
          "rateiosGerenciais": {
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRateioClassificacaoMovimentoEstoqueDto"
            },
            "description": "Rateios gerenciais vinculados ao movimento. Caso uma classificação informada não ser compatível com o configurado pelas grades, a mesma será ignorada.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRateioClassificacaoMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRelacionamentoGerencialMovimentoEstoqueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRateioGerencialMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "percentual": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRelacionamentoGerencialMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.CreateRateioGerencialMovimentoEstoqueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateConsumoProducaoInternaMotivoAjusteDto": {
        "required": [
          "dataFinal",
          "dataInicial"
        ],
        "type": "object",
        "properties": {
          "produtoAcabado": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "insumoSubstituido": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "idOrdemProducao": {
            "type": "string",
            "nullable": true
          },
          "idMovimentoEstoque": {
            "type": "string",
            "nullable": true
          },
          "dataInicial": {
            "type": "string",
            "description": "Caso não informado, será realizada sugestão com base no \"IdMovimentoEstoque\" informado.",
            "format": "date"
          },
          "dataFinal": {
            "type": "string",
            "description": "Caso não informado, será realizada sugestão com base no \"IdMovimentoEstoque\" informado.",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "Exclusivo e obrigatório caso o motivo for de Correção de Consumo em Produção Interna."
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateConsumoReprocessoReparoMotivoAjusteDto": {
        "required": [
          "dataFinal",
          "dataInicial"
        ],
        "type": "object",
        "properties": {
          "idOrdemProducao": {
            "type": "string",
            "nullable": true
          },
          "idMovimentoEstoque": {
            "type": "string",
            "nullable": true
          },
          "dataInicial": {
            "type": "string",
            "format": "date"
          },
          "dataFinal": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "Exclusivo e obrigatório caso o motivo for de Correção de Reprocesso/Reparo ou de Consumo em Reprocesso/Reparo."
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateEntradaDesmonteMotivoAjusteDto": {
        "required": [
          "dataFinal",
          "dataInicial",
          "itemOrigem"
        ],
        "type": "object",
        "properties": {
          "itemOrigem": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "dataInicial": {
            "type": "string",
            "format": "date"
          },
          "dataFinal": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "Exclusivo e obrigatório caso o motivo for de Correção de Entrada por Desmonte."
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateEntradaSaidaReclassificacaoMotivoAjusteDto": {
        "required": [
          "idMovimentoEstoque"
        ],
        "type": "object",
        "properties": {
          "idMovimentoEstoque": {
            "minLength": 1,
            "type": "string",
            "description": "Através deste campo será realizada sugestão de demais informações como: Produto acabado, data inicial e data final."
          }
        },
        "additionalProperties": false,
        "description": "Exclusivo e obrigatório caso o motivo for de Correção de Saída/Entrada por Reclassificação."
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateMotivoAjusteMovimentoEstoqueDto": {
        "required": [
          "motivo"
        ],
        "type": "object",
        "properties": {
          "quantidade": {
            "type": "number",
            "description": "Caso o valor seja omitido e for informado apenas um único item de motivo do ajuste, será atribuído automaticamente ao campo a quantidade do lançamento.",
            "format": "double"
          },
          "motivo": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoMotivoAjusteDto"
          },
          "complementoMotivoCorrecaoProducaoInterna": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateProducaoInternaMotivoAjusteDto"
          },
          "complementoMotivoCorrecaoConsumoProducaoInterna": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateConsumoProducaoInternaMotivoAjusteDto"
          },
          "complementoMotivoCorrecaoConsumoReprocessoReparo": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateConsumoReprocessoReparoMotivoAjusteDto"
          },
          "complementoMotivoCorrecaoSaidaDesmonte": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateSaidaDesmonteMotivoAjusteDto"
          },
          "complementoMotivoCorrecaoEntradaDesmonte": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateEntradaDesmonteMotivoAjusteDto"
          },
          "complementoMotivoCorrecaoSaidaEntradaReclassificacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateEntradaSaidaReclassificacaoMotivoAjusteDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateProducaoInternaMotivoAjusteDto": {
        "required": [
          "dataFinal",
          "dataInicial"
        ],
        "type": "object",
        "properties": {
          "idOrdemProducao": {
            "type": "string",
            "nullable": true
          },
          "dataInicial": {
            "type": "string",
            "format": "date"
          },
          "dataFinal": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "Exclusivo e obrigatório caso o motivo for de Correção de Produção Interna."
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Create.MotivoAjuste.CreateSaidaDesmonteMotivoAjusteDto": {
        "required": [
          "dataFinal",
          "dataInicial"
        ],
        "type": "object",
        "properties": {
          "dataInicial": {
            "type": "string",
            "format": "date"
          },
          "dataFinal": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false,
        "description": "Exclusivo e obrigatório caso o motivo for de Correção de Saída para Desmonte."
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoEstoqueMovimentoEstoqueCreateDto": {
        "enum": [
          "Proprio",
          "DeTerceirosEmPoderDaEmpresa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoEstoqueMovimentoEstoqueDto": {
        "enum": [
          "Proprio",
          "EmPoderDeTerceiros",
          "DeTerceirosEmPoderDaEmpresa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoMotivoAjusteDto": {
        "enum": [
          "NaoIdentificado",
          "CorrecaoProducaoInterna",
          "CorrecaoConsumoProducaoInterna",
          "CorrecaoReprocessoReparo",
          "CorrecaoConsumoReprocessoReparo",
          "CorrecaoSaidaDesmonte",
          "CorrecaoEntradaDesmonte",
          "CorrecaoSaidaReclassificacao",
          "CorrecaoEntradaReclassificacao"
        ],
        "type": "string",
        "description": "Caso o Motivo seja do tipo \"Não Identificado\", os campos de complemento não devem ser informados."
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoOperacaoMovimentoEstoqueDto": {
        "enum": [
          "AjusteDeEntrada",
          "AjustePositivoInventario",
          "Entrada",
          "EntradaDaProducao",
          "EntradaPorDesmonte",
          "EntradaPorReclassificacao",
          "EntradaPorTransferencia",
          "EstornoDeSaidaPorDevolucao",
          "RetornoReprocessoReparo",
          "AjusteDeSaida",
          "AjusteNegativoDeInventario",
          "Saida",
          "BaixaParaProducao",
          "SaidaParaDesmonte",
          "SaidaPorReclassificacao",
          "SaidaPorTransferencia",
          "EstornoDeEntradaPorDevolucao",
          "RemessaParaReprocessoReparo",
          "BaixaPorPerda"
        ],
        "type": "string"
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoOrigemMovimentoEstoqueDto": {
        "enum": [
          "Compras",
          "Estoque",
          "Comercial",
          "Producao",
          "Custos",
          "NFCe",
          "ECF",
          "RequisicaoInterna",
          "AtendimentoDeRequisicoes",
          "GeradorLancamento",
          "Importacao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoProducaoLoteEstoqueDto": {
        "enum": [
          "Externa",
          "Interna"
        ],
        "type": "string"
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadLoteMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoProducaoLoteEstoqueDto"
          },
          "numero": {
            "maxLength": 34,
            "type": "string",
            "nullable": true
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "numeroDias": {
            "type": "integer",
            "format": "int32"
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          },
          "idFornecedor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "chave": {
            "type": "string",
            "nullable": true
          },
          "origem": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoOrigemMovimentoEstoqueDto"
          },
          "chaveOrigem": {
            "type": "string",
            "nullable": true
          },
          "dataMovimento": {
            "type": "string",
            "format": "date-time"
          },
          "operacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoOperacaoMovimentoEstoqueDto"
          },
          "item": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorTotal": {
            "type": "number",
            "format": "double"
          },
          "tipoEstoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Enums.TipoEstoqueMovimentoEstoqueDto"
          },
          "idLocal": {
            "type": "string",
            "nullable": true
          },
          "idEmbalagem": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "idTipoDocumento": {
            "type": "string",
            "nullable": true
          },
          "observacao": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "volume": {
            "maxLength": 34,
            "type": "string",
            "nullable": true
          },
          "numeroDocumentoOrigem": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "idTerceiroPossuidor": {
            "type": "string",
            "nullable": true
          },
          "idTerceiroProprietario": {
            "type": "string",
            "nullable": true
          },
          "numeroFichaConteudoImportacao": {
            "maxLength": 36,
            "type": "string",
            "nullable": true
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadLoteMovimentoEstoqueDto"
          },
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadRateioClassificacaoMovimentoEstoqueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadRateioClassificacaoMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadRelacionamentoGerencialMovimentoEstoqueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadRateioGerencialMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "percentual": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadRelacionamentoGerencialMovimentoEstoqueDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Estoque.Dtos.V1.MovimentoEstoque.Read.ReadRateioGerencialMovimentoEstoqueDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoBaixaDto": {
        "type": "object",
        "properties": {
          "idAdiantamento": {
            "type": "string",
            "nullable": true
          },
          "idBaixa": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idTesouraria": {
            "type": "string",
            "nullable": true
          },
          "idCFRT": {
            "type": "string",
            "nullable": true
          },
          "valorAberto": {
            "type": "number",
            "format": "double"
          },
          "vinculosEstornos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoEstornoDto"
            },
            "nullable": true
          },
          "vinculosTitulos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoTituloDto"
            },
            "nullable": true
          },
          "vinculosBaixas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoBaixaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoEstornoDto": {
        "type": "object",
        "properties": {
          "idAdiantamento": {
            "type": "string",
            "nullable": true
          },
          "idEstorno": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoTituloDto": {
        "type": "object",
        "properties": {
          "idAdiantamento": {
            "type": "string",
            "nullable": true
          },
          "idTitulo": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Baixa.CreateAdiantamentoBaixaDto": {
        "required": [
          "idAdiantamento",
          "valor"
        ],
        "type": "object",
        "properties": {
          "idAdiantamento": {
            "minLength": 1,
            "type": "string"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Baixa.ReadAdiantamentoBaixaDto": {
        "type": "object",
        "properties": {
          "idAdiantamento": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Baixa.TipoDataDto": {
        "enum": [
          "Emissao",
          "Vencimento",
          "Baixa",
          "Disponibilidade"
        ],
        "type": "string"
      },
      "Radar.API.Model.Financeiro.Dtos.V1.BaixaContasPagar.CreateBaixaContasPagarDto": {
        "required": [
          "dataBaixa",
          "dataDisponibilidade",
          "dataVencimentoPagamento",
          "idFilialPagadora",
          "idFormaPagamento",
          "idTitulo",
          "valorBaixaLiquida"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idTitulo": {
            "minLength": 1,
            "type": "string"
          },
          "idFilialPagadora": {
            "minLength": 1,
            "type": "string"
          },
          "idContaSaida": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "minLength": 1,
            "type": "string"
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "dataVencimentoPagamento": {
            "type": "string",
            "format": "date"
          },
          "dataDisponibilidade": {
            "type": "string",
            "format": "date"
          },
          "dataBaixa": {
            "type": "string",
            "format": "date"
          },
          "valorAdiantamento": {
            "type": "number",
            "description": "Valor total dos adiantamentos usados na baixa.",
            "format": "double"
          },
          "valorBaixaLiquida": {
            "type": "number",
            "format": "double"
          },
          "valorMulta": {
            "type": "number",
            "format": "double"
          },
          "valorJuros": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorOutros5": {
            "type": "number",
            "format": "double"
          },
          "valorOutros6": {
            "type": "number",
            "format": "double"
          },
          "adiantamentosBaixa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Baixa.CreateAdiantamentoBaixaDto"
            },
            "description": "Lista de adiantamentos a serem usados na baixa.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.BaixaContasPagar.ReadBaixaContasPagarDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigoBaixa": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "idTitulo": {
            "type": "string",
            "nullable": true
          },
          "idFilialPagadora": {
            "type": "string",
            "nullable": true
          },
          "idContaSaida": {
            "type": "string",
            "nullable": true
          },
          "idCedente": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "dataVencimentoPagamento": {
            "type": "string",
            "format": "date"
          },
          "dataDisponibilidade": {
            "type": "string",
            "format": "date"
          },
          "dataBaixa": {
            "type": "string",
            "format": "date"
          },
          "valorAdiantamento": {
            "type": "number",
            "format": "double"
          },
          "valorBaixaLiquida": {
            "type": "number",
            "format": "double"
          },
          "valorMulta": {
            "type": "number",
            "format": "double"
          },
          "valorJuros": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorOutros5": {
            "type": "number",
            "format": "double"
          },
          "valorOutros6": {
            "type": "number",
            "format": "double"
          },
          "rateiosContaContabilTitulo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadContaContabilMovimentoFinanceiroDto"
            },
            "nullable": true
          },
          "rateiosContaContabilEncargo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadContaContabilEncargoMovimentoFinanceiroDto"
            },
            "nullable": true
          },
          "adiantamentosBaixa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Adiantamento.ReadAdiantamentoBaixaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.BaixaContasReceber.CreateBaixaContasReceberDto": {
        "required": [
          "dataBaixa",
          "dataDisponibilidade",
          "dataVencimentoPagamento",
          "idFilialRecebedora",
          "idFormaPagamento",
          "idTitulo",
          "valorBaixaLiquida"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idTitulo": {
            "minLength": 1,
            "type": "string"
          },
          "idFilialRecebedora": {
            "minLength": 1,
            "type": "string"
          },
          "idContaEntrada": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "minLength": 1,
            "type": "string"
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "dataVencimentoPagamento": {
            "type": "string",
            "format": "date"
          },
          "dataDisponibilidade": {
            "type": "string",
            "format": "date"
          },
          "dataBaixa": {
            "type": "string",
            "format": "date"
          },
          "valorAdiantamento": {
            "type": "number",
            "description": "Valor total dos adiantamentos usados na baixa.",
            "format": "double"
          },
          "valorBaixaLiquida": {
            "type": "number",
            "format": "double"
          },
          "valorMulta": {
            "type": "number",
            "format": "double"
          },
          "valorJuros": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorOutros3": {
            "type": "number",
            "format": "double"
          },
          "valorOutros4": {
            "type": "number",
            "format": "double"
          },
          "adiantamentosBaixa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Baixa.CreateAdiantamentoBaixaDto"
            },
            "description": "Lista de adiantamentos a serem usados na baixa.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.BaixaContasReceber.ReadBaixaContasReceberDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigoBaixa": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "idTitulo": {
            "type": "string",
            "nullable": true
          },
          "idFilialRecebedora": {
            "type": "string",
            "nullable": true
          },
          "idContaEntrada": {
            "type": "string",
            "nullable": true
          },
          "idClienteSacado": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "dataVencimentoPagamento": {
            "type": "string",
            "format": "date"
          },
          "dataDisponibilidade": {
            "type": "string",
            "format": "date"
          },
          "dataBaixa": {
            "type": "string",
            "format": "date"
          },
          "valorAdiantamento": {
            "type": "number",
            "format": "double"
          },
          "valorBaixaLiquida": {
            "type": "number",
            "format": "double"
          },
          "valorMulta": {
            "type": "number",
            "format": "double"
          },
          "valorJuros": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorOutros3": {
            "type": "number",
            "format": "double"
          },
          "valorOutros4": {
            "type": "number",
            "format": "double"
          },
          "rateiosContaContabilTitulo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadContaContabilMovimentoFinanceiroDto"
            },
            "nullable": true
          },
          "rateiosContaContabilEncargo": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadContaContabilEncargoMovimentoFinanceiroDto"
            },
            "nullable": true
          },
          "adiantamentosBaixa": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Baixa.ReadAdiantamentoBaixaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.CarteiraCobranca.ReadCarteiraCobrancaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "sigla": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "idContaBanco": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idPortador": {
            "type": "string",
            "nullable": true
          },
          "leiauteBoleto": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "leiauteRemessa": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 30,
            "type": "string",
            "nullable": true
          },
          "valorDespesaCobranca": {
            "type": "number",
            "format": "double"
          },
          "float": {
            "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.CarteiraCobranca.TipoFloatCarteiraCobrancaDto"
          },
          "statusAceite": {
            "type": "boolean"
          },
          "emissaoQRCodePix": {
            "type": "boolean"
          },
          "inativa": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.CarteiraCobranca.TipoFloatCarteiraCobrancaDto": {
        "enum": [
          "D0",
          "D1",
          "D2",
          "D3",
          "D4"
        ],
        "type": "string"
      },
      "Radar.API.Model.Financeiro.Dtos.V1.CategoriaAdiantamento.ReadCategoriaAdiantamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "idConta": {
            "type": "string",
            "nullable": true
          },
          "tipoIcone": {
            "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.CategoriaAdiantamento.TipoIconeDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.CategoriaAdiantamento.TipoIconeDto": {
        "enum": [
          "Hotel",
          "Alimentacao",
          "Taxi",
          "Aviao",
          "Carro",
          "Compras",
          "Hospital",
          "Impressao",
          "Lavanderia",
          "Presente",
          "Roupa",
          "Telefone"
        ],
        "type": "string"
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Cobranca.CreateCobrancaDto": {
        "required": [
          "idTitulo"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idTitulo": {
            "minLength": 1,
            "type": "string"
          },
          "idCarteira": {
            "type": "string",
            "nullable": true
          },
          "idInstrucoesBancarias": {
            "maxItems": 3,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lista de instruções bancárias a serem usados na cobrança, limitada a 3 itens.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.InstrucaoBancaria.ReadInstrucaoBancariaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 3,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "inativa": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Pix.CreatePixPagamentoDto": {
        "type": "object",
        "properties": {
          "idChavePix": {
            "type": "string",
            "nullable": true
          },
          "urlqrCodePix": {
            "type": "string",
            "nullable": true
          },
          "identificacaoDoPagamentoPix": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Pix.ReadPixPagamentoDto": {
        "type": "object",
        "properties": {
          "idChavePix": {
            "type": "string",
            "nullable": true
          },
          "urlqrCodePix": {
            "type": "string",
            "nullable": true
          },
          "identificacaoDoPagamentoPix": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Rateio.CreateContaContabilMovimentoFinanceiroDto": {
        "required": [
          "idContabil",
          "idFilial",
          "valorContabil"
        ],
        "type": "object",
        "properties": {
          "idContabil": {
            "minLength": 1,
            "type": "string"
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "valorContabil": {
            "type": "number",
            "format": "double"
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.CreateRelacionamentoGerencialMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Rateio.CreateRateioGerencialMovimentoFinanceiroDto": {
        "required": [
          "idGerencial",
          "valorGerencial"
        ],
        "type": "object",
        "properties": {
          "idGerencial": {
            "minLength": 1,
            "type": "string"
          },
          "valorGerencial": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Rateio.CreateRelacionamentoGerencialMovimentoFinanceiroDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.CreateRateioGerencialMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadContaContabilEncargoMovimentoFinanceiroDto": {
        "type": "object",
        "properties": {
          "idContabil": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "tipoEncargo": {
            "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.TipoEncargoDto"
          },
          "valorContabil": {
            "type": "number",
            "format": "double"
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadRelacionamentoGerencialMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadContaContabilMovimentoFinanceiroDto": {
        "type": "object",
        "properties": {
          "idContabil": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "valorContabil": {
            "type": "number",
            "format": "double"
          },
          "relacionamentosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadRelacionamentoGerencialMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadRateioGerencialMovimentoFinanceiroDto": {
        "type": "object",
        "properties": {
          "idGerencial": {
            "type": "string",
            "nullable": true
          },
          "valorGerencial": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadRelacionamentoGerencialMovimentoFinanceiroDto": {
        "type": "object",
        "properties": {
          "rateiosGerenciais": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadRateioGerencialMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Rateio.TipoEncargoDto": {
        "enum": [
          "Invalido",
          "JurosPagar",
          "MultaPagar",
          "DescontoPagar",
          "AbatimentoPagar",
          "DevolucaoPagar",
          "VariacaoMonetariaAtivaPagar",
          "VariacaoMonetariaPassivaPagar",
          "VariacaoCambialAtivaPagar",
          "VariacaoCambialPassivaPagar",
          "JurosReceber",
          "MultaReceber",
          "DescontoReceber",
          "AbatimentoReceber",
          "DevolucaoReceber",
          "ComissaoReceber",
          "VariacaoMonetariaAtivaReceber",
          "VariacaoMonetariaPassivaReceber",
          "VariacaoCambialAtivaReceber",
          "VariacaoCambialPassivaReceber",
          "DespesaCobrancaReceber",
          "DespesaCobrancaPagar",
          "Outros3Pagar",
          "Outros4Pagar",
          "Outros5Pagar",
          "Outros6Pagar",
          "TaxaAdministrativaReceber",
          "Outros7Pagar"
        ],
        "type": "string"
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateSubstituicaoContasPagarDto": {
        "required": [
          "dataBaixa",
          "idFormaPagamento",
          "idGradeContabil",
          "idTitulosSubstituir",
          "titulosSubstitutos"
        ],
        "type": "object",
        "properties": {
          "idFormaPagamento": {
            "minLength": 1,
            "type": "string"
          },
          "idGradeContabil": {
            "minLength": 1,
            "type": "string"
          },
          "descricao": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "dataBaixa": {
            "type": "string",
            "format": "date"
          },
          "dataOcorrencia": {
            "type": "string",
            "format": "date"
          },
          "idTitulosSubstituir": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "titulosSubstitutos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateTituloSubstitutoContasPagarDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateSubstituicaoContasReceberDto": {
        "required": [
          "dataBaixa",
          "idFormaPagamento",
          "idGradeContabil",
          "idTitulosSubstituir",
          "titulosSubstitutos"
        ],
        "type": "object",
        "properties": {
          "idFormaPagamento": {
            "minLength": 1,
            "type": "string"
          },
          "idGradeContabil": {
            "minLength": 1,
            "type": "string"
          },
          "descricao": {
            "maxLength": 256,
            "type": "string",
            "nullable": true
          },
          "dataBaixa": {
            "type": "string",
            "format": "date"
          },
          "dataOcorrencia": {
            "type": "string",
            "format": "date"
          },
          "idTitulosSubstituir": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "titulosSubstitutos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateTituloSubstitutoContasReceberDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateTituloSubstitutoContasPagarDto": {
        "required": [
          "dataEmissao",
          "dataSaidaEntrada",
          "dataVencimento",
          "idDocumento",
          "numeroDocumento",
          "valor"
        ],
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idSacadoCedente": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idDocumento": {
            "minLength": 1,
            "type": "string"
          },
          "numeroDocumento": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "codigoBarras": {
            "maxLength": 55,
            "type": "string",
            "nullable": true
          },
          "tipoCodigoBarras": {
            "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Substituicao.TipoCodigoBarrasDto"
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataSaidaEntrada": {
            "type": "string",
            "format": "date"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Substituicao.CreateTituloSubstitutoContasReceberDto": {
        "required": [
          "dataEmissao",
          "dataSaidaEntrada",
          "dataVencimento",
          "idDocumento",
          "numeroDocumento",
          "valor"
        ],
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idSacadoCedente": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idDocumento": {
            "minLength": 1,
            "type": "string"
          },
          "numeroDocumento": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataSaidaEntrada": {
            "type": "string",
            "format": "date"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.Substituicao.TipoCodigoBarrasDto": {
        "enum": [
          "Boleto",
          "Concessionaria"
        ],
        "type": "string"
      },
      "Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.CreateTituloContasPagarDto": {
        "required": [
          "dataEmissao",
          "dataVencimento",
          "idCedente",
          "idDocumento",
          "idFilial",
          "numeroDocumento",
          "valor"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "idCedente": {
            "minLength": 1,
            "type": "string"
          },
          "idContaBanco": {
            "type": "string",
            "nullable": true
          },
          "idDocumento": {
            "minLength": 1,
            "type": "string"
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "idPortador": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaEfdReinf": {
            "type": "string",
            "nullable": true
          },
          "dataFatoGeradorEFDReinf": {
            "type": "string",
            "format": "date"
          },
          "dataPeriodoApuracaoEFDReinf": {
            "type": "string",
            "example": "01/2024"
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataEntrada": {
            "type": "string",
            "format": "date"
          },
          "numeroDocumento": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "idInformacaoBancariaConta": {
            "type": "string",
            "nullable": true
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "pix": {
            "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Pix.CreatePixPagamentoDto"
          },
          "rateiosContaContabil": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.CreateContaContabilMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.ReadTituloContasPagarDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idCedente": {
            "type": "string",
            "nullable": true
          },
          "idDocumento": {
            "type": "string",
            "nullable": true
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaEfdReinf": {
            "type": "string",
            "nullable": true
          },
          "idPortador": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idContaBanco": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idInformacaoBancariaConta": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "dataPagar": {
            "type": "string",
            "format": "date"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataEntrada": {
            "type": "string",
            "format": "date"
          },
          "dataFatoGeradorEFDReinf": {
            "type": "string",
            "format": "date"
          },
          "dataPeriodoApuracaoEFDReinf": {
            "type": "string",
            "example": "01/2024"
          },
          "numeroDocumento": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "valorJuros": {
            "type": "number",
            "format": "double"
          },
          "valorMulta": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "pix": {
            "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Pix.ReadPixPagamentoDto"
          },
          "rateiosContaContabil": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadContaContabilMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.SituacaoDto": {
        "enum": [
          "Pagos",
          "EmAberto",
          "Vencidos",
          "Substituidos",
          "VencimentoProrrogado",
          "PagamentoAgendado"
        ],
        "type": "string"
      },
      "Radar.API.Model.Financeiro.Dtos.V1.TituloContasPagar.TipoDataDto": {
        "enum": [
          "Emissao",
          "Vencimento",
          "Entrada",
          "Baixa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.CreateTituloContasReceberDto": {
        "required": [
          "dataEmissao",
          "dataVencimento",
          "idDocumento",
          "idFilial",
          "idSacado",
          "numeroDocumento",
          "valor"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "idSacado": {
            "minLength": 1,
            "type": "string"
          },
          "idContaBanco": {
            "type": "string",
            "nullable": true
          },
          "idDocumento": {
            "minLength": 1,
            "type": "string"
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "idPortador": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaEfdReinf": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataSaida": {
            "type": "string",
            "format": "date"
          },
          "nossoNumero": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.CreateHistoricoMovimentoDto"
          },
          "rateiosContaContabil": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.CreateContaContabilMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.ReadTituloContasReceberDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idSacado": {
            "type": "string",
            "nullable": true
          },
          "idDocumento": {
            "type": "string",
            "nullable": true
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaEfdReinf": {
            "type": "string",
            "nullable": true
          },
          "idPortador": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "idContaBanco": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          },
          "dataReceber": {
            "type": "string",
            "format": "date"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date"
          },
          "dataSaida": {
            "type": "string",
            "format": "date"
          },
          "documentoCobrancaEmitido": {
            "type": "boolean"
          },
          "nossoNumero": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "numeroDocumento": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "valorJuros": {
            "type": "number",
            "format": "double"
          },
          "valorMulta": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "historico": {
            "$ref": "#/components/schemas/Radar.API.Model.Core.Dtos.V1.HistoricoMovimento.ReadHistoricoMovimentoDto"
          },
          "rateiosContaContabil": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Financeiro.Dtos.V1.Rateio.ReadContaContabilMovimentoFinanceiroDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.SituacaoDto": {
        "enum": [
          "Recebidos",
          "EmAberto",
          "Vencidos",
          "Substituidos",
          "VencimentoProrrogado"
        ],
        "type": "string"
      },
      "Radar.API.Model.Financeiro.Dtos.V1.TituloContasReceber.TipoDataDto": {
        "enum": [
          "Emissao",
          "Vencimento",
          "Saida",
          "Baixa",
          "VencimentoOriginal"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.CreateAdmissaoPreliminarDto": {
        "required": [
          "codigo",
          "cpf",
          "dataAdmissao",
          "dataNascimento",
          "idFilial",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "idFilial": {
            "minLength": 1,
            "type": "string"
          },
          "numeroFicha": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "nome": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string"
          },
          "dataNascimento": {
            "type": "string",
            "format": "date"
          },
          "dataAdmissao": {
            "type": "string",
            "format": "date"
          },
          "idCargo": {
            "type": "string",
            "nullable": true
          },
          "codVinculo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "codCategoria": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "categoriaEsocial": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoCategoriaeSocialDto"
          },
          "cpf": {
            "maxLength": 14,
            "minLength": 1,
            "type": "string"
          },
          "tipoSalario": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.Enums.TipoSalarioDto"
          },
          "valorSalario": {
            "type": "number",
            "format": "double"
          },
          "tipoContrato": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoContratoDto"
          },
          "vinculadoFato": {
            "type": "boolean",
            "description": "O campo VinculadoFato para os tipos de contratos: Nenhum, Indeterminado, Temporario ou Experiencia, será atribuído como false.\r\nPara o tipo de contrato Safra será atribuído como true."
          },
          "diasContrato": {
            "minimum": 0,
            "type": "integer",
            "description": "O Campo DiasContrato para o tipo de contrato Indeterminado será zero.",
            "format": "uint64"
          },
          "dataTerminoContrato": {
            "type": "string",
            "description": "O Campo DataTerminoContrato para o tipo de contrato Indeterminado não será informado.\r\nO sistema faz a sugestão da data de término com base na data de admissão e quantidade de dias do contrato, caso o campo DiasContrato seja informado.",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.Enums.TipoSalarioDto": {
        "enum": [
          "Nenhum",
          "Mensal",
          "Quinzenal",
          "Semanal",
          "Diario",
          "Horista",
          "Tarefa",
          "Outros",
          "Comissionado",
          "ComissionadoMisto",
          "FaixaSalarial"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.ReadAdmissaoPreliminarDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 70,
            "type": "string",
            "nullable": true
          },
          "valorSalario": {
            "type": "number",
            "format": "double"
          },
          "dataNascimento": {
            "type": "string",
            "format": "date"
          },
          "dataAdmissao": {
            "type": "string",
            "format": "date"
          },
          "dataTerminoContrato": {
            "type": "string",
            "format": "date"
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "numeroFicha": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "idCargo": {
            "type": "string",
            "nullable": true
          },
          "codVinculo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "codCategoria": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "categoriaEsocial": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoCategoriaeSocialDto"
          },
          "tipoSalario": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.Enums.TipoSalarioDto"
          },
          "tipoContrato": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoContratoDto"
          },
          "diasContrato": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "cpf": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "vinculadoFato": {
            "type": "boolean"
          },
          "excluido": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.UpdateAdmissaoPreliminarDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "numeroFicha": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64",
            "nullable": true
          },
          "nome": {
            "maxLength": 70,
            "type": "string",
            "nullable": true
          },
          "dataNascimento": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "dataAdmissao": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "idCargo": {
            "type": "string",
            "nullable": true
          },
          "codVinculo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64",
            "nullable": true
          },
          "codCategoria": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64",
            "nullable": true
          },
          "categoriaEsocial": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoCategoriaeSocialDto"
          },
          "cpf": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "tipoSalario": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.AdmissaoPreliminar.Enums.TipoSalarioDto"
          },
          "valorSalario": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tipoContrato": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoContratoDto"
          },
          "vinculadoFato": {
            "type": "boolean",
            "nullable": true
          },
          "diasContrato": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64",
            "nullable": true
          },
          "dataTerminoContrato": {
            "type": "string",
            "format": "date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Afastamento.CreateAfastamentoDto": {
        "required": [
          "dataHoraInicio",
          "idEmpregado",
          "idSituacao"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idEmpregado": {
            "minLength": 1,
            "type": "string"
          },
          "idSituacao": {
            "minLength": 1,
            "type": "string"
          },
          "dataHoraInicio": {
            "type": "string",
            "format": "date-time"
          },
          "dataHoraTermino": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dataHoraRetorno": {
            "type": "string",
            "description": "Caso a data de retorno não seja informada, o sistema a sugerirá automaticamente.",
            "format": "date-time",
            "nullable": true
          },
          "idMedico": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Afastamento.Enums.FiltroTipoPeriodoDto": {
        "enum": [
          "Inicio",
          "Termino",
          "Retorno",
          "Vigencia"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Afastamento.ReadAfastamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "idEmpregado": {
            "type": "string",
            "nullable": true
          },
          "idMedico": {
            "type": "string",
            "nullable": true
          },
          "idSituacao": {
            "type": "string",
            "nullable": true
          },
          "dataHoraInicio": {
            "type": "string",
            "format": "date-time"
          },
          "dataHoraTermino": {
            "type": "string",
            "format": "date-time"
          },
          "dataHoraRetorno": {
            "type": "string",
            "format": "date-time"
          },
          "codigoeSocial": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Cargo.ReadCargoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "codigoeSocial": {
            "type": "string",
            "nullable": true
          },
          "idCbo": {
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 27,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Cbo.Enums.TipoCboDto": {
        "enum": [
          "GrandeGrupo",
          "SubgrupoPrincipal",
          "Subgrupo",
          "Familia",
          "Ocupacao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Cbo.ReadCboDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Cbo.Enums.TipoCboDto"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "sinonimos": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.CentroCusto.Enums.TipoCaracteristicaDto": {
        "enum": [
          "TomadorServico",
          "ObraConstrucaoCivil",
          "Filial",
          "Geral"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.CentroCusto.Enums.TipoInscricaoDto": {
        "enum": [
          "CNPJ",
          "CEI",
          "NitPisPasep",
          "CPF",
          "CNO",
          "CAEPF"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.CentroCusto.ReadCentroCustoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "caracteristica": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.CentroCusto.Enums.TipoCaracteristicaDto"
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 27,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "tipoInscricao": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.CentroCusto.Enums.TipoInscricaoDto"
          },
          "inscricao": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Conselho.CreateConselhoDto": {
        "required": [
          "codigo",
          "descricao"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "integer",
            "format": "int32"
          },
          "descricao": {
            "minLength": 1,
            "type": "string"
          },
          "sigla": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Conselho.ReadConselhoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "integer",
            "format": "int32"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "sigla": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Conselho.UpdateConselhoDto": {
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "sigla": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Departamento.ReadDepartamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 27,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ativoInativoDesde": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoAdmissaoDto": {
        "enum": [
          "Nenhum",
          "PrimeiroEmprego",
          "Reemprego",
          "TransferenciaFilialComOnus",
          "TransferenciaFilialSemOnus",
          "Reintegracao",
          "Outros",
          "Reversao",
          "ExercicioProvisorio",
          "Readaptacao",
          "Redistribuicao",
          "ExercicioDescentralizado",
          "Remocao",
          "MudancaCPF"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoEnderecoDto": {
        "enum": [
          "Nenhum",
          "Residencial",
          "Comercial"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoEstadoCivilDto": {
        "enum": [
          "Nenhum",
          "Solteiro",
          "Casado",
          "Viuvo",
          "Divorciado",
          "Concubinado",
          "SeparadoJudicialmente",
          "UniaoEstavel",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoGrauInstrucaoDto": {
        "enum": [
          "Nenhum",
          "Analfabeto",
          "QuartaSerieIncompleta",
          "QuartaSerieCompleta",
          "QuintaAOitavaSerieIncompleta",
          "PrimeiroGrauCompleto",
          "SegundoGrauIncompleto",
          "SegundoGrauCompleto",
          "SuperiorIncompleto",
          "SuperiorCompleto",
          "PosGraduacao",
          "Mestrado",
          "Doutorado",
          "PosDoutorado"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoLogradouroDto": {
        "enum": [
          "Nenhum",
          "Outros",
          "Acampamento",
          "Acesso",
          "AcessoLocal",
          "Adro",
          "Aeroporto",
          "Alameda",
          "Aldeia",
          "Alto",
          "AnelViario",
          "AntigaEstrada",
          "Area",
          "AreaEspecial",
          "AreaVerde",
          "Arteria",
          "Atalho",
          "Avenida",
          "AvenidaContorno",
          "AvenidaMarginal",
          "AvenidaMarginalDireita",
          "AvenidaMarginalEsquerda",
          "AvenidaVelha",
          "Baixa",
          "Balao",
          "Balneario",
          "Beco",
          "Belvedere",
          "Bloco",
          "Blocos",
          "Bosque",
          "Boulevard",
          "Bulevar",
          "Buraco",
          "Cais",
          "Calcada",
          "Caminho",
          "Campo",
          "Canal",
          "Chacara",
          "Chapadao",
          "Ciclovia",
          "Circular",
          "Colonia",
          "ComplexoViario",
          "Comunidade",
          "Condominio",
          "Condominio2",
          "Conjunto",
          "ConjuntoMutirao",
          "Contorno",
          "Corredor",
          "Corrego",
          "Descida",
          "Desvio",
          "Distrito",
          "EixoIndustrial",
          "Elevada",
          "Enseada",
          "EntradaParticular",
          "EntreBloco",
          "EntreQuadra",
          "Escada",
          "Escadaria",
          "Esplanada",
          "Estacao",
          "Estacionamento",
          "Estadio",
          "Estancia",
          "Estrada",
          "EstradaAntiga",
          "EstradaLigacao",
          "EstradaServidao",
          "EstradaEstadual",
          "EstradaIntermunicipal",
          "EstradaMunicipal",
          "EstradaParticular",
          "EstradaVelha",
          "EstradaVicinal",
          "Evangelica",
          "Favela",
          "Fazenda",
          "Feira",
          "Ferrovia",
          "Fonte",
          "Forte",
          "Galeria",
          "Granja",
          "Igarape",
          "Ilha",
          "Ilhota",
          "Indeterminado",
          "Jardim",
          "Jardinete",
          "Ladeira",
          "Lago",
          "Lagoa",
          "Largo",
          "Lote",
          "Loteamento",
          "Magem",
          "Marina",
          "Mercado",
          "Modulo",
          "Monte",
          "Morro",
          "Nucleo",
          "NucleoHabitacional",
          "NucleoRural",
          "Outeiro",
          "Parada",
          "Paradouro",
          "Paralela",
          "Parque",
          "ParqueMunicipal",
          "ParqueResidencial",
          "Passagem",
          "PassagemPedestre",
          "PassagemSubterranea",
          "Passarela",
          "Passeio",
          "Patio",
          "Ponta",
          "Ponte",
          "Porto",
          "Praca",
          "PracaEsportes",
          "Praia",
          "Projecao",
          "Prolongamento",
          "Quadra",
          "Quinta",
          "Quintas",
          "Ramal",
          "Rampa",
          "Recanto",
          "Recreio",
          "Residencial",
          "Reta",
          "Retiro",
          "Retorno",
          "RodoAnel",
          "Rodovia",
          "Rotatoria",
          "Rotula",
          "Rua",
          "RuaLigacao",
          "RuaPedestre",
          "RuaIntegracao",
          "RuaParticular",
          "RuaVelha",
          "Ruela",
          "SegundaAvenida",
          "Servidao",
          "Setor",
          "Sitio",
          "Subida",
          "Terminal",
          "Travessa",
          "TravessaParticular",
          "TravessaVelha",
          "Trecho",
          "Trevo",
          "Trincheira",
          "Tunel",
          "Unidade",
          "Vala",
          "Vale",
          "Variante",
          "Vereda",
          "Via",
          "ViaColetora",
          "ViaCosteira",
          "ViaAcesso",
          "ViaPedestre",
          "ViaElevado",
          "ViaExpressa",
          "ViaLitoranea",
          "ViaLocal",
          "Viaduto",
          "Viela",
          "Vila",
          "ZigueZague"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoNacionalidadeDto": {
        "enum": [
          "Nenhum",
          "Brasileiro",
          "NaturalizadoBrasileiro",
          "Argentino",
          "Boliviano",
          "Chileno",
          "Paraguaio",
          "Uruguaio",
          "Venezuelano",
          "Colombiano",
          "Peruano",
          "Equatoriano",
          "Alemao",
          "Belga",
          "Britanico",
          "Canadense",
          "Espanhol",
          "NorteAmericano",
          "Frances",
          "Suico",
          "Italiano",
          "Haitiano",
          "Japones",
          "Chines",
          "Coreano",
          "Russo",
          "Portugues",
          "Paquistanes",
          "Indiano",
          "OutrosLatinoAmericanos",
          "OutrosAsiaticos",
          "Outros",
          "OutrosEuropeus",
          "Angolano",
          "Congoles",
          "SulAfricano"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoParentescoDto": {
        "enum": [
          "Nenhum",
          "Filho",
          "FilhoAdotivo",
          "Enteado",
          "Conjuge",
          "Companheiro",
          "Pai",
          "Mae",
          "Avo",
          "Bisavo",
          "Neto",
          "Bisneto",
          "Irmao",
          "MenorPobre",
          "PessoaIncapaz",
          "Sobrinho",
          "Tio",
          "Sogro",
          "GenroNora",
          "Outros",
          "ExConjuge",
          "AgregadoOutros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoRacaDto": {
        "enum": [
          "Nenhum",
          "Indigena",
          "Branco",
          "Preta",
          "Amarela",
          "Parda",
          "NaoInformado"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoTurmaDto": {
        "enum": [
          "Nenhum",
          "TurmaA",
          "TurmaB",
          "TurmaC",
          "TurmaD",
          "TurmaE",
          "TurmaF",
          "TurmaG",
          "TurmaH",
          "TurmaI",
          "TurmaJ"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.ReadCnhDto": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "string",
            "nullable": true
          },
          "orgao": {
            "type": "string",
            "nullable": true
          },
          "uf": {
            "type": "string",
            "nullable": true
          },
          "categoria": {
            "type": "string",
            "nullable": true
          },
          "dataExpedicao": {
            "type": "string",
            "format": "date"
          },
          "dataVencimento": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.ReadComplementoDto": {
        "type": "object",
        "properties": {
          "dataAdmissao": {
            "type": "string",
            "format": "date"
          },
          "dataDemissao": {
            "type": "string",
            "format": "date"
          },
          "tipoAdmissao": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoAdmissaoDto"
          },
          "tipoTurma": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoTurmaDto"
          },
          "idCargo": {
            "type": "string",
            "nullable": true
          },
          "idDepartamento": {
            "type": "string",
            "nullable": true
          },
          "idCentroCusto": {
            "type": "string",
            "nullable": true
          },
          "idEscala": {
            "type": "string",
            "nullable": true
          },
          "idSindicato": {
            "type": "string",
            "nullable": true
          },
          "categoriaEsocial": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoCategoriaeSocialDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.ReadContratoDto": {
        "type": "object",
        "properties": {
          "tipoContrato": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoContratoDto"
          },
          "diasContrato": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "diasProrrogContrato": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "dataTerminoContrato": {
            "type": "string",
            "format": "date"
          },
          "dataProrrogContrato": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.ReadDependenteDto": {
        "type": "object",
        "properties": {
          "nome": {
            "type": "string",
            "nullable": true
          },
          "dataNascimento": {
            "type": "string",
            "format": "date"
          },
          "tipoParentesco": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoParentescoDto"
          },
          "tipoSexo": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoSexoDto"
          },
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "depSalarioFamilia": {
            "type": "boolean"
          },
          "depIRRF": {
            "type": "boolean"
          },
          "depFinsPrevidenciarios": {
            "type": "boolean"
          },
          "depPlanoSaude": {
            "type": "boolean"
          },
          "depEsocial": {
            "type": "boolean"
          },
          "excluido": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.ReadDocumentoDto": {
        "type": "object",
        "properties": {
          "cpf": {
            "type": "string",
            "nullable": true
          },
          "pis": {
            "type": "string",
            "nullable": true
          },
          "rg": {
            "type": "string",
            "nullable": true
          },
          "cnh": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.ReadCnhDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.ReadEmpregadoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigoEsocial": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "dataNascimento": {
            "type": "string",
            "format": "date"
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "nrFicha": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "tipoSexo": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Enums.TipoSexoDto"
          },
          "tipoRaca": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoRacaDto"
          },
          "tipoEstadoCivil": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoEstadoCivilDto"
          },
          "tipoGrauInstrucao": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoGrauInstrucaoDto"
          },
          "tipoNacionalidade": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoNacionalidadeDto"
          },
          "documento": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.ReadDocumentoDto"
          },
          "complemento": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.ReadComplementoDto"
          },
          "dependentes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.ReadDependenteDto"
            },
            "nullable": true
          },
          "contrato": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.ReadContratoDto"
          },
          "endereco": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.ReadEnderecoDto"
          },
          "excluido": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Empregado.ReadEnderecoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoEnderecoDto"
          },
          "cep": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "numero": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "type": "string",
            "nullable": true
          },
          "tipoLogradouro": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Empregado.Enums.TipoLogradouroDto"
          },
          "logradouro": {
            "type": "string",
            "nullable": true
          },
          "idCidade": {
            "type": "string",
            "nullable": true
          },
          "telefone": {
            "type": "string",
            "nullable": true
          },
          "dddTelefone": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "celular": {
            "type": "string",
            "nullable": true
          },
          "dddCelular": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "emailParticular": {
            "type": "string",
            "nullable": true
          },
          "emailCorporativo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Enums.FiltroSituacaoDto": {
        "enum": [
          "Todos",
          "Ativos",
          "Demitidos"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Enums.FiltroTipoCategoriaeSocialDto": {
        "enum": [
          "Todos",
          "Empregado",
          "TrabalhadorRural",
          "Aprendiz",
          "ContratoTermo",
          "Temporario",
          "VerdeAmareloSemFGTS",
          "VerdeAmareloComFGTS",
          "Intermitente",
          "AvulsoPortuario",
          "AvulsoNaoPortuario",
          "DirigenteSindical",
          "TrabalhadorCedido",
          "DirigenteSindicalSeguradoEspecial",
          "AutonomoGeral",
          "TransportadorPassageiro",
          "TransportadorCarga",
          "DiretorComFGTS",
          "DiretorSemFGTS",
          "Empresario",
          "Cooperado",
          "TransportadorCooperado",
          "CooperadoProducao",
          "CooperativaDiretor",
          "MinistroReligioso",
          "Estagiario",
          "Medico",
          "Bolsista",
          "CursoFormacao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Enums.FiltroTipoContratoDto": {
        "enum": [
          "Todos",
          "Determinado",
          "Indeterminado",
          "Temporario",
          "Experiencia",
          "Safra"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Enums.TipoCategoriaeSocialDto": {
        "enum": [
          "Nenhum",
          "Empregado",
          "TrabalhadorRural",
          "Aprendiz",
          "ContratoTermo",
          "Temporario",
          "VerdeAmareloSemFGTS",
          "VerdeAmareloComFGTS",
          "Intermitente",
          "AvulsoPortuario",
          "AvulsoNaoPortuario",
          "DirigenteSindical",
          "TrabalhadorCedido",
          "DirigenteSindicalSeguradoEspecial",
          "AutonomoGeral",
          "TransportadorPassageiro",
          "TransportadorCarga",
          "DiretorComFGTS",
          "DiretorSemFGTS",
          "Empresario",
          "Cooperado",
          "TransportadorCooperado",
          "CooperadoProducao",
          "CooperativaDiretor",
          "MinistroReligioso",
          "Estagiario",
          "Medico",
          "Bolsista",
          "CursoFormacao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Enums.TipoContratoDto": {
        "enum": [
          "Nenhum",
          "Determinado",
          "Indeterminado",
          "Temporario",
          "Experiencia",
          "Safra"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Enums.TipoExcluidoDto": {
        "enum": [
          "Todos",
          "Sim",
          "Nao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Enums.TipoSexoDto": {
        "enum": [
          "Nenhum",
          "Masculino",
          "Feminino"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Escala.Enums.TipoDiaSemanaDto": {
        "enum": [
          "Segunda",
          "Terca",
          "Quarta",
          "Quinta",
          "Sexta",
          "Sabado",
          "Domingo"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Escala.Enums.TipoTurnoDto": {
        "enum": [
          "Todos",
          "PrimeiroTurno",
          "SegundoTurno",
          "TerceiroTurno",
          "TurnoGeral",
          "TurnoMisto"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Escala.ReadEscalaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "integer",
            "format": "int32"
          },
          "descricao": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "turno": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Escala.Enums.TipoTurnoDto"
          },
          "dataInicio": {
            "type": "string",
            "format": "date"
          },
          "horasMes": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ativoInativoDesde": {
            "type": "string",
            "format": "date"
          },
          "horarios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Escala.ReadEscalaHorarioDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Escala.ReadEscalaHorarioDto": {
        "type": "object",
        "properties": {
          "idHorario": {
            "type": "string",
            "nullable": true
          },
          "diaSemana": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Escala.Enums.TipoDiaSemanaDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.GrupoCargo.ReadGrupoCargoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "codigoeSocial": {
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 27,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.GrupoTerceiro.ReadGrupoTerceiroDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "nome": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 27,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ativoInativoDesde": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Horario.Enums.TipoDiaBaseApuracaoDto": {
        "enum": [
          "Entrada",
          "Saida"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Horario.Enums.TipoMarcacaoHorarioDto": {
        "enum": [
          "Fixo",
          "Flexivel",
          "Movel",
          "MovelSemConsistencia"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Horario.ReadHorarioDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "integer",
            "format": "int32"
          },
          "descricao": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tipoDiaBaseApuracao": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Horario.Enums.TipoDiaBaseApuracaoDto"
          },
          "tipoMarcacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Horario.Enums.TipoMarcacaoHorarioDto"
          },
          "totalHoras": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "inativo": {
            "type": "boolean"
          },
          "turnosHorarios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Horario.ReadTurnoHorarioDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Horario.ReadTurnoHorarioDto": {
        "type": "object",
        "properties": {
          "horaInicio": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "antesInicio": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "aposInicio": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "horaFim": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "antesFim": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "aposFim": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.IndiceFgts.ReadIndiceFgtsDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "competencia": {
            "type": "string",
            "example": "01/2024"
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Rubrica.Enums.TipoRubricaDto": {
        "enum": [
          "Provento",
          "Vantagem",
          "Desconto",
          "Outros"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Rubrica.ReadRubricaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "integer",
            "format": "int32"
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Rubrica.Enums.TipoRubricaDto"
          },
          "descricao": {
            "maxLength": 120,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.CreateRubricaProgramadaDto": {
        "required": [
          "redundancia",
          "tipoFolha",
          "valores"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "competenciaInicial": {
            "type": "string",
            "example": "01/2024"
          },
          "competenciaFinal": {
            "type": "string",
            "example": "01/2024"
          },
          "referencia": {
            "type": "string",
            "description": "Deverá ser informado apenas para TipoFolha igual a Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.Enums.TipoFolhaDto.Complementar.",
            "example": "01/2024"
          },
          "tipoFolha": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.Enums.TipoFolhaDto"
          },
          "redundancia": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.Enums.TipoRedundanciaDto"
          },
          "valores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.CreateRubricaProgramadaValorDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.CreateRubricaProgramadaValorDataDto": {
        "required": [
          "data",
          "referencia"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "description": "Data informada deverá ser da mesma competência do lançamento.",
            "format": "date"
          },
          "referencia": {
            "minLength": 1,
            "type": "string",
            "description": "Para referencia do tipo hora, poderá ser informado tanto o valor em horas (hh:mm) quanto decimal."
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.CreateRubricaProgramadaValorDto": {
        "required": [
          "idEmpregado",
          "idRubrica"
        ],
        "type": "object",
        "properties": {
          "idEmpregado": {
            "minLength": 1,
            "type": "string"
          },
          "idRubrica": {
            "minLength": 1,
            "type": "string"
          },
          "idCentroCusto": {
            "type": "string",
            "nullable": true
          },
          "referencia": {
            "type": "string",
            "description": "Para referencia do tipo hora, poderá ser informado tanto o valor em horas (hh:mm) quanto decimal.",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.CreateRubricaProgramadaValorDataDto"
            },
            "description": "O grupo datas poderá ser informado apenas para rubricas do tipo Horas Extras.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.Enums.TipoFolhaDto": {
        "enum": [
          "Todas",
          "Mensal",
          "PrimeiraSemana",
          "SegundaSemana",
          "TerceiraSemana",
          "QuartaSemana",
          "QuintaSemana",
          "PrimeiraQuinzena",
          "SegundaQuinzena",
          "Complementar",
          "AbonoPis"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.Enums.TipoRedundanciaDto": {
        "enum": [
          "Nenhum",
          "IgnoraRubricasAnteriores",
          "IgnoraEstaRubrica",
          "SomaRubricaAnterior"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.ReadRubricaProgramadaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "competenciaInicial": {
            "type": "string",
            "example": "01/2024"
          },
          "competenciaFinal": {
            "type": "string",
            "example": "01/2024"
          },
          "referencia": {
            "type": "string",
            "example": "01/2024"
          },
          "tipoFolha": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.Enums.TipoFolhaDto"
          },
          "redundancia": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.Enums.TipoRedundanciaDto"
          },
          "valores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.ReadRubricaProgramadaValorDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.ReadRubricaProgramadaValorDataDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date"
          },
          "referencia": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.ReadRubricaProgramadaValorDto": {
        "type": "object",
        "properties": {
          "idEmpregado": {
            "type": "string",
            "nullable": true
          },
          "idRubrica": {
            "type": "string",
            "nullable": true
          },
          "idCentroCusto": {
            "type": "string",
            "nullable": true
          },
          "referencia": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "datas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.RubricaProgramada.ReadRubricaProgramadaValorDataDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.SalarioAtual.Enums.MotivoReajusteDto": {
        "enum": [
          "AcordoColetivo",
          "Admissao",
          "ProLabore",
          "AntecipacaoSalarial",
          "EnquadramentoFuncao",
          "EnquadramentoPiso",
          "Enquadramento",
          "Espontaneo",
          "Promocao",
          "CCT",
          "Merito"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.SalarioAtual.Enums.TipoSalarioDto": {
        "enum": [
          "Mensal",
          "Diario",
          "Horista",
          "Comissionista",
          "MensalFaixaSalarial"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.SalarioAtual.Enums.TipoValorDto": {
        "enum": [
          "Valor",
          "Percentual",
          "Dias"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.SalarioAtual.ReadSalarioAtualDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "dataAlteracao": {
            "type": "string",
            "format": "date"
          },
          "motivoReajuste": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SalarioAtual.Enums.MotivoReajusteDto"
          },
          "tipoSalario": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SalarioAtual.Enums.TipoSalarioDto"
          },
          "tipoValor": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SalarioAtual.Enums.TipoValorDto"
          },
          "valorReajuste": {
            "type": "number",
            "format": "double"
          },
          "valorSalario": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.SindicatoEmpregado.Enums.FiltroTipoEntidadeSindicalDto": {
        "enum": [
          "Todos",
          "SindicatoColoniaPescadores",
          "Federacao",
          "Confederacao",
          "MTE"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.SindicatoEmpregado.Enums.TipoEntidadeSindicalDto": {
        "enum": [
          "SindicatoColoniaPescadores",
          "Federacao",
          "Confederacao",
          "MTE"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.SindicatoEmpregado.ReadSindicatoEmpregadoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "entidadeSindical": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.SindicatoEmpregado.Enums.TipoEntidadeSindicalDto"
          },
          "codSindical": {
            "type": "string",
            "nullable": true
          },
          "cnpj": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Situacao.Enums.TipoSituacaoDto": {
        "enum": [
          "Nenhum",
          "Trabalhando",
          "Rescisao",
          "Ferias",
          "FeriasColetivas",
          "FaltasInjustificadas",
          "FaltasJustificadas",
          "AfastamentoAcidenteTrabalho",
          "ReaberturaAcidenteTrabalho",
          "AfastamentoAuxilioDoenca",
          "ReaberturaAuxilioDoenca",
          "LicencaMaternidadeINSS",
          "LicencaMaternidadeAborto",
          "AfastamentoServicoMilitar",
          "LicencaSemRemuneracao",
          "LicencaRemuneradaEmpresa",
          "LicencaMedica",
          "SobreavisoProntidao",
          "AvisoPrevioTrabalhado",
          "MandatoSindical",
          "MandatoPublico",
          "LicencaPaternidade",
          "Outros",
          "AfastamentoAcidenteTrabalhoTrajeto",
          "ReaberturaAcidenteTrabalhoTrajeto",
          "AfastamentoAuxilioDoencaRelacionadaAoTrabalho",
          "ReaberturaAuxilioDoencaRelacionadaAoTrabalho",
          "LicencaMaternidadeAdocaoAte1Ano",
          "LicencaMaternidadeAdocaoDe1Ate4Anos",
          "LicencaMaternidadeAdocaoDe4Ate8Anos",
          "FaltasAbonadas",
          "Suspensao",
          "AfastamentoTemporarioDiretor",
          "AfastamentoDefinitivoDiretor",
          "AposentadoriaPorInvalidez",
          "LicencaRemuneradaFerias",
          "LicencaAcidenteTrabalho",
          "ProrrogacaoLicencaMaternidade",
          "HorasExtras",
          "InternaRadarPonto",
          "LicencaMaternidadeEmpresaCidada",
          "AposentadoriaPorInvalidezAcidenteTrabalho",
          "AposentadoriaPorInvalidezDoencaProfissional",
          "Carcere",
          "ParticipacaoCursoOuQualificacao",
          "Atrasos",
          "LicencaMaternidadeDetentorGuarda",
          "LicencaMaternidadeContribuinteIndividual",
          "LicencaPaternidadeEmpresaCidada",
          "ProrrogacaoLicencaMaternidadeEmpresa",
          "MovimentacaoBancoDeHoraseSocial",
          "LicencaMaternidadeCIAborto",
          "LicencaMaternidadeCIAdocao",
          "LicencaMaternidadeMEI",
          "LicencaMaternidadeMEIAborto",
          "LicencaMaternidadeMEIAdocao",
          "IntervaloNaoConcedido",
          "FaltasCompensadas",
          "MandatoSindicalEmpregador",
          "MandatoSindicalEmpregadorSindicato",
          "FeriasIntermitente",
          "SuspensaoContrato",
          "AdicionalNoturnoBH",
          "LicencaMedica16120",
          "LicencaAcidenteTrabalho16120",
          "SuspensaoContratoQualificacaoMae",
          "SuspensaoContratoQualificacaoPais"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Situacao.ReadSituacaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "integer",
            "format": "int32"
          },
          "descricao": {
            "maxLength": 255,
            "type": "string",
            "nullable": true
          },
          "tipoSituacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Situacao.Enums.TipoSituacaoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.Terceiro.Enums.TipoCaracteristicaDto": {
        "enum": [
          "Todos",
          "ContribuinteIndividual",
          "Transporte",
          "Alimentacao",
          "PlanoSaude",
          "Seguro",
          "Gerais",
          "CooperativaTrabalho",
          "ObraConstrucaoCivil",
          "ProdutorRural",
          "CooperativaTrabalhoOdontologica",
          "CooperativaTrabalhoMedico",
          "InformacoesEstagio",
          "RecursosPatrocinio",
          "Facultativo",
          "PrevidenciaPrivada",
          "SaudeSeguranca",
          "Treinamento",
          "InformacoesProcessosTrabalhistas"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Terceiro.Enums.TipoInscricaoDto": {
        "enum": [
          "CNPJ",
          "CEI",
          "NitPisPasep",
          "CPF",
          "CNO",
          "CAEPF"
        ],
        "type": "string"
      },
      "Radar.API.Model.Folha.Dtos.V1.Terceiro.ReadTerceiroDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "caracteristica": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Terceiro.Enums.TipoCaracteristicaDto"
          },
          "classificacao": {
            "maxLength": 27,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "tipoInscricao": {
            "$ref": "#/components/schemas/Radar.API.Model.Folha.Dtos.V1.Terceiro.Enums.TipoInscricaoDto"
          },
          "inscricao": {
            "maxLength": 18,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "ativoInativoDesde": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Folha.Dtos.V1.TituloCentroCusto.ReadTituloCentroCustoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 20,
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 27,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Adicional.CreateAdicionalContratoDto": {
        "type": "object",
        "properties": {
          "idServico": {
            "type": "string",
            "nullable": true
          },
          "idSituacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idTipoRecolhimento": {
            "type": "string",
            "nullable": true
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "codigoTributacaoISS": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "repeticao": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoRepeticaoDto"
          },
          "faturar": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "dataCompetenciaFaturamentoInicial": {
            "type": "string",
            "format": "date"
          },
          "dataCompetenciaFaturamentoFinal": {
            "type": "string",
            "format": "date"
          },
          "dataFaturamento": {
            "type": "string",
            "format": "date"
          },
          "dataVencimentoFaturamento": {
            "type": "string",
            "description": "Define a data de vencimento para o primeiro faturamentodo adicional. Apenas deve ser informado se VencimentoFaturamento for DataFixa.",
            "format": "date"
          },
          "diasVencimentoFaturamento": {
            "type": "integer",
            "description": "Define a quantidade de dias de vencimento para o primeiro faturamento do adicional. Deve ser informado se VencimentoFaturamento for diferente de DataFixa.",
            "format": "int32"
          },
          "tipoVencimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoVencimentoDto"
          },
          "situacaoAdicional": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.SituacaoAdicionalDto"
          },
          "tipoValor": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoValorDto"
          },
          "quantidadeAdicional": {
            "type": "number",
            "format": "double"
          },
          "valorAdicional": {
            "type": "number",
            "format": "double"
          },
          "tipoDescontoAdicional": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "descontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "classificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateClassificacaoDto"
            },
            "description": "Define uma lista de classificações do adicional.",
            "nullable": true
          },
          "retencoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateRetencoesDto"
          },
          "piscofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreatePisCofinsDto"
          },
          "listaNoContrato": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Adicional.ReadAdicionalContratoDto": {
        "type": "object",
        "properties": {
          "idServico": {
            "type": "string",
            "nullable": true
          },
          "idSituacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idTipoRecolhimento": {
            "type": "string",
            "nullable": true
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "codigoTributacaoISS": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "repeticao": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoRepeticaoDto"
          },
          "faturar": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "dataCompetenciaFaturamentoInicial": {
            "type": "string",
            "format": "date"
          },
          "dataCompetenciaFaturamentoFinal": {
            "type": "string",
            "format": "date"
          },
          "dataFaturamento": {
            "type": "string",
            "format": "date"
          },
          "dataVencimentoFaturamento": {
            "type": "string",
            "format": "date"
          },
          "diasVencimentoFaturamento": {
            "type": "integer",
            "format": "int32"
          },
          "tipoVencimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoVencimentoDto"
          },
          "situacaoAdicional": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.SituacaoAdicionalDto"
          },
          "tipoValor": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoValorDto"
          },
          "quantidadeAdicional": {
            "type": "number",
            "format": "double"
          },
          "valorAdicional": {
            "type": "number",
            "format": "double"
          },
          "valorDescontoAdicional": {
            "type": "number",
            "format": "double"
          },
          "tipoDescontoAdicional": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "classificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadClassificacaoDto"
            },
            "nullable": true
          },
          "retencoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadRetencoesDto"
          },
          "piscofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadPisCofinsDto"
          },
          "listaNoContrato": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.CreateComissaoDto": {
        "required": [
          "idRepresentante"
        ],
        "type": "object",
        "properties": {
          "idRepresentante": {
            "minLength": 1,
            "type": "string"
          },
          "faturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.CreateComissaoFaturamentoRecebimentoDto"
          },
          "recebimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.CreateComissaoFaturamentoRecebimentoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.CreateComissaoFaturamentoRecebimentoDto": {
        "required": [
          "percentualComissao"
        ],
        "type": "object",
        "properties": {
          "percentualComissao": {
            "type": "number",
            "format": "double"
          },
          "provisionarComissao": {
            "type": "boolean"
          },
          "valorComissao": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.ReadComissaoContratoDto": {
        "type": "object",
        "properties": {
          "idRepresentante": {
            "type": "string",
            "nullable": true
          },
          "faturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.ReadComissaoFaturamentoRecebimentoDto"
          },
          "recebimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.ReadComissaoFaturamentoRecebimentoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.ReadComissaoFaturamentoRecebimentoDto": {
        "type": "object",
        "properties": {
          "percentualComissao": {
            "type": "number",
            "format": "double"
          },
          "provisionarComissao": {
            "type": "boolean"
          },
          "valorComissao": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateAliquotaPisCofinsDto": {
        "type": "object",
        "properties": {
          "fatorIncidenciaPis": {
            "type": "number",
            "format": "double"
          },
          "fatorIncidenciaCofins": {
            "type": "number",
            "format": "double"
          },
          "aliquotaDiferenciadaPis": {
            "type": "number",
            "format": "double"
          },
          "aliquotaDiferenciadaCofins": {
            "type": "number",
            "format": "double"
          },
          "idContaSPED": {
            "type": "string",
            "nullable": true
          },
          "idGerencialSPED": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaReceita": {
            "type": "string",
            "nullable": true
          },
          "tipoCSTPIS": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoCSTCOFINSDto"
          },
          "tipoCSTCOFINS": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoCSTCOFINSDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateAliquotaRetencoesDto": {
        "type": "object",
        "properties": {
          "codigoReceitaPIS": {
            "type": "integer",
            "format": "int32"
          },
          "codigoReceitaCOFINS": {
            "type": "integer",
            "format": "int32"
          },
          "codigoReceitaCSLL": {
            "type": "integer",
            "format": "int32"
          },
          "aliquotaIRRF": {
            "type": "number",
            "format": "double"
          },
          "aliquotaPIS": {
            "type": "number",
            "format": "double"
          },
          "aliquotaCOFINS": {
            "type": "number",
            "format": "double"
          },
          "aliquotaCSLL": {
            "type": "number",
            "format": "double"
          },
          "aliquotaISSRetido": {
            "type": "number",
            "format": "double"
          },
          "aliquotaINSS": {
            "type": "number",
            "format": "double"
          },
          "aliquotaReducaoBaseCalculoISS": {
            "type": "number",
            "format": "double"
          },
          "aliquotaISS": {
            "type": "number",
            "format": "double"
          },
          "deducoesBCINSS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateDeducoesBCINSSDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateClassificacaoDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateRateioGerenciadorDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateContratoDto": {
        "required": [
          "dataContratoFinal",
          "dataContratoInicial",
          "descricao",
          "idCliente",
          "numero",
          "tipoFaturamento",
          "tipoIndexador",
          "tipoReajuste",
          "tipoSituacao",
          "valor"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "codigo": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 50,
            "minLength": 1,
            "type": "string"
          },
          "idFilial": {
            "type": "string",
            "description": "Define qual a filial do contrato. Se não informado, será considerado a primeira filial cadastrada do cadastro de Filiais do Radar Empresarial.",
            "nullable": true
          },
          "tipoContrato": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoContratoDto"
          },
          "aditivo": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "contratoOriginal": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idCliente": {
            "minLength": 1,
            "type": "string"
          },
          "idCliente2": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "tipoFaturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoFaturamentoDto"
          },
          "faturamentoAutomatico": {
            "type": "boolean"
          },
          "tipoIndexador": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoIndexadorDto"
          },
          "idIndice": {
            "type": "string",
            "description": "Define qual indice será considerado para o contrato. Apenas deve ser informado se for do TipoIndexador Indice.",
            "nullable": true
          },
          "tipoReajuste": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoReajusteDto"
          },
          "dataContratoInicial": {
            "type": "string",
            "format": "date"
          },
          "dataContratoFinal": {
            "type": "string",
            "format": "date"
          },
          "renovacaoAutomatica": {
            "type": "boolean"
          },
          "tipoSituacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoSituacaoDto"
          },
          "dataConcluido": {
            "type": "string",
            "description": "Define qual a data de conclusão do contrato. Apenas deve ser informado se for do TipoSituacao Concluido.",
            "format": "date"
          },
          "dataCancelado": {
            "type": "string",
            "description": "Define qual a data de cancelamento do contrato. Apenas deve ser informado se for do TipoSituacao Cancelado.",
            "format": "date"
          },
          "dataInativo": {
            "type": "string",
            "description": "Define qual a data de inativo do contrato. Apenas deve ser informado se for do TipoSituacao Inativo.",
            "format": "date"
          },
          "faturarAte": {
            "type": "boolean"
          },
          "dataFaturarAte": {
            "type": "string",
            "description": "Define qual a última data de faturamento do contrato. Apenas deve ser informado se for do TipoSituacao Cancelado e FaturarAte true.",
            "format": "date"
          },
          "idUsuario": {
            "type": "string",
            "description": "Define qual o usuário que cadastrou o contrato. Se não informado, será considerado o usuário que realizou a requisição.",
            "nullable": true
          },
          "dataAssinatura": {
            "type": "string",
            "format": "date"
          },
          "faturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Faturamento.CreateFaturamentoContratoDto"
          },
          "adicional": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Adicional.CreateAdicionalContratoDto"
            },
            "description": "Define uma lista de adicionais da aba de adicional do contrato.",
            "nullable": true
          },
          "outrasInformacoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.CreateOutrasInformacoesContratoDto"
          },
          "produtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Produtos.CreateProdutoContratoDto"
            },
            "description": "Define informações da aba de Produtos do contrato.",
            "nullable": true
          },
          "servico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateServicoContratoDto"
          },
          "parcelamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Parcelamento.CreateParcelamentoContratoDto"
          },
          "equipamentos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Equipamentos.CreateEquipamentoContratoDto"
            },
            "description": "Define informações da aba de Equipamentos do contrato.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateDeducoesBCINSSDto": {
        "type": "object",
        "properties": {
          "deducaoBCINSS": {
            "type": "number",
            "format": "double"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "deducaoEmPercentual": {
            "type": "boolean"
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDeducaoBaseINSSDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateDescontoProgramadoDto": {
        "type": "object",
        "properties": {
          "dataCompetenciaInicial": {
            "type": "string",
            "format": "date"
          },
          "tipoDescontoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoServico": {
            "type": "number",
            "format": "double"
          },
          "motivo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreatePisCofinsDto": {
        "type": "object",
        "properties": {
          "buscarAliquotasOrigemCadastro": {
            "type": "boolean",
            "description": "Define se vai buscar as informações das Alíquotas no Cadastro de Origem. Se marcado como true, a visualização das alíquotas será mostrada no Cadastro de Origem."
          },
          "aliquotaPisCofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateAliquotaPisCofinsDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateRateioGerenciadorDto": {
        "type": "object",
        "properties": {
          "idContaContabil": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateRetencoesDto": {
        "type": "object",
        "properties": {
          "buscarCadastroServicos": {
            "type": "boolean",
            "description": "Define se vai buscar as informações das Alíquotas no Cadastro de Serviço. Se marcado como true, a visualização das alíquotas será mostrada no Cadastro de Serviço."
          },
          "aliquotaRetencoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateAliquotaRetencoesDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateSuspensaoFaturamentoDto": {
        "type": "object",
        "properties": {
          "dataCompetenciaInicial": {
            "type": "string",
            "format": "date"
          },
          "dataCompetenciaInicialProximoFaturamento": {
            "type": "string",
            "format": "date"
          },
          "motivo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Equipamentos.CreateEquipamentoContratoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoEquipamentoDto"
          },
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "idEquipamento": {
            "type": "string",
            "nullable": true
          },
          "idMarca": {
            "type": "string",
            "nullable": true
          },
          "idModelo": {
            "type": "string",
            "nullable": true
          },
          "idTipo": {
            "type": "string",
            "nullable": true
          },
          "numeroSerie": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "numeroPatrimonial": {
            "type": "string",
            "nullable": true
          },
          "dataGarantia": {
            "type": "string",
            "format": "date"
          },
          "dataGarantiaEstendida": {
            "type": "string",
            "format": "date"
          },
          "idSituacaoEquipamento": {
            "type": "string",
            "nullable": true
          },
          "comentario": {
            "maxLength": 30000,
            "type": "string",
            "nullable": true
          },
          "cep": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "semNumero": {
            "type": "boolean"
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "endereco": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "idEstado": {
            "type": "string",
            "nullable": true
          },
          "dddTelefone": {
            "maxLength": 17,
            "type": "string",
            "description": "Define qual o DDD e Telefone, deve ser informado sem formatação e separado por um espaço, com o DDD com o máximo de 5 números e Telefone com máximo de 11 números.",
            "nullable": true
          },
          "email": {
            "maxLength": 30000,
            "type": "string",
            "nullable": true
          },
          "contato": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Equipamentos.ReadEquipamentoContratoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoEquipamentoDto"
          },
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "idEquipamento": {
            "type": "string",
            "nullable": true
          },
          "idMarca": {
            "type": "string",
            "nullable": true
          },
          "idModelo": {
            "type": "string",
            "nullable": true
          },
          "idTipo": {
            "type": "string",
            "nullable": true
          },
          "numeroSerie": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "numeroPatrimonial": {
            "type": "string",
            "nullable": true
          },
          "dataGarantia": {
            "type": "string",
            "format": "date"
          },
          "dataGarantiaEstendida": {
            "type": "string",
            "format": "date"
          },
          "idSituacaoEquipamento": {
            "type": "string",
            "nullable": true
          },
          "comentario": {
            "type": "string",
            "nullable": true
          },
          "cep": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "semNumero": {
            "type": "boolean"
          },
          "numero": {
            "type": "string",
            "nullable": true
          },
          "complemento": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "endereco": {
            "maxLength": 40,
            "type": "string",
            "nullable": true
          },
          "bairro": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "idEstado": {
            "type": "string",
            "nullable": true
          },
          "dddTelefone": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "contato": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Faturamento.CreateDescontoProgramadoFaturamentoContratoDto": {
        "type": "object",
        "properties": {
          "dataCompetenciaInicial": {
            "type": "string",
            "format": "date"
          },
          "tipoDescontoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoServico": {
            "type": "number",
            "format": "double"
          },
          "motivo": {
            "type": "string",
            "nullable": true
          },
          "tipoDescontoProduto": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoProduto": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Faturamento.CreateFaturamentoContratoDto": {
        "required": [
          "dataFaturamento",
          "tipoVencimento"
        ],
        "type": "object",
        "properties": {
          "tipoAno": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoAnoDto"
          },
          "faturamentoParcial": {
            "type": "boolean"
          },
          "dataCompetenciaFaturamentoInicial": {
            "type": "string",
            "description": "Define qual a data de competência incial do faturamento do contrato. Se não informado, será considerado o atributo DataContratoInicial.",
            "format": "date"
          },
          "dataCompetenciaFaturamentoFinal": {
            "type": "string",
            "description": "Define qual a data de competência final do faturamento do contrato. Se não informado, será calculado a partir da DataContratoInicial e do TipoFaturamento.",
            "format": "date"
          },
          "dataFaturamento": {
            "type": "string",
            "format": "date"
          },
          "tipoVencimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoVencimentoDto"
          },
          "dataVencimentoFaturamento": {
            "type": "string",
            "format": "date"
          },
          "diasVencimentoFaturamento": {
            "type": "integer",
            "format": "int32"
          },
          "tipoDescontoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoServico": {
            "type": "number",
            "description": "Define qual o valor de desconto será considerado para os serviços do contrato. Apenas deve ser informado se TipoDescontoServico for diferente de Invalido.",
            "format": "double"
          },
          "tipoDescontoProduto": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoProduto": {
            "type": "number",
            "description": "Define qual o valor de desconto será considerado para os produtos do contrato. Apenas deve ser informado se TipoDescontoProduto for diferente de Invalido.",
            "format": "double"
          },
          "descontosProgramados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Faturamento.CreateDescontoProgramadoFaturamentoContratoDto"
            },
            "nullable": true
          },
          "idSituacaoServico": {
            "type": "string",
            "description": "Define qual a situação de serviço do contrato. Se não informado, será considerado a situação de serviço das propriedades do Radar Gerenciador para a filial do contrato.",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "description": "Define qual a unidade de medida do contrato. Se não informado, será considerado a unidade de medida das propriedades do Radar Gerenciador para a filial do contrato.",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "codigoTributacaoISS": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "idTipoRecolhimento": {
            "type": "string",
            "nullable": true
          },
          "codigoServicoRPS": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "idSerie": {
            "type": "string",
            "description": "Define qual a série do contrato. Apenas deve ser informado se houver a personalização para o Radar Comercial.",
            "nullable": true
          },
          "condicaoPagamento": {
            "type": "boolean"
          },
          "idCondicaoPagamento": {
            "type": "string",
            "description": "Define qual condição de pagamento do contrato. Apenas deve ser informado se CondicaoPagamento true.",
            "nullable": true
          },
          "suspensaoFaturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateSuspensaoFaturamentoDto"
          },
          "faturamento": {
            "type": "boolean"
          },
          "demonstrativo": {
            "type": "boolean"
          },
          "dataUltimoReajuste": {
            "type": "string",
            "description": "Define qual a última data de reajuste do valor do contrato. Se não informado, será considerado o atributo DataContratoInicial.",
            "format": "date"
          },
          "dataProximoReajuste": {
            "type": "string",
            "description": "Define qual a data de reajuste do valor do contrato. Se não informado, será calculado a partir do atributo DataContratoInicial e o atributo TipoReajuste for diferente de Suspenso e diferente de Faturamento.",
            "format": "date"
          },
          "idDocumento": {
            "type": "string",
            "nullable": true
          },
          "classificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateClassificacaoDto"
            },
            "description": "Define uma lista de classificações do contrato. Não deve ser informado se o o contrato possuir serviços.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Faturamento.ReadDescontoProgramadoFaturamentoContratoDto": {
        "type": "object",
        "properties": {
          "dataCompetenciaInicial": {
            "type": "string",
            "format": "date"
          },
          "tipoDescontoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoServico": {
            "type": "number",
            "format": "double"
          },
          "motivo": {
            "type": "string",
            "nullable": true
          },
          "tipoDescontoProduto": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoProduto": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Faturamento.ReadFaturamentoContratoDto": {
        "type": "object",
        "properties": {
          "tipoAno": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoAnoDto"
          },
          "faturamentoParcial": {
            "type": "boolean"
          },
          "dataCompetenciaFaturamentoInicial": {
            "type": "string",
            "format": "date"
          },
          "dataCompetenciaFaturamentoFinal": {
            "type": "string",
            "format": "date"
          },
          "dataFaturamento": {
            "type": "string",
            "format": "date"
          },
          "tipoVencimento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoVencimentoDto"
          },
          "dataVencimentoFaturamento": {
            "type": "string",
            "format": "date"
          },
          "diasVencimentoFaturamento": {
            "type": "integer",
            "format": "int32"
          },
          "tipoDescontoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoServico": {
            "type": "number",
            "format": "double"
          },
          "tipoDescontoProduto": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoProduto": {
            "type": "number",
            "format": "double"
          },
          "descontosProgramados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Faturamento.ReadDescontoProgramadoFaturamentoContratoDto"
            },
            "nullable": true
          },
          "idSituacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "idTipoCobranca": {
            "type": "string",
            "nullable": true
          },
          "codigoTributacaoISS": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "idTipoRecolhimento": {
            "type": "string",
            "nullable": true
          },
          "codigoServicoRPS": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "idSerie": {
            "type": "string",
            "nullable": true
          },
          "condicaoPagamento": {
            "type": "boolean"
          },
          "idCondicaoPagamento": {
            "type": "string",
            "nullable": true
          },
          "suspensaoFaturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadSuspensaoFaturamentoDto"
          },
          "faturamento": {
            "type": "boolean"
          },
          "demonstrativo": {
            "type": "boolean"
          },
          "dataUltimoReajuste": {
            "type": "string",
            "format": "date"
          },
          "dataProximoReajuste": {
            "type": "string",
            "format": "date"
          },
          "idDocumento": {
            "type": "string",
            "nullable": true
          },
          "classificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadClassificacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.CreateOutrasInformacoesContratoDto": {
        "type": "object",
        "properties": {
          "testemunha1": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.CreateTestemunhaDto"
          },
          "testemunha2": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.CreateTestemunhaDto"
          },
          "anotacoesGerais": {
            "maxLength": 5000,
            "type": "string",
            "nullable": true
          },
          "descricaoNotaFiscal": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "dadosAdicionaisNF": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "idRepresentantes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "idVendedores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.CreateTestemunhaDto": {
        "type": "object",
        "properties": {
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "maxLength": 11,
            "type": "string",
            "description": "Define o CPF da testemunha. Campo aceita somente numéricos.",
            "nullable": true
          },
          "rg": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.ReadOutrasInformacoesContratoDto": {
        "type": "object",
        "properties": {
          "testemunha1": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.ReadTestemunhaDto"
          },
          "testemunha2": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.ReadTestemunhaDto"
          },
          "anotacoesGerais": {
            "maxLength": 5000,
            "type": "string",
            "nullable": true
          },
          "descricaoNotaFiscal": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "dadosAdicionaisNF": {
            "maxLength": 500,
            "type": "string",
            "nullable": true
          },
          "idRepresentantes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "idVendedores": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.ReadTestemunhaDto": {
        "type": "object",
        "properties": {
          "nome": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "cpf": {
            "maxLength": 11,
            "type": "string",
            "nullable": true
          },
          "rg": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Parcelamento.CreateParcelamentoContratoDto": {
        "type": "object",
        "properties": {
          "quantidadeParcelas": {
            "type": "integer",
            "description": "Define a Quantidade de Parcelas a serem geradas automaticamente.Caso informado somente esse atributo, ele irá gerar as parcelas automaticamente, com as datas de Faturamento e Vencimento informados na aba de Faturamento.",
            "format": "int32"
          },
          "listarNumeroParcelaNF": {
            "type": "boolean"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Parcelamento.CreateParcelasDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Parcelamento.CreateParcelasDto": {
        "required": [
          "dataFaturamentoParcela",
          "dataVencimentoParcela",
          "numeroParcela",
          "valorParcela"
        ],
        "type": "object",
        "properties": {
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "numeroParcela": {
            "type": "integer",
            "description": "Define o número da Parcela. Os números das parcelas não podem ser iguais.",
            "format": "int32"
          },
          "dataFaturamentoParcela": {
            "type": "string",
            "format": "date"
          },
          "dataVencimentoParcela": {
            "type": "string",
            "format": "date"
          },
          "valorParcela": {
            "type": "number",
            "description": "Define o valor de cada Parcela. O valor das parcelas não pode ser superior ou inferior ao valor total do Contrato.",
            "format": "double"
          },
          "observacaoParcela": {
            "maxLength": 30000,
            "type": "string",
            "nullable": true
          },
          "parcelaFaturada": {
            "type": "boolean"
          },
          "comissao": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.CreateComissaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Parcelamento.ReadParcelamentoContratoDto": {
        "type": "object",
        "properties": {
          "quantidadeParcelas": {
            "type": "integer",
            "format": "int32"
          },
          "listarNumeroParcelaNF": {
            "type": "boolean"
          },
          "parcelas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Parcelamento.ReadParcelasDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Parcelamento.ReadParcelasDto": {
        "type": "object",
        "properties": {
          "idFormaPagamento": {
            "type": "string",
            "nullable": true
          },
          "numeroParcela": {
            "type": "integer",
            "format": "int32"
          },
          "dataFaturamentoParcela": {
            "type": "string",
            "format": "date"
          },
          "dataVencimentoParcela": {
            "type": "string",
            "format": "date"
          },
          "valorParcela": {
            "type": "number",
            "format": "double"
          },
          "observacaoParcela": {
            "type": "string",
            "nullable": true
          },
          "parcelaFaturada": {
            "type": "boolean"
          },
          "comissao": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Comissao.ReadComissaoContratoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Produtos.CreateProdutoContratoDto": {
        "required": [
          "codigoCSTICMS"
        ],
        "type": "object",
        "properties": {
          "idTabelaPreco": {
            "type": "string",
            "description": "Define qual a tabela de preço do produto do contrato.",
            "nullable": true
          },
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "complemento": {
            "maxLength": 30000,
            "type": "string",
            "nullable": true
          },
          "idCFOP": {
            "type": "string",
            "description": "Define qual o CFOP do produto do contrato.",
            "nullable": true
          },
          "codigoCIFiscal": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "description": "Define qual a Unidade de Medida do produto do contrato.",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "tipoDesconto": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "descontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "codigoCSTICMS": {
            "minLength": 1,
            "type": "string",
            "description": "Define qual a relação de situações tributárias ICMS do produto."
          },
          "codigoCSTIPI": {
            "type": "string",
            "nullable": true
          },
          "classificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateClassificacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Produtos.ReadProdutoContratoDto": {
        "type": "object",
        "properties": {
          "idTabelaPreco": {
            "type": "string",
            "nullable": true
          },
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "complemento": {
            "type": "string",
            "nullable": true
          },
          "idCFOP": {
            "type": "string",
            "nullable": true
          },
          "codigoCIFiscal": {
            "maxLength": 16,
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "tipoDesconto": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "descontoUnitario": {
            "type": "number",
            "format": "double"
          },
          "codigoCSTICMS": {
            "type": "string",
            "nullable": true
          },
          "codigoCSTIPI": {
            "type": "string",
            "nullable": true
          },
          "classificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadClassificacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadAliquotaPisCofinsDto": {
        "type": "object",
        "properties": {
          "fatorIncidenciaPis": {
            "type": "number",
            "format": "double"
          },
          "fatorIncidenciaCofins": {
            "type": "number",
            "format": "double"
          },
          "aliquotaDiferenciadaPis": {
            "type": "number",
            "format": "double"
          },
          "aliquotaDiferenciadaCofins": {
            "type": "number",
            "format": "double"
          },
          "idContaSPED": {
            "type": "string",
            "nullable": true
          },
          "idGerencialSPED": {
            "type": "string",
            "nullable": true
          },
          "idNaturezaReceita": {
            "type": "string",
            "nullable": true
          },
          "tipoCSTPIS": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoCSTCOFINSDto"
          },
          "tipoCSTCOFINS": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoCSTCOFINSDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadAliquotaRetencoesDto": {
        "type": "object",
        "properties": {
          "codigoReceitaPIS": {
            "type": "integer",
            "format": "int32"
          },
          "codigoReceitaCOFINS": {
            "type": "integer",
            "format": "int32"
          },
          "codigoReceitaCSLL": {
            "type": "integer",
            "format": "int32"
          },
          "aliquotaIRRF": {
            "type": "number",
            "format": "double"
          },
          "aliquotaPIS": {
            "type": "number",
            "format": "double"
          },
          "aliquotaCOFINS": {
            "type": "number",
            "format": "double"
          },
          "aliquotaCSLL": {
            "type": "number",
            "format": "double"
          },
          "aliquotaISSRetido": {
            "type": "number",
            "format": "double"
          },
          "aliquotaINSS": {
            "type": "number",
            "format": "double"
          },
          "aliquotaReducaoBaseCalculoISS": {
            "type": "number",
            "format": "double"
          },
          "aliquotaISS": {
            "type": "number",
            "format": "double"
          },
          "deducoesBCINSS": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadDeducoesBCINSSDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadClassificacaoDto": {
        "type": "object",
        "properties": {
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idClassificacao": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "rateios": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadRateioGerenciadorDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadContratoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "codigo": {
            "maxLength": 8,
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "tipoContrato": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoContratoDto"
          },
          "aditivo": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "contratoOriginal": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "idCliente2": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "tipoFaturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoFaturamentoDto"
          },
          "faturamentoAutomatico": {
            "type": "boolean"
          },
          "tipoIndexador": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoIndexadorDto"
          },
          "idIndice": {
            "type": "string",
            "nullable": true
          },
          "tipoReajuste": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoReajusteDto"
          },
          "dataContratoInicial": {
            "type": "string",
            "format": "date"
          },
          "dataContratoFinal": {
            "type": "string",
            "format": "date"
          },
          "renovacaoAutomatica": {
            "type": "boolean"
          },
          "tipoSituacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoSituacaoDto"
          },
          "dataConcluido": {
            "type": "string",
            "format": "date"
          },
          "dataCancelado": {
            "type": "string",
            "format": "date"
          },
          "dataInativo": {
            "type": "string",
            "format": "date"
          },
          "faturarAte": {
            "type": "boolean"
          },
          "dataFaturarAte": {
            "type": "string",
            "format": "date"
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "dataAssinatura": {
            "type": "string",
            "format": "date"
          },
          "faturamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Faturamento.ReadFaturamentoContratoDto"
          },
          "adicional": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Adicional.ReadAdicionalContratoDto"
            },
            "nullable": true
          },
          "outrasInformacoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.OutrasInformacoes.ReadOutrasInformacoesContratoDto"
          },
          "parcelamento": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Parcelamento.ReadParcelamentoContratoDto"
          },
          "equipamentos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Equipamentos.ReadEquipamentoContratoDto"
            },
            "nullable": true
          },
          "produtos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Produtos.ReadProdutoContratoDto"
            },
            "nullable": true
          },
          "servico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadServicoContratoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadDeducoesBCINSSDto": {
        "type": "object",
        "properties": {
          "deducaoBCINSS": {
            "type": "number",
            "format": "double"
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "deducaoEmPercentual": {
            "type": "boolean"
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDeducaoBaseINSSDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadDescontoProgramadoDto": {
        "type": "object",
        "properties": {
          "dataCompetenciaInicial": {
            "type": "string",
            "format": "date"
          },
          "tipoDescontoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "valorDescontoServico": {
            "type": "number",
            "format": "double"
          },
          "motivo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadPisCofinsDto": {
        "type": "object",
        "properties": {
          "buscarAliquotasOrigemCadastro": {
            "type": "boolean",
            "description": "Define se vai buscar as informações das Alíquotas no Cadastro. Se tiver marcado como true, para visualizar as alíquotas basta buscar na origem do Cadastro."
          },
          "aliquotaPisCofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadAliquotaPisCofinsDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadRateioGerenciadorDto": {
        "type": "object",
        "properties": {
          "idContaContabil": {
            "type": "string",
            "nullable": true
          },
          "idContaGerencial": {
            "type": "string",
            "nullable": true
          },
          "valor": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadRetencoesDto": {
        "type": "object",
        "properties": {
          "buscarCadastroServicos": {
            "type": "boolean",
            "description": "Define se vai buscar as informações das Alíquotas no Cadastro de Serviço. Se tiver marcado como true, para visualizar as alíquotas basta buscar na origem do Cadastro de Serviço."
          },
          "aliquotaRetencoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadAliquotaRetencoesDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadSuspensaoFaturamentoDto": {
        "type": "object",
        "properties": {
          "dataCompetenciaInicial": {
            "type": "string",
            "format": "date"
          },
          "dataCompetenciaInicialProximoFaturamento": {
            "type": "string",
            "format": "date"
          },
          "motivo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateDescricaoNotaFiscalServicoContratoDto": {
        "type": "object",
        "properties": {
          "idSituacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idTipoRecolhimento": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idServico": {
            "type": "string",
            "nullable": true
          },
          "codigoTributacaoISS": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "codigoServicoRPS": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "retencoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateRetencoesDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateItemServicoContratoDto": {
        "type": "object",
        "properties": {
          "idTabelaPrecos": {
            "type": "string",
            "nullable": true
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "idSituacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idTipoRecolhimento": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idServicoContrato": {
            "type": "string",
            "nullable": true
          },
          "codigoTributacaoISS": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "codigoServicoRPS": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorUnitarioExcedente": {
            "type": "number",
            "format": "double"
          },
          "valorAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "listarDescricaoClasseServico": {
            "type": "boolean"
          },
          "listarServicoNotaFiscal": {
            "type": "boolean"
          },
          "tipoDescontoUnitario": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "tipoAcrescimoUnitario": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "situacaoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateSituacaoServicoContratoDto"
          },
          "pisCofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreatePisCofinsDto"
          },
          "retencoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateRetencoesDto"
          },
          "classificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateClassificacaoDto"
            },
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateServicoContratoDto": {
        "type": "object",
        "properties": {
          "somarItensListarDescricaoNotaFiscal": {
            "type": "boolean"
          },
          "descricaoNotaFiscal": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateDescricaoNotaFiscalServicoContratoDto"
          },
          "itensServicosContrato": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateItemServicoContratoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateSituacaoServicoContratoDto": {
        "type": "object",
        "properties": {
          "situacaoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.SituacaoServicosContratoDto"
          },
          "dataCancelamento": {
            "type": "string",
            "format": "date"
          },
          "motivoCancelamento": {
            "maxLength": 30000,
            "type": "string",
            "nullable": true
          },
          "descontosProgramados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.CreateDescontoProgramadoDto"
            },
            "nullable": true
          },
          "suspensoesFaturamentos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateSuspensaoFaturamentoServicoContratoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.CreateSuspensaoFaturamentoServicoContratoDto": {
        "type": "object",
        "properties": {
          "dataCompetenciaInicial": {
            "type": "string",
            "format": "date"
          },
          "dataCompetenciaInicialProximoFaturamento": {
            "type": "string",
            "format": "date"
          },
          "motivo": {
            "type": "string",
            "nullable": true
          },
          "suspenderPorTempoIndeterminado": {
            "type": "boolean"
          },
          "quantidadeCompetenciaSuspender": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadDescricaoNotaFiscalServicoContratoDto": {
        "type": "object",
        "properties": {
          "idSituacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idTipoRecolhimento": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idServico": {
            "type": "string",
            "nullable": true
          },
          "codigoTributacaoISS": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "codigoServicoRPS": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "retencoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadRetencoesDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadItemServicoContratoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "idTabelaPrecos": {
            "type": "string",
            "nullable": true
          },
          "idGradeContabil": {
            "type": "string",
            "nullable": true
          },
          "idSituacaoServico": {
            "type": "string",
            "nullable": true
          },
          "idTipoRecolhimento": {
            "type": "string",
            "nullable": true
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idServicoContrato": {
            "type": "string",
            "nullable": true
          },
          "codigoTributacaoISS": {
            "maxLength": 2,
            "type": "string",
            "nullable": true
          },
          "codigoServicoRPS": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          },
          "valorDesconto": {
            "type": "number",
            "format": "double"
          },
          "valorUnitarioExcedente": {
            "type": "number",
            "format": "double"
          },
          "valorAcrescimo": {
            "type": "number",
            "format": "double"
          },
          "listarDescricaoClasseServico": {
            "type": "boolean"
          },
          "listarServicoNotaFiscal": {
            "type": "boolean"
          },
          "tipoDescontoUnitario": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "tipoAcrescimoUnitario": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto"
          },
          "situacaoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadSituacaoServicoContratoDto"
          },
          "pisCofins": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadPisCofinsDto"
          },
          "retencoes": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadRetencoesDto"
          },
          "classificacoes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadClassificacaoDto"
            },
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadServicoContratoDto": {
        "type": "object",
        "properties": {
          "somarItensListarDescricaoNotaFiscal": {
            "type": "boolean"
          },
          "descricaoNotaFiscal": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadDescricaoNotaFiscalServicoContratoDto"
          },
          "itensServicosContrato": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadItemServicoContratoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadSituacaoServicoContratoDto": {
        "type": "object",
        "properties": {
          "situacaoServico": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.SituacaoServicosContratoDto"
          },
          "dataCancelamento": {
            "type": "string",
            "format": "date"
          },
          "motivoCancelamento": {
            "maxLength": 30000,
            "type": "string",
            "nullable": true
          },
          "descontosProgramados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.ReadDescontoProgramadoDto"
            },
            "nullable": true
          },
          "suspensoesFaturamentos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadSuspensaoFaturamentoServicoContratoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Contrato.Servicos.ReadSuspensaoFaturamentoServicoContratoDto": {
        "type": "object",
        "properties": {
          "dataCompetenciaInicial": {
            "type": "string",
            "format": "date"
          },
          "dataCompetenciaInicialProximoFaturamento": {
            "type": "string",
            "format": "date"
          },
          "motivo": {
            "type": "string",
            "nullable": true
          },
          "suspenderPorTempoIndeterminado": {
            "type": "boolean"
          },
          "quantidadeCompetenciaSuspender": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Defeito.CreateDefeitoDto": {
        "required": [
          "classificacao",
          "codigo",
          "defeito",
          "tipoClassificacao"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "minLength": 1,
            "type": "string"
          },
          "classificacao": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "tipoClassificacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoClassificacaoDto"
          },
          "defeito": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "solucao": {
            "maxLength": 1000,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Defeito.ReadDefeitoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "type": "string",
            "nullable": true
          },
          "tipoClassificacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoClassificacaoDto"
          },
          "defeito": {
            "type": "string",
            "nullable": true
          },
          "solucao": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.SituacaoAdicionalDto": {
        "enum": [
          "Vigente",
          "Concluido",
          "Cancelado"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.SituacaoServicosContratoDto": {
        "enum": [
          "Vigente",
          "Cancelado",
          "Suspenso"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoAnoDto": {
        "enum": [
          "Nenhum",
          "AnoCivil",
          "AnoComercial"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoCSTCOFINSDto": {
        "enum": [
          "Nenhum",
          "OperacaoTributavelComAliquotaBasica",
          "OperacaoTributavelComAliquotaDiferenciada",
          "OperacaoTributavelComAliquotaMedidaProduto",
          "OperacaoTributavelMonofasica",
          "OperacaoTributavelPorSubstituicaoTributaria",
          "OperacaoTributavelAliquotaZero",
          "OperacaoIsentaDaContribuicao",
          "OperacaoSemIncidenciaDaContribuicao",
          "OperacaoComSuspensaoDaContribuicao",
          "OutrasOperacoesDeSaida",
          "OutrasOperacoes"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoClassificacaoDto": {
        "enum": [
          "Invalido",
          "CodigoGrupo",
          "CodigoAnalitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoContratoDto": {
        "enum": [
          "Nenhum",
          "Simples",
          "Faixa",
          "Medicao",
          "FaixaEMedicao",
          "Parcelamento"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDeducaoBaseINSSDto": {
        "enum": [
          "Nenhum",
          "AlimentacaoFornecida",
          "MaterialUtilizado",
          "TransporteFornecido"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoDescontoDto": {
        "enum": [
          "Invalido",
          "Valor",
          "Percentual"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoEquipamentoDto": {
        "enum": [
          "Nenhum",
          "Equipamento",
          "Produto"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoFaturamentoDto": {
        "enum": [
          "Nenhum",
          "Diario",
          "Semanal",
          "Decendial",
          "Quinzenal",
          "Mensal",
          "Bimestral",
          "Trimestral",
          "Quadrimestral",
          "Semestral",
          "Anual"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoFiltroRenovacaoDto": {
        "enum": [
          "Todos",
          "Renovacao",
          "SemRenovacao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoIndexadorDto": {
        "enum": [
          "Nenhum",
          "Indice",
          "Valor",
          "Percentual"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoReajusteDto": {
        "enum": [
          "Nenhum",
          "Mensal",
          "Bimestral",
          "Trimestral",
          "Quadrimestral",
          "Semestral",
          "Anual",
          "Suspenso",
          "Faturamento",
          "Quinquimestral"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoRepeticaoDto": {
        "enum": [
          "Diario",
          "Semanal",
          "Decendial",
          "Quinzenal",
          "Mensal",
          "Bimestral",
          "Trimestral",
          "Quadrimestral",
          "Semestral",
          "Anual",
          "Nenhum"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoSituacaoDto": {
        "enum": [
          "Nenhum",
          "Vigente",
          "Inativo",
          "Concluido",
          "Cancelado",
          "Negociacao",
          "Previsao"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoValorDto": {
        "enum": [
          "Reais",
          "PorcentagemDesteContrato",
          "PorcentagemValorAtualContrato"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoVencimentoDto": {
        "enum": [
          "Invalido",
          "DataFixa",
          "DiasAposFaturamento",
          "DiasUteisAposFaturamento",
          "DiasUteisAntesDoUltimoDiaUtilDoMesDeFaturamento"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Equipamento.CreateEquipamentoDto": {
        "required": [
          "classificacao",
          "codigo",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "nome": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "classificacao": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "tipoClassificacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoClassificacaoDto"
          },
          "numeroSerie": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idMarca": {
            "type": "string",
            "nullable": true
          },
          "idModelo": {
            "type": "string",
            "nullable": true
          },
          "idTipo": {
            "type": "string",
            "nullable": true
          },
          "idDefeito": {
            "type": "string",
            "nullable": true
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Equipamento.ReadEquipamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "classificacao": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "tipoClassificacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Enums.TipoClassificacaoDto"
          },
          "numeroSerie": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idMarca": {
            "type": "string",
            "nullable": true
          },
          "idModelo": {
            "type": "string",
            "nullable": true
          },
          "idTipo": {
            "type": "string",
            "nullable": true
          },
          "idDefeito": {
            "type": "string",
            "nullable": true
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Faixa.CreateFaixaDto": {
        "required": [
          "codigo",
          "idServico",
          "itens",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "nome": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "idServico": {
            "minLength": 1,
            "type": "string"
          },
          "buscarQuantidade": {
            "type": "boolean"
          },
          "origem": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Faixa.FaixaOrigemDto"
          },
          "quantidadeProporcionalCadaFaixa": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Faixa.CreateItemFaixaDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Faixa.CreateItemFaixaDto": {
        "required": [
          "de"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "de": {
            "type": "integer",
            "format": "int32"
          },
          "ate": {
            "type": "integer",
            "format": "int32"
          },
          "quantidade": {
            "type": "integer",
            "format": "int32"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Faixa.FaixaOrigemDto": {
        "enum": [
          "Nenhum",
          "LancamentosContabeis",
          "LancamentosEscritaFiscal",
          "FolhaReciboPagamentos",
          "FolhaAdmissoes",
          "FolhaDemissoes",
          "Medicoes"
        ],
        "type": "string"
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Faixa.ReadFaixaDto": {
        "required": [
          "codigo",
          "idServico",
          "itens",
          "nome"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string"
          },
          "nome": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "idServico": {
            "minLength": 1,
            "type": "string"
          },
          "buscarQuantidade": {
            "type": "boolean"
          },
          "origem": {
            "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Faixa.FaixaOrigemDto"
          },
          "quantidadeProporcionalCadaFaixa": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Faixa.ReadItemFaixaDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Faixa.ReadItemFaixaDto": {
        "required": [
          "de"
        ],
        "type": "object",
        "properties": {
          "de": {
            "type": "integer",
            "format": "int32"
          },
          "ate": {
            "type": "integer",
            "format": "int32"
          },
          "quantidade": {
            "type": "integer",
            "format": "int32"
          },
          "valor": {
            "type": "number",
            "format": "double"
          },
          "valorUnitario": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Marca.CreateMarcaDto": {
        "required": [
          "codigo",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "nome": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Marca.ReadMarcaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Medicao.CreateItemMedicaoDto": {
        "required": [
          "data",
          "horaFinal",
          "horaInicial",
          "idServico",
          "quantidade"
        ],
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date"
          },
          "idServico": {
            "minLength": 1,
            "type": "string",
            "description": "Define o Serviço para a Medição. O Serviço informado deve pertencer ao Contrato registrado."
          },
          "idExecutor": {
            "type": "string",
            "nullable": true
          },
          "descontoTotal": {
            "type": "number",
            "format": "double"
          },
          "pesoBrutoTotal": {
            "type": "number",
            "format": "double"
          },
          "pesoTara": {
            "type": "number",
            "format": "double"
          },
          "horaInicial": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "horaFinal": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Medicao.CreateMedicaoDto": {
        "required": [
          "idContrato",
          "itens",
          "mesAno"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "mesAno": {
            "type": "string",
            "example": "01/2024"
          },
          "idContrato": {
            "minLength": 1,
            "type": "string"
          },
          "idMotorista": {
            "type": "string",
            "nullable": true
          },
          "idPlaca": {
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 55,
            "type": "string",
            "nullable": true
          },
          "campoPersonalizado": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "listarNumeroNotaFiscal": {
            "type": "boolean"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Medicao.CreateItemMedicaoDto"
            }
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Medicao.ReadItemMedicaoDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date"
          },
          "idServico": {
            "type": "string",
            "nullable": true
          },
          "idExecutor": {
            "type": "string",
            "nullable": true
          },
          "descontoTotal": {
            "type": "number",
            "format": "double"
          },
          "pesoBrutoTotal": {
            "type": "number",
            "format": "double"
          },
          "pesoTara": {
            "type": "number",
            "format": "double"
          },
          "horaInicial": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "horaFinal": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Medicao.ReadMedicaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "mesAno": {
            "type": "string",
            "example": "01/2024"
          },
          "idContrato": {
            "type": "string",
            "nullable": true
          },
          "idMotorista": {
            "type": "string",
            "nullable": true
          },
          "idPlaca": {
            "type": "string",
            "nullable": true
          },
          "idMunicipio": {
            "type": "string",
            "nullable": true
          },
          "numero": {
            "maxLength": 55,
            "type": "string",
            "nullable": true
          },
          "campoPersonalizado": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "listarNumeroNotaFiscal": {
            "type": "boolean"
          },
          "itens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Gerenciador.Dtos.V1.Medicao.ReadItemMedicaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Modelo.CreateModeloDto": {
        "required": [
          "codigo",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string"
          },
          "nome": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "idMarca": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Modelo.ReadModeloDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "idMarca": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Projeto.ReadProjetoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.SituacaoEquipamento.CreateSituacaoEquipamentoDto": {
        "required": [
          "codigo",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "nome": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.SituacaoEquipamento.ReadSituacaoEquipamentoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 25,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Tipo.CreateTipoDto": {
        "required": [
          "codigo",
          "nome"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 25,
            "minLength": 1,
            "type": "string"
          },
          "nome": {
            "maxLength": 200,
            "minLength": 1,
            "type": "string"
          },
          "idModelo": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Gerenciador.Dtos.V1.Tipo.ReadTipoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 60,
            "type": "string",
            "nullable": true
          },
          "nome": {
            "maxLength": 200,
            "type": "string",
            "nullable": true
          },
          "idModelo": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateInformacoesSuplementaresApontamentoDto": {
        "type": "object",
        "properties": {
          "idInformacaoSuplementar1": {
            "type": "string",
            "nullable": true
          },
          "idInformacaoSuplementar2": {
            "type": "string",
            "nullable": true
          },
          "idInformacaoSuplementar3": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Campos se tornam obrigatórios conforme as propriedades do produção."
      },
      "Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateInsumoConsumidoApontamentoDto": {
        "type": "object",
        "properties": {
          "insumo": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "saldoEstoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateSaldoEstoqueInsumoConsumidoDto"
          },
          "insumoSubstituido": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateLoteSaldoEstoqueInsumoConsumidoDto": {
        "type": "object",
        "properties": {
          "numero": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "numeroDiasValidade": {
            "type": "integer",
            "format": "int32"
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          },
          "idFornecedor": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateSaldoEstoqueInsumoConsumidoDto": {
        "type": "object",
        "properties": {
          "idLocal": {
            "type": "string",
            "nullable": true
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Apontamento.TipoProducaoDto"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateLoteSaldoEstoqueInsumoConsumidoDto"
          },
          "volume": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "idTerceiroProprietario": {
            "type": "string",
            "nullable": true
          },
          "idDocumentoOrigem": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumentoOrigem": {
            "maxLength": 14,
            "type": "string",
            "nullable": true
          },
          "idEmitenteDocumentoOrigem": {
            "type": "string",
            "nullable": true
          },
          "dataEmissaoDocumentoOrigem": {
            "type": "string",
            "format": "date"
          },
          "numeroFichaConteudoImportacao": {
            "maxLength": 36,
            "type": "string",
            "nullable": true
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Apontamento.TipoProducaoDto": {
        "enum": [
          "Externa",
          "Interna"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.ReadBaixaApontamentoEfetuadoDto": {
        "type": "object",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idLocal": {
            "type": "string",
            "nullable": true
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.TipoProducaoApontamentoDto"
          },
          "tipoEstoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.TipoEstoqueApontamentoDto"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.ReadLoteApontamentoEfetuadoDto"
          },
          "volume": {
            "type": "string",
            "nullable": true
          },
          "produtoSubstituido": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.ReadEntradaApontamentoEfetuadoDto": {
        "type": "object",
        "properties": {
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idLocal": {
            "type": "string",
            "nullable": true
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.TipoProducaoApontamentoDto"
          },
          "tipoEstoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.TipoEstoqueApontamentoDto"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.ReadLoteApontamentoEfetuadoDto"
          },
          "volume": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.ReadLoteApontamentoEfetuadoDto": {
        "type": "object",
        "properties": {
          "numero": {
            "type": "string",
            "nullable": true
          },
          "numeroDiasValidade": {
            "minimum": 0,
            "type": "integer",
            "format": "uint32"
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.TipoApontamentoEfetuadoDto": {
        "enum": [
          "ProcessoIntermediario",
          "ProcessoFinal",
          "RemessaIndustrializacaoLegado",
          "RetornoIndustrializacao",
          "Recurso"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.TipoEstoqueApontamentoDto": {
        "enum": [
          "EP",
          "EPT",
          "ETPE"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.TipoProducaoApontamentoDto": {
        "enum": [
          "Interna",
          "Externa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreateApontamentoProcessoFinalDto": {
        "required": [
          "idOperacao",
          "idOrdemProducao"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "idOrdemProducao": {
            "minLength": 1,
            "type": "string",
            "description": "Ordem de produção informada deverá conter o status disponível para realização de apontamentos."
          },
          "idHorario": {
            "type": "string",
            "nullable": true
          },
          "idOperacao": {
            "minLength": 1,
            "type": "string"
          },
          "dataInicio": {
            "type": "string",
            "description": "Data deve ser igual ou posterior a data e hora de emissão/início da ordem de produção.",
            "format": "date-time"
          },
          "dataFim": {
            "type": "string",
            "description": "Data não deve ser superior a data atual do servidor. Observação: Horário superior é permitido.",
            "format": "date-time"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "informacoesSuplementares": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateInformacoesSuplementaresApontamentoDto"
          },
          "comentarios": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "forcarEncerramentoProcesso": {
            "type": "boolean"
          },
          "motivoEncerramentoForcado": {
            "maxLength": 500,
            "type": "string",
            "description": "Se torna obrigatório apenas quando ativada a propriedade \"Informar motivo nos encerramentos forçados\".",
            "nullable": true
          },
          "insumosConsumidos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateInsumoConsumidoApontamentoDto"
            },
            "nullable": true
          },
          "entradaEstoque": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreateEntradaEstoqueApontamentoDto"
          },
          "perdasEspecieProduto": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreatePerdaEspecieProdutoDto"
            },
            "nullable": true
          },
          "perdasEspecieReclassificacao": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreatePerdaEspecieReclassificacaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreateEntradaEstoqueApontamentoDto": {
        "type": "object",
        "properties": {
          "idLocalDestino": {
            "type": "string",
            "description": "Será priorizado o local de estocagem definido na ordem de produção.",
            "nullable": true
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreateLoteEntradaEstoqueApontamentoDto"
          },
          "volume": {
            "maxLength": 35,
            "type": "string",
            "description": "Caso a propriedade \"Atribuir automaticamente número de série no campo volume\" estiver marcada, este campo será atribuido de forma automática, conforme configuração de número de série para o produto ou produto e itens de grade.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreateLoteEntradaEstoqueApontamentoDto": {
        "type": "object",
        "properties": {
          "numero": {
            "maxLength": 35,
            "type": "string",
            "description": "Será priorizado o lote definido na ordem de produção.\r\n            \r\nO sistema substituirá os dados do lote com base nas [memórias disponíveis](https://help.wk.com.br/712/WK/Produ%C3%A7%C3%A3o/Gerais/Memorias_Disponiveis.htm).",
            "nullable": true
          },
          "dataFabricacao": {
            "type": "string",
            "description": "Será priorizada a data configurada no cadastro de tipos de ordens de produção ou conforme a opção \"Atribuir validade do produto a partir da conclusão do processo\" do cadastro de um processo intermediário.",
            "format": "date"
          },
          "dataValidade": {
            "type": "string",
            "description": "Será priorizada a data configurada no cadastro de tipos de ordens de produção ou, se nenhuma opção configurada, conforme o prazo de validade em dias definido no cadastro do produto produzido.",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreatePerdaEspecieProdutoDto": {
        "required": [
          "idMotivo"
        ],
        "type": "object",
        "properties": {
          "idMotivo": {
            "minLength": 1,
            "type": "string",
            "description": "Deve ser informado um motivo da espécie \"Perda\"."
          },
          "quantidade": {
            "type": "number",
            "description": "A soma das perdas de espécie produto e reclassificação não podem ser superiores a quantidade do apontamento.",
            "format": "double"
          },
          "observacoes": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreatePerdaEspecieReclassificacaoDto": {
        "required": [
          "idLocalDestino",
          "idMotivo",
          "produtoReclassificado"
        ],
        "type": "object",
        "properties": {
          "idMotivo": {
            "minLength": 1,
            "type": "string",
            "description": "Deve ser informado um motivo da espécie \"Perda\"."
          },
          "produtoReclassificado": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoGradeDto"
          },
          "idLocalDestino": {
            "minLength": 1,
            "type": "string",
            "description": "A conta estoque/custo será preenchida conforme o local de destino."
          },
          "quantidadeOrigem": {
            "type": "number",
            "description": "A soma das perdas de espécie produto e reclassificação não podem ser superiores a quantidade do apontamento.",
            "format": "double"
          },
          "quantidadeDestino": {
            "type": "number",
            "format": "double"
          },
          "lote": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreatePerdaEspecieReclassificacaoLoteDto"
          },
          "volume": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoFinal.Create.CreatePerdaEspecieReclassificacaoLoteDto": {
        "type": "object",
        "properties": {
          "numero": {
            "maxLength": 35,
            "type": "string",
            "nullable": true
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ApontamentoProcessoIntermediario.Create.CreateApontamentoProcessoIntermediarioDto": {
        "required": [
          "idOperacao",
          "idOrdemProducao",
          "idProcesso"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "idOrdemProducao": {
            "minLength": 1,
            "type": "string",
            "description": "Ordem de produção informada deverá conter o status disponível para realização de apontamentos."
          },
          "idHorario": {
            "type": "string",
            "nullable": true
          },
          "idProcesso": {
            "minLength": 1,
            "type": "string",
            "description": "Deverá ser informado um processo intermediário da ordem de produção."
          },
          "idOperacao": {
            "minLength": 1,
            "type": "string"
          },
          "dataInicio": {
            "type": "string",
            "description": "Data deve ser igual ou posterior a data e hora de emissão/início da ordem de produção.",
            "format": "date-time"
          },
          "dataFim": {
            "type": "string",
            "description": "Data não deve ser superior a data atual do servidor. Observação: Horário superior é permitido.",
            "format": "date-time"
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "informacoesSuplementares": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateInformacoesSuplementaresApontamentoDto"
          },
          "comentarios": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "forcarEncerramentoProcesso": {
            "type": "boolean"
          },
          "motivoEncerramentoForcado": {
            "maxLength": 500,
            "type": "string",
            "description": "Se torna obrigatório apenas quando ativada a propriedade \"Informar motivo nos encerramentos forçados\".",
            "nullable": true
          },
          "insumosConsumidos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Apontamento.Create.CreateInsumoConsumidoApontamentoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Escala.ReadEscalaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "dataHoraGravacao": {
            "type": "string",
            "format": "date-time"
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "semana": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Escala.ReadSemanaEscalaDto"
            },
            "nullable": true
          },
          "excecao": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Escala.ReadExcecaoEscalaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Escala.ReadExcecaoEscalaDto": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "format": "date"
          },
          "idHorario": {
            "type": "string",
            "nullable": true
          },
          "diaUtil": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Escala.ReadSemanaEscalaDto": {
        "type": "object",
        "properties": {
          "dataInicioValidade": {
            "type": "string",
            "format": "date"
          },
          "idHorarioDomingo": {
            "type": "string",
            "nullable": true
          },
          "idHorarioSegunda": {
            "type": "string",
            "nullable": true
          },
          "idHorarioTerca": {
            "type": "string",
            "nullable": true
          },
          "idHorarioQuarta": {
            "type": "string",
            "nullable": true
          },
          "idHorarioQuinta": {
            "type": "string",
            "nullable": true
          },
          "idHorarioSexta": {
            "type": "string",
            "nullable": true
          },
          "idHorarioSabado": {
            "type": "string",
            "nullable": true
          },
          "diaUtilDomingo": {
            "type": "boolean"
          },
          "diaUtilSegunda": {
            "type": "boolean"
          },
          "diaUtilTerca": {
            "type": "boolean"
          },
          "diaUtilQuarta": {
            "type": "boolean"
          },
          "diaUtilQuinta": {
            "type": "boolean"
          },
          "diaUtilSexta": {
            "type": "boolean"
          },
          "diaUtilSabado": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Escala.TipoSituacaoEscalaDto": {
        "enum": [
          "Todos",
          "Ativo",
          "Inativo"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.FluxoProcesso.ReadFluxoProcessoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idTipoOrdemProducao": {
            "type": "string",
            "nullable": true
          },
          "producaoExterna": {
            "type": "boolean"
          },
          "fluxoNaoSequencial": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.GrupoEscala.ReadGrupoEscalaDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "dataHoraGravacao": {
            "type": "string",
            "format": "date-time"
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.GrupoHorario.ReadGrupoHorarioDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "dataHoraGravacao": {
            "type": "string",
            "format": "date-time"
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.GrupoMotivoPerdaDefeito.ReadGrupoMotivoPerdaDefeitoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.GrupoProjeto.ReadGrupoProjetoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Horario.ReadHorarioDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "dataHoraGravacao": {
            "type": "string",
            "format": "date-time"
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "diaBase": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Horario.TipoDiaBaseDto"
          },
          "inativo": {
            "type": "boolean"
          },
          "horariosEntradaSaida": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.Horario.ReadHorarioEntradaSaidaDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Horario.ReadHorarioEntradaSaidaDto": {
        "type": "object",
        "properties": {
          "horaEntrada": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "horaSaida": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "horaToleranciaEntrada": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          },
          "horaToleranciaSaida": {
            "pattern": "^(?:(?:([01]?\\d|2[0-3]):)?([0-5]?\\d):)?([0-5]?\\d)$",
            "type": "string",
            "example": "00:00:00"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.Horario.TipoDiaBaseDto": {
        "enum": [
          "Nenhum",
          "Entrada",
          "Saida"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.Horario.TipoSituacaoHorarioFiltroDto": {
        "enum": [
          "Todos",
          "Ativo",
          "Inativo"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.InformacaoSuplementar.ReadInformacaoSuplementarDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 9,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 64,
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.InformacaoSuplementar.TipoInformacaoSuplementarDto"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.InformacaoSuplementar.TipoGrupoInformacaoSuplementarDto": {
        "enum": [
          "Todos",
          "Grupo1",
          "Grupo2",
          "Grupo3"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.InformacaoSuplementar.TipoInformacaoSuplementarDto": {
        "enum": [
          "Grupo",
          "Analitica"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.MotivoPerdaDefeito.ReadMotivoPerdaDefeitoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "idsProcesso": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          },
          "especie": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.MotivoPerdaDefeito.TipoEspeciePerdaDefeitoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.MotivoPerdaDefeito.TipoEspeciePerdaDefeitoDto": {
        "enum": [
          "Todas",
          "Perda",
          "Defeito"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.ReadNecessidadeProducaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "chave": {
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "format": "date-time"
          },
          "idEmpresaFilial": {
            "type": "string",
            "nullable": true
          },
          "produto": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "idProjeto": {
            "type": "string",
            "nullable": true
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "previsaoNecessidade": {
            "type": "string",
            "format": "date-time"
          },
          "quantidadeSolicitada": {
            "type": "number",
            "format": "double"
          },
          "quantidadeProgramada": {
            "type": "number",
            "format": "double"
          },
          "quantidadeCancelada": {
            "type": "number",
            "format": "double"
          },
          "quantidadeProduzida": {
            "type": "number",
            "format": "double"
          },
          "origem": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.TipoOrigemNecessidadeProducaoDto"
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.TipoSituacaoNecessidadeProducaoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.TipoOrigemNecessidadeProducaoDto": {
        "enum": [
          "NecessidadeProducao",
          "OrdemProducao",
          "MRP",
          "Agrupamento"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.NecessidadeProducao.TipoSituacaoNecessidadeProducaoDto": {
        "enum": [
          "Pendente",
          "Atendida",
          "Programada",
          "Cancelada",
          "Agrupada",
          "Encerrada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.OperacaoProducao.ReadOperacaoProducaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "nome": {
            "type": "string",
            "nullable": true
          },
          "detalhe": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OperacaoProducao.TipoOperacaoProducaoDto"
          },
          "visualizarApontamentosOrdensProducao": {
            "type": "boolean"
          },
          "visualizarApontamentosRecurso": {
            "type": "boolean"
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OperacaoProducao.TipoOperacaoProducaoDto": {
        "enum": [
          "Operacao",
          "Parada",
          "Servico"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateAtendimentoOrdemProducaoDto": {
        "required": [
          "quantidadeProgramada"
        ],
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoAtendimentoOrdemProducaoCreateDto"
          },
          "idPedido": {
            "type": "string",
            "description": "Campo obrigatório caso o tipo do atendimento for \"Pedido\".",
            "nullable": true
          },
          "idNecessidade": {
            "type": "string",
            "description": "Campo obrigatório caso o tipo do atendimento for \"Necessidade\".",
            "nullable": true
          },
          "quantidadeProgramada": {
            "type": "number",
            "description": "A quantidade programada não pode exceder o saldo a programar do pedido ou necessidade associado.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateInformacoesExtrasOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "informacaoExtra1": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "informacaoExtra2": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "informacaoExtra3": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "informacaoExtra4": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "informacaoExtra5": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateLocalLoteOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "idLocalEstoqueProprio": {
            "type": "string",
            "description": "Prioritariamente o campo será preenchido com o local de estoque próprio definido na ficha técnica.",
            "nullable": true
          },
          "idLocalEstoqueDeTerceiros": {
            "type": "string",
            "description": "Prioritariamente o campo será preenchido com o local de estoque de terceiros definido na ficha técnica.",
            "nullable": true
          },
          "lote": {
            "type": "string",
            "description": "Se não informado, o sistema irá sugerir automaticamente conforme a máscara de lote definida na ficha técnica ou cadastro de produto.",
            "nullable": true
          },
          "dataValidade": {
            "type": "string",
            "description": "Campo só será considerado caso na aba configuração de lote do cadastro de tipos de ordem de produção, a memória \"Data Validade\" estiver com a opção \"Informar na emissão da ordem de produção\" selecionada.",
            "format": "date"
          },
          "idOrdemProducaoReferencia": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateOrdemProducaoDto": {
        "required": [
          "atendimentos",
          "item"
        ],
        "type": "object",
        "properties": {
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.CreateCampoInfoPlusDto"
            },
            "description": "Lista de campos de InfoPlus a serem gravados. Informe apenas os campos que deseja gravar ou alterar, utilizando a propriedade \"posicao\" com a posição do campo desejado.",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "dataEmissao": {
            "type": "string",
            "description": "A data e a hora do movimento não podem ser maior que a do servidor. Se não informada, será utilizado a data e hora atual do servidor.",
            "format": "date-time"
          },
          "idProjeto": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "idFluxo": {
            "type": "string",
            "description": "Se não informado, o sistema irá sugerir automaticamente conforme o fluxo padrão da ficha técnica.",
            "nullable": true
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoProducaoOrdemProducaoDto"
          },
          "idIndustrializador": {
            "type": "string",
            "description": "Campo só será considerado caso o tipo de produção for Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoProducaoOrdemProducaoDto.Externa.",
            "nullable": true
          },
          "efetuarRemessaSimbolicaInsumos": {
            "type": "boolean",
            "description": "Campo só será considerado caso o tipo de produção for Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoProducaoOrdemProducaoDto.Externa."
          },
          "industrializacaoParaTerceiro": {
            "type": "boolean"
          },
          "idCliente": {
            "type": "string",
            "description": "Campo só será considerado caso se tratar de uma industrialização para terceiro.",
            "nullable": true
          },
          "previsao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreatePrevisaoOrdemProducaoDto"
          },
          "localLote": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateLocalLoteOrdemProducaoDto"
          },
          "atendimentos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateAtendimentoOrdemProducaoDto"
            }
          },
          "processos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateProcessoOrdemProducaoDto"
            },
            "description": "Lista de edição de processos preenchidos automaticamente conforme dados definidos na ficha técnica.",
            "nullable": true
          },
          "informacoesExtras": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateInformacoesExtrasOrdemProducaoDto"
          },
          "observacoes": {
            "maxLength": 3000,
            "type": "string",
            "nullable": true
          },
          "idRequisitante": {
            "type": "string",
            "description": "Campo será utilizado para gerar as requisições internas automaticamente, caso no cadastro do tipo de ordem de produção estiver marcada a opção \"Gerar RI automática dos insumos\".",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreatePrevisaoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time"
          },
          "conclusao": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreatePrevisaoProcessoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time"
          },
          "conclusao": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateProcessoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "idProcesso": {
            "type": "string",
            "nullable": true
          },
          "previsao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreatePrevisaoProcessoOrdemProducaoDto"
          },
          "recursos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateRecursoProcessoOrdemProducaoDto"
            },
            "description": "Lista de recursos a acrescentar nos processos.",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.Create.CreateRecursoProcessoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "idRecurso": {
            "type": "string",
            "description": "Apenas será aceito recursos relacionados ao processo.",
            "nullable": true
          },
          "desconsiderarTemposDeProducao": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadAtendimentoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoAtendimentoOrdemProducaoDto"
          },
          "idPedido": {
            "type": "string",
            "nullable": true
          },
          "numeroItemPedido": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "idNecessidade": {
            "type": "string",
            "nullable": true
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "dataEntrega": {
            "type": "string",
            "format": "date"
          },
          "idMovimentoEstoqueOrigem": {
            "type": "string",
            "nullable": true
          },
          "idLocalEstocagemOrigem": {
            "type": "string",
            "nullable": true
          },
          "quantidadeProgramada": {
            "type": "number",
            "format": "double"
          },
          "quantidadeProduzida": {
            "type": "number",
            "format": "double"
          },
          "quantidadeCancelada": {
            "type": "number",
            "format": "double"
          },
          "saldoProduzir": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadCancelamentoInterrupcaoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "idUsuario": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadDatasOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "liberacao": {
            "type": "string",
            "format": "date-time"
          },
          "inicio": {
            "type": "string",
            "format": "date-time"
          },
          "conclusao": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInformacoesExtrasOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "informacaoExtra1": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "informacaoExtra2": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "informacaoExtra3": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "informacaoExtra4": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          },
          "informacaoExtra5": {
            "maxLength": 80,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInsumoProcessoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "insumo": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "quantidadeTotal": {
            "type": "number",
            "format": "double"
          },
          "quantidadeTotalComPerda": {
            "type": "number",
            "format": "double"
          },
          "observacoes": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "lotes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadLoteInsumoOrdemProducaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInsumoProgramadoProcessoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "insumo": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInsumoProcessoOrdemProducaoDto"
          },
          "substitutos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInsumoSubstitutoOrdemProducaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInsumoSubstitutoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "descricao": {
            "maxLength": 82,
            "type": "string",
            "nullable": true
          },
          "observacoes": {
            "maxLength": 1024,
            "type": "string",
            "nullable": true
          },
          "insumos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInsumoProcessoOrdemProducaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadLocalLoteOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "idLocalEstoqueProprio": {
            "type": "string",
            "nullable": true
          },
          "idLocalEstoqueDeTerceiros": {
            "type": "string",
            "nullable": true
          },
          "lote": {
            "type": "string",
            "nullable": true
          },
          "idOrdemProducaoReferencia": {
            "type": "string",
            "nullable": true
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadLoteInsumoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "idLocalEstocagem": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoProducaoOrdemProducaoDto"
          },
          "numeroLote": {
            "type": "string",
            "nullable": true
          },
          "dataFabricacao": {
            "type": "string",
            "format": "date"
          },
          "numeroDias": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "dataValidade": {
            "type": "string",
            "format": "date"
          },
          "idFornecedorLote": {
            "type": "string",
            "nullable": true
          },
          "volume": {
            "type": "string",
            "nullable": true
          },
          "numeroDocumentoOrigem": {
            "type": "string",
            "nullable": true
          },
          "idTerceiroProprietarioETPE": {
            "type": "string",
            "nullable": true
          },
          "numeroFCI": {
            "type": "string",
            "nullable": true
          },
          "conteudoImportado": {
            "type": "boolean"
          },
          "parcelaImportadaUnitaria": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "listaInfoPlus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.InfoPlus.ReadCampoInfoPlusDto"
            },
            "nullable": true
          },
          "chave": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "especie": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoEspecieOrdemProducaoDto"
          },
          "dataEmissao": {
            "type": "string",
            "format": "date-time"
          },
          "numero": {
            "minimum": 0,
            "type": "integer",
            "format": "uint64"
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoSituacaoOrdemProducaoDto"
          },
          "impressa": {
            "type": "boolean"
          },
          "cancelamentoInterrupcao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadCancelamentoInterrupcaoOrdemProducaoDto"
          },
          "idProjeto": {
            "type": "string",
            "nullable": true
          },
          "item": {
            "$ref": "#/components/schemas/Radar.API.Model.Dtos.V1.ProdutoServico.ProdutoServicoDto"
          },
          "quantidadeProgramada": {
            "type": "number",
            "format": "double"
          },
          "quantidadeAtendida": {
            "type": "number",
            "format": "double"
          },
          "saldoProduzir": {
            "type": "number",
            "format": "double"
          },
          "idTipoOrdemProducao": {
            "type": "string",
            "nullable": true
          },
          "idFluxo": {
            "type": "string",
            "nullable": true
          },
          "quantidadeReferencia": {
            "type": "number",
            "format": "double"
          },
          "tipoProducao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoProducaoOrdemProducaoDto"
          },
          "idIndustrializador": {
            "type": "string",
            "nullable": true
          },
          "efetuarRemessaSimbolicaInsumos": {
            "type": "boolean"
          },
          "industrializacaoParaTerceiro": {
            "type": "boolean"
          },
          "idCliente": {
            "type": "string",
            "nullable": true
          },
          "datas": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadDatasOrdemProducaoDto"
          },
          "previsao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadPrevisaoOrdemProducaoDto"
          },
          "localLote": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadLocalLoteOrdemProducaoDto"
          },
          "atendimentos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadAtendimentoOrdemProducaoDto"
            },
            "nullable": true
          },
          "processos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadProcessoOrdemProducaoDto"
            },
            "nullable": true
          },
          "informacoesExtras": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInformacoesExtrasOrdemProducaoDto"
          },
          "observacoes": {
            "maxLength": 3000,
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadPrevisaoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time"
          },
          "conclusao": {
            "type": "string",
            "format": "date-time"
          },
          "tempoProducao": {
            "type": "string",
            "example": "00:00:00"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadPrevisaoProcessoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "inicio": {
            "type": "string",
            "format": "date-time"
          },
          "conclusao": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadProcessoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "idProcesso": {
            "type": "string",
            "nullable": true
          },
          "recebeApontamento": {
            "type": "boolean"
          },
          "tempoPadraoPorUnidadeEmMinutos": {
            "type": "number",
            "format": "double"
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoSituacaoProcessoOrdemProducaoDto"
          },
          "previsao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadPrevisaoProcessoOrdemProducaoDto"
          },
          "detalhamento": {
            "maxLength": 2000,
            "type": "string",
            "nullable": true
          },
          "recursos": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadRecursoProcessoOrdemProducaoDto"
            },
            "nullable": true
          },
          "insumosProgramados": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadInsumoProgramadoProcessoOrdemProducaoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.ReadRecursoProcessoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "idRecurso": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoAtendimentoOrdemProducaoCreateDto": {
        "enum": [
          "Pedido",
          "Necessidade",
          "Complemento"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoAtendimentoOrdemProducaoDto": {
        "enum": [
          "Pedido",
          "Necessidade",
          "Complemento",
          "Reprocesso"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoEspecieOrdemProducaoDto": {
        "enum": [
          "Padrao",
          "Avulsa",
          "Reprocesso"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoPeriodoFiltroOrdemProducaoDto": {
        "enum": [
          "Emissao",
          "Liberacao",
          "Producao",
          "PrevisaoInicio"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoProducaoOrdemProducaoDto": {
        "enum": [
          "Interna",
          "Externa"
        ],
        "type": "string",
        "description": "Caso o fluxo estiver cadastrado como produção externa, será aplicado obrigatoriamente a opção Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoProducaoOrdemProducaoDto.Externa."
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoSituacaoImpressaoOrdemProducaoDto": {
        "enum": [
          "Impressa",
          "NaoImpressa"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoSituacaoOrdemProducaoDto": {
        "enum": [
          "Planejada",
          "Suspensa",
          "Cancelada",
          "NaoIniciada",
          "Interrompida",
          "Iniciada",
          "Concluida",
          "ConcluidaComPerda"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.OrdemProducao.TipoSituacaoProcessoOrdemProducaoDto": {
        "enum": [
          "Cancelado",
          "NaoIniciado",
          "Interrompido",
          "EmProducao",
          "Parado",
          "Concluido",
          "EmReprocesso",
          "ConcluidoComPerda"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.Processo.ReadProcessoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ProjetoProducao.ReadProjetoProducaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "idGrupo": {
            "type": "string",
            "nullable": true
          },
          "situacao": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ProjetoProducao.TipoSituacaoProjetoProducaoDto"
          }
        },
        "additionalProperties": false
      },
      "Radar.API.Model.Producao.Dtos.V1.ProjetoProducao.TipoSituacaoProjetoProducaoDto": {
        "enum": [
          "Desenvolvimento",
          "Producao",
          "Encerrada"
        ],
        "type": "string"
      },
      "Radar.API.Model.Producao.Dtos.V1.TipoOrdemProducao.ReadTipoOrdemProducaoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "codigo": {
            "maxLength": 10,
            "type": "string",
            "nullable": true
          },
          "descricao": {
            "maxLength": 50,
            "type": "string",
            "nullable": true
          },
          "inativo": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "ReadApontamentoEfetuadoDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "codigoIntegrador": {
            "type": "string",
            "nullable": true
          },
          "chave": {
            "type": "string",
            "nullable": true
          },
          "idFilial": {
            "type": "string",
            "nullable": true
          },
          "idOrdemProducao": {
            "type": "string",
            "nullable": true
          },
          "idProcesso": {
            "type": "string",
            "nullable": true
          },
          "idOperacao": {
            "type": "string",
            "nullable": true
          },
          "idHorario": {
            "type": "string",
            "nullable": true
          },
          "dataInicio": {
            "type": "string",
            "format": "date-time"
          },
          "dataFim": {
            "type": "string",
            "format": "date-time"
          },
          "comentario": {
            "type": "string",
            "nullable": true
          },
          "quantidade": {
            "type": "number",
            "format": "double"
          },
          "quantidadeReferenciaConsumo": {
            "type": "number",
            "format": "double"
          },
          "idUnidadeMedida": {
            "type": "string",
            "nullable": true
          },
          "idInfoSuplementar1": {
            "type": "string",
            "nullable": true
          },
          "idInfoSuplementar2": {
            "type": "string",
            "nullable": true
          },
          "idInfoSuplementar3": {
            "type": "string",
            "nullable": true
          },
          "tipo": {
            "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.TipoApontamentoEfetuadoDto"
          },
          "baixas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.ReadBaixaApontamentoEfetuadoDto"
            },
            "nullable": true
          },
          "entradas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Radar.API.Model.Producao.Dtos.V1.ApontamentoEfetuado.ReadEntradaApontamentoEfetuadoDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "No header da requisição adicionar Token para autorização.",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ],
  "tags": [
    {
      "name": "AcompanhamentoPedidoFluxo",
      "description": "Endpoints com operações referentes ao cadastro de Acompanhamento de Pedidos - Fluxos do WK Radar Comercial."
    },
    {
      "name": "AcompanhamentoPedidoProcesso",
      "description": "Endpoints com operações referentes ao cadastro de Acompanhamento de Pedidos - Processos do WK Radar Comercial."
    },
    {
      "name": "AcompanhamentoPedidoSituacao",
      "description": "Endpoints com operações referentes ao cadastro de Acompanhamento de Pedidos - Situações do WK Radar Comercial."
    },
    {
      "name": "NotaFiscal",
      "description": "Endpoints com operações referentes ao cadastro de Nota Fiscal do WK Radar Comercial."
    },
    {
      "name": "Pedido",
      "description": "Endpoints com operações referentes ao cadastro de Pedidos do WK Radar Comercial."
    },
    {
      "name": "Cotacao",
      "description": "Endpoints com operações referentes ao cadastro de Cotações do WK Radar Compras."
    },
    {
      "name": "OrdemCompra",
      "description": "Endpoints com operações referentes ao cadastro de Ordens de Compra do WK Radar Compras."
    },
    {
      "name": "PreRegistroNotas",
      "description": "Endpoints com operações referentes ao cadastro de Pré-registros de Notas do WK Radar Compras."
    },
    {
      "name": "RegistroEntrada",
      "description": "Endpoints com operações referentes ao cadastro de Registro de Entrada do WK Radar Compras."
    },
    {
      "name": "LancamentoContabil",
      "description": "Endpoints com operações referentes às movimentações de Lançamentos Contábeis do WK Radar Contábil."
    },
    {
      "name": "Token",
      "description": "Endpoints de autenticação da API."
    },
    {
      "name": "CadastroInfoPlus",
      "description": "Endpoints com operações referentes ao cadastro de Info Plus do WK Radar Empresarial."
    },
    {
      "name": "CategoriaCFRT",
      "description": "Endpoints com operações referentes ao cadastro de Categorias de CFRT do WK Radar Empresarial."
    },
    {
      "name": "CategoriaProduto",
      "description": "Endpoints com operações referentes ao cadastro de Categorias de Produto do WK Radar Empresarial."
    },
    {
      "name": "Cliente",
      "description": "Endpoints com operações referentes ao cadastro de Clientes do WK Radar Empresarial."
    },
    {
      "name": "Comprador",
      "description": "Endpoints com operações referentes ao cadastro de Comprador do WK Radar Empresarial."
    },
    {
      "name": "CondicaoPagamento",
      "description": "Endpoints com operações referentes ao cadastro de Condições de Pagamento do WK Radar Empresarial."
    },
    {
      "name": "Contato",
      "description": "Endpoints com operações referentes aos contatos do cadastro de clientes do WK Radar Empresarial."
    },
    {
      "name": "Departamento",
      "description": "Endpoints com operações referentes ao cadastro de Departamento do WK Radar Empresarial."
    },
    {
      "name": "Documento",
      "description": "Endpoints com operações referentes ao cadastro de Documentos do WK Radar Empresarial."
    },
    {
      "name": "Estado",
      "description": "Endpoints com operações referentes ao cadastro de Estados do WK Radar Empresarial."
    },
    {
      "name": "Filial",
      "description": "Endpoints com operações referentes ao cadastro de Empresas/Filiais do WK Radar Empresarial."
    },
    {
      "name": "FormaPagamento",
      "description": "Endpoints com operações referentes ao cadastro de Formas de Pagamento do WK Radar Empresarial."
    },
    {
      "name": "Fornecedor",
      "description": "Endpoints com operações referentes ao cadastro de Fornecedores do WK Radar Empresarial."
    },
    {
      "name": "GradeContabil",
      "description": "Endpoints com operações referentes ao cadastro de Grade Contábil."
    },
    {
      "name": "Grade",
      "description": "Endpoints com operações referentes ao cadastro de Grades do WK Radar Empresarial."
    },
    {
      "name": "GrupoNaturezaEFDReinf",
      "description": "Endpoints com operações referentes ao cadastro de Naturezas EFD Reinf do WK Radar Empresarial."
    },
    {
      "name": "GrupoRecurso",
      "description": "Endpoints com operações referentes ao cadastro de Grupo de Recurso do WK Radar Empresarial."
    },
    {
      "name": "Historico",
      "description": "Endpoints com operações referentes ao cadastro de Históricos do WK Radar Empresarial."
    },
    {
      "name": "Importacao",
      "description": "Endpoint referente a realização de importação de dados do WK Radar."
    },
    {
      "name": "Indice",
      "description": "Endpoints com operações referentes ao cadastro de Índices do WK Radar Empresarial."
    },
    {
      "name": "InformacaoBancaria",
      "description": "Endpoints com operações referentes ao cadastro de Informações Bancárias do tipo Conta Bancária do WK Radar Empresarial."
    },
    {
      "name": "InformacaoBancariaPix",
      "description": "Endpoints com operações referentes ao cadastro de Informações Bancárias do tipo Pix do WK Radar Empresarial."
    },
    {
      "name": "InformacaoComplementar",
      "description": "Endpoints com operações referentes ao cadastro de Informações Complementares do WK Radar Empresarial."
    },
    {
      "name": "ItemGrade",
      "description": "Endpoints com operações referentes à lista de Itens de Grade do cadastro de Grades do WK Radar Empresarial."
    },
    {
      "name": "Mensagem",
      "description": "Endpoints com operações referentes ao cadastro de Mensagens do WK Radar Empresarial."
    },
    {
      "name": "Motorista",
      "description": "Endpoints com operações referentes ao cadastro de Motoristas do WK Radar Empresarial."
    },
    {
      "name": "Municipio",
      "description": "Endpoints com operações referentes ao cadastro de Municípios do WK Radar Empresarial."
    },
    {
      "name": "NaturezaEFDReinf",
      "description": "Endpoints com operações referentes ao cadastro de Naturezas EFD Reinf do WK Radar Empresarial."
    },
    {
      "name": "NaturezaOperacao",
      "description": "Endpoints com operações referentes ao cadastro de Natureza De Operação do WK Radar Empresarial."
    },
    {
      "name": "OperacaoComercial",
      "description": "Endpoints com operações referentes ao cadastro de Operações Comerciais do WK Radar Empresarial."
    },
    {
      "name": "Pessoa",
      "description": "Endpoints com operações referentes ao cadastro de Pessoas do WK Radar Empresarial."
    },
    {
      "name": "PlanoContabil",
      "description": "Endpoints com operações referentes ao cadastro de Plano de Conta Contábil do WK Radar Empresarial."
    },
    {
      "name": "PlanoGerencial",
      "description": "Endpoints com operações referentes ao cadastro de Plano de Conta Gerencial do WK Radar Empresarial."
    },
    {
      "name": "Portador",
      "description": "Endpoints com operações referentes ao cadastro de Portador do WK Radar Empresarial."
    },
    {
      "name": "Produto",
      "description": "Endpoints com operações referentes ao cadastro de Produtos do WK Radar Empresarial."
    },
    {
      "name": "Recurso",
      "description": "Endpoints com operações referentes ao cadastro de Recursos do WK Radar Empresarial."
    },
    {
      "name": "Representante",
      "description": "Endpoints com operações referentes ao cadastro de Representantes do WK Radar Empresarial."
    },
    {
      "name": "Requisitante",
      "description": "Endpoints com operações referentes ao cadastro de Requisitantes do WK Radar Empresarial."
    },
    {
      "name": "Servico",
      "description": "Endpoints com operações referentes ao cadastro de Serviços do WK Radar Empresarial."
    },
    {
      "name": "TabelaPrecoVendaProduto",
      "description": "Endpoints com operações referentes ao cadastro de Tabela de Preço de Venda de Produto do WK Radar Empresarial."
    },
    {
      "name": "TabelaPrecoVendaServico",
      "description": "Endpoints com operações referentes ao cadastro de Tabela de Preço de Venda de Serviço do WK Radar Empresarial."
    },
    {
      "name": "TipoCobranca",
      "description": "Endpoints com operações referentes ao cadastro de Tipos de Cobrança do WK Radar."
    },
    {
      "name": "TipoPeriodo",
      "description": "Endpoints com operações referentes ao cadastro de Tipos de Período do WK Radar Empresarial."
    },
    {
      "name": "TipoRecolhimento",
      "description": "Endpoints com operações referentes ao cadastro de Tipo de Recolhimento do WK Radar Empresarial."
    },
    {
      "name": "TipoRecurso",
      "description": "Endpoints com operações referentes ao cadastro de Tipos de Recurso do WK Radar Empresarial."
    },
    {
      "name": "TipoVencimento",
      "description": "Endpoints com operações referentes ao cadastro de Tipos de Vencimento do WK Radar Empresarial."
    },
    {
      "name": "Transportadora",
      "description": "Endpoints com operações referentes ao cadastro de Transportadoras do WK Radar Empresarial."
    },
    {
      "name": "UnidadeLogistica",
      "description": "Endpoints com operações referentes ao cadastro de Unidades Logísticas do WK Radar Empresarial."
    },
    {
      "name": "UnidadeMedidaProduto",
      "description": "Endpoints com operações referentes ao cadastro de Unidades de Medida de Produto do WK Radar Empresarial."
    },
    {
      "name": "UnidadeMedidaServico",
      "description": "Endpoints com operações referentes ao cadastro de Unidades de Medida de Serviço do WK Radar Empresarial."
    },
    {
      "name": "Usuario",
      "description": "Endpoints com operações referentes ao cadastro de Usuario do WK Radar Empresarial."
    },
    {
      "name": "Veiculo",
      "description": "Endpoints com operações referentes ao cadastro de Veículos do WK Radar Empresarial."
    },
    {
      "name": "Vendedor",
      "description": "Endpoints com operações referentes ao cadastro de Vendedores do WK Radar Empresarial."
    },
    {
      "name": "LocalArmazenagem",
      "description": "Endpoints com operações referentes ao cadastro de Locais de Armazenagem do WK Radar Estoque."
    },
    {
      "name": "MovimentoEstoque",
      "description": "Endpoints com operações referentes ao cadastro de Movimentos de Estoque do WK Radar Estoque."
    },
    {
      "name": "Adiantamento",
      "description": "Endpoints com operações referentes às movimentações de Adiantamentos do WK Radar Financeiro."
    },
    {
      "name": "BaixaContasPagar",
      "description": "Endpoints com operações referentes às movimentações de Baixas de Contas a Pagar do WK Radar Financeiro."
    },
    {
      "name": "BaixaContasReceber",
      "description": "Endpoints com operações referentes às movimentações de Baixas de Contas a Receber do WK Radar Financeiro."
    },
    {
      "name": "CarteiraCobranca",
      "description": "Endpoints com operações referentes ao cadastro de Carteiras de Cobrança do WK Radar Financeiro."
    },
    {
      "name": "CategoriaAdiantamento",
      "description": "Endpoints com operações referentes ao cadastro de Categoria de Adiantamento do WK Radar Financeiro."
    },
    {
      "name": "Cobranca",
      "description": "Endpoints com operações referentes às movimentações de Cobrança do WK Radar Financeiro."
    },
    {
      "name": "InstrucaoBancaria",
      "description": "Endpoints com operações referentes ao cadastro de Instruções Bancárias do WK Radar Financeiro."
    },
    {
      "name": "TituloContasPagar",
      "description": "Endpoints com operações referentes às movimentações de Títulos de Contas a Pagar do WK Radar Financeiro."
    },
    {
      "name": "TituloContasReceber",
      "description": "Endpoints com operações referentes às movimentações de Títulos de Contas a Receber do WK Radar Financeiro."
    },
    {
      "name": "AdmissaoPreliminar",
      "description": "Endpoints com operações referentes ao cadastro de Admissões Preliminares do WK Radar Folha."
    },
    {
      "name": "Afastamento",
      "description": "Endpoints com operações referentes ao cadastro de Afastamentos do WK Radar Folha."
    },
    {
      "name": "Cargo",
      "description": "Endpoints com operações referentes ao cadastro de Cargos do tipo cargo do WK Radar Folha."
    },
    {
      "name": "Cbo",
      "description": "Endpoints com operações referentes ao cadastro de CBOs do WK Radar Folha."
    },
    {
      "name": "CentroCusto",
      "description": "Endpoints com operações referentes ao cadastro de Centros de Custos Analíticos do WK Radar Folha."
    },
    {
      "name": "Conselho",
      "description": "Endpoints com operações referentes ao cadastro de Conselhos do WK Radar Folha."
    },
    {
      "name": "DepartamentoFolha",
      "description": "Endpoints com operações referentes ao cadastro de Departamentos do WK Radar Folha."
    },
    {
      "name": "Empregado",
      "description": "Endpoints com operações referentes ao cadastro de Empregados do WK Radar Folha."
    },
    {
      "name": "EscalaTrabalho",
      "description": "Endpoints com operações referentes ao cadastro de Escalas do WK Radar Folha."
    },
    {
      "name": "GrupoCargo",
      "description": "Endpoints com operações referentes ao cadastro de Cargos do tipo Grupo do WK Radar Folha."
    },
    {
      "name": "GrupoTerceiro",
      "description": "Endpoints com operações referentes ao cadastro de Grupo de Terceiros do WK Radar Folha."
    },
    {
      "name": "HorarioTrabalho",
      "description": "Endpoints com operações referentes ao cadastro de Horário do Radar Folha."
    },
    {
      "name": "IndiceFgts",
      "description": "Endpoints com operações referentes ao cadastro de Índices FGTS do WK Radar Folha."
    },
    {
      "name": "Rubrica",
      "description": "Endpoints com operações referentes ao cadastro de Rubricas do WK Radar Folha."
    },
    {
      "name": "RubricaProgramada",
      "description": "Endpoints com operações referentes ao cadastro de Rubricas Programadas do WK Radar Folha."
    },
    {
      "name": "SalarioAtual",
      "description": "Endpoints com operações referentes ao cadastro de Salários Atuais do WK Radar Folha."
    },
    {
      "name": "SindicatoEmpregado",
      "description": "Endpoints com operações referentes ao cadastro de Sindicatos de Empregados do WK Radar Folha."
    },
    {
      "name": "Situacao",
      "description": "Endpoints com operações referentes ao cadastro de Situações do Radar Folha."
    },
    {
      "name": "Terceiro",
      "description": "Endpoints com operações referentes ao cadastro de Terceiros do WK Radar Folha."
    },
    {
      "name": "TituloCentroCusto",
      "description": "Endpoints com operações referentes ao cadastro de Centros de Custos Títulos do WK Radar Folha."
    },
    {
      "name": "Contrato",
      "description": "Endpoints com operações referentes ao cadastro de Contrato do WK Radar Gerenciador."
    },
    {
      "name": "Defeito",
      "description": "Endpoints com operações referentes ao cadastro de Defeito do WK Radar Gerenciador."
    },
    {
      "name": "Equipamento",
      "description": "Endpoints com operações referentes ao cadastro de Equipamento do WK Radar Gerenciador."
    },
    {
      "name": "Faixa",
      "description": "Endpoints com operações referentes ao cadastro de Faixas do WK Radar Gerenciador."
    },
    {
      "name": "Marca",
      "description": "Endpoints com operações referentes ao cadastro de Marca do WK Radar Gerenciador."
    },
    {
      "name": "Medicao",
      "description": "Endpoints com operações referentes ao movimento de Medições do WK Radar Gerenciador."
    },
    {
      "name": "Modelo",
      "description": "Endpoints com operações referentes ao cadastro de Modelo do WK Radar Gerenciador."
    },
    {
      "name": "Projeto",
      "description": "Endpoints com operações referentes ao cadastro de Projetos do WK Radar Gerenciador."
    },
    {
      "name": "SituacaoEquipamento",
      "description": "Endpoints com operações referentes ao cadastro de Situação do Equipamento do WK Radar Gerenciador."
    },
    {
      "name": "Tipo",
      "description": "Endpoints com operações referentes ao cadastro de Tipo do WK Radar Gerenciador."
    },
    {
      "name": "Apontamento",
      "description": "Endpoints com operações referentes ao cadastro de Apontamentos de Processo Final e Intermediário do WK Radar Produção."
    },
    {
      "name": "ApontamentoEfetuado",
      "description": "Endpoints com operações referentes ao cadastro de Apontamentos Efetuados do WK Radar Produção."
    },
    {
      "name": "Escala",
      "description": "Endpoints com operações referentes ao cadastro de Escalas do WK Radar Produção."
    },
    {
      "name": "FluxoProcesso",
      "description": "Endpoints com operações referentes ao cadastro de Fluxos de Processo do WK Radar Produção."
    },
    {
      "name": "GrupoEscala",
      "description": "Endpoints com operações referentes ao cadastro de Grupo de Escalas do WK Radar Produção."
    },
    {
      "name": "GrupoHorario",
      "description": "Endpoints com operações referentes ao cadastro de Grupo de Horário do Radar Produção."
    },
    {
      "name": "GrupoMotivoPerdaDefeito",
      "description": "Endpoints com operações referentes ao cadastro de Grupos de Motivos de Perdas e Defeitos do WK Radar Produção."
    },
    {
      "name": "GrupoProjeto",
      "description": "Endpoints com operações referentes ao cadastro de Grupo de Projeto do Radar Produção."
    },
    {
      "name": "Horario",
      "description": "Endpoints com operações referentes ao cadastro de Horário do Radar Produção."
    },
    {
      "name": "InformacaoSuplementar",
      "description": "Endpoints com operações referentes ao cadastro de Informações Suplementares do WK Radar Produção."
    },
    {
      "name": "MotivoPerdaDefeito",
      "description": "Endpoints com operações referentes ao cadastro de Motivo de Perdas ou Defeitos do WK Radar Produção."
    },
    {
      "name": "NecessidadeProducao",
      "description": "Endpoints com operações referentes ao cadastro de Necessidades de Produção do Radar Produção."
    },
    {
      "name": "OperacaoProducao",
      "description": "Endpoints com operações referentes ao cadastro de Operações da Produção do WK Radar Produção."
    },
    {
      "name": "OrdemProducao",
      "description": "Endpoints com operações referentes ao cadastro de Ordens de Produção do WK Radar Produção."
    },
    {
      "name": "Processo",
      "description": "Endpoints com operações referentes ao cadastro de Processos do WK Radar Produção."
    },
    {
      "name": "ProjetoProducao",
      "description": "Endpoints com operações referentes ao cadastro de Projetos do Radar Produção."
    },
    {
      "name": "TipoOrdemProducao",
      "description": "Endpoints com operações referentes ao cadastro de Tipos de Ordem de Produção do WK Radar Produção."
    }
  ],
  "x-tagGroups": [
    {
      "name": "Comercial",
      "tags": [
        "AcompanhamentoPedidoFluxo",
        "AcompanhamentoPedidoProcesso",
        "AcompanhamentoPedidoSituacao",
        "NotaFiscal",
        "Pedido"
      ]
    },
    {
      "name": "Compras",
      "tags": [
        "Cotacao",
        "OrdemCompra",
        "PreRegistroNotas",
        "RegistroEntrada"
      ]
    },
    {
      "name": "Contábil",
      "tags": [
        "LancamentoContabil"
      ]
    },
    {
      "name": "Core",
      "tags": [
        "Token"
      ]
    },
    {
      "name": "Empresarial",
      "tags": [
        "CadastroInfoPlus",
        "CategoriaCFRT",
        "CategoriaProduto",
        "Cliente",
        "Comprador",
        "CondicaoPagamento",
        "Contato",
        "Departamento",
        "Documento",
        "Estado",
        "Filial",
        "FormaPagamento",
        "Fornecedor",
        "GradeContabil",
        "Grade",
        "GrupoNaturezaEFDReinf",
        "GrupoRecurso",
        "Historico",
        "Importacao",
        "Indice",
        "InformacaoBancaria",
        "InformacaoBancariaPix",
        "InformacaoComplementar",
        "ItemGrade",
        "Mensagem",
        "Motorista",
        "Municipio",
        "NaturezaEFDReinf",
        "NaturezaOperacao",
        "OperacaoComercial",
        "Pessoa",
        "PlanoContabil",
        "PlanoGerencial",
        "Portador",
        "Produto",
        "Recurso",
        "Representante",
        "Requisitante",
        "Servico",
        "TabelaPrecoVendaProduto",
        "TabelaPrecoVendaServico",
        "TipoCobranca",
        "TipoPeriodo",
        "TipoRecolhimento",
        "TipoRecurso",
        "TipoVencimento",
        "Transportadora",
        "UnidadeLogistica",
        "UnidadeMedidaProduto",
        "UnidadeMedidaServico",
        "Usuario",
        "Veiculo",
        "Vendedor"
      ]
    },
    {
      "name": "Estoque",
      "tags": [
        "LocalArmazenagem",
        "MovimentoEstoque"
      ]
    },
    {
      "name": "Financeiro",
      "tags": [
        "Adiantamento",
        "BaixaContasPagar",
        "BaixaContasReceber",
        "CarteiraCobranca",
        "CategoriaAdiantamento",
        "Cobranca",
        "InstrucaoBancaria",
        "TituloContasPagar",
        "TituloContasReceber"
      ]
    },
    {
      "name": "Folha",
      "tags": [
        "AdmissaoPreliminar",
        "Afastamento",
        "Cargo",
        "Cbo",
        "CentroCusto",
        "Conselho",
        "DepartamentoFolha",
        "Empregado",
        "EscalaTrabalho",
        "GrupoCargo",
        "GrupoTerceiro",
        "HorarioTrabalho",
        "IndiceFgts",
        "Rubrica",
        "RubricaProgramada",
        "SalarioAtual",
        "SindicatoEmpregado",
        "Situacao",
        "Terceiro",
        "TituloCentroCusto"
      ]
    },
    {
      "name": "Gerenciador",
      "tags": [
        "Contrato",
        "Defeito",
        "Equipamento",
        "Faixa",
        "Marca",
        "Medicao",
        "Modelo",
        "Projeto",
        "SituacaoEquipamento",
        "Tipo"
      ]
    },
    {
      "name": "Produção",
      "tags": [
        "Apontamento",
        "ApontamentoEfetuado",
        "Escala",
        "FluxoProcesso",
        "GrupoEscala",
        "GrupoHorario",
        "GrupoMotivoPerdaDefeito",
        "GrupoProjeto",
        "Horario",
        "InformacaoSuplementar",
        "MotivoPerdaDefeito",
        "NecessidadeProducao",
        "OperacaoProducao",
        "OrdemProducao",
        "Processo",
        "ProjetoProducao",
        "TipoOrdemProducao"
      ]
    }
  ]
}